(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[9618],{49537:(e,l,a)=>{"use strict";a.r(l),a.d(l,{assets:()=>me,contentTitle:()=>de,default:()=>pe,frontMatter:()=>ce,metadata:()=>r,toc:()=>ue});const r=JSON.parse('{"id":"components/inputs/numeric-text-box/material","title":"Material","description":"The following examples demonstrates the Numeric Text Boxes in action.","source":"@site/docs/components/inputs/numeric-text-box/material.mdx","sourceDirName":"components/inputs/numeric-text-box","slug":"/components/inputs/numeric-text-box/material","permalink":"/flexnative/docs/components/inputs/numeric-text-box/material","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/components/inputs/numeric-text-box/material.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{"inline":false,"label":"Component","permalink":"/flexnative/docs/tags/component","description":"Create user interfaces from components."}],"version":"current","lastUpdatedAt":1727136000000,"sidebarPosition":1,"frontMatter":{"title":"Material","sidebar_position":1,"sidebar_class_name":"nav_icon material","last_update":{"date":"2024-09-24T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework","component"]},"sidebar":"componentsSidebar","previous":{"title":"Default","permalink":"/flexnative/docs/components/inputs/numeric-text-box/default"},"next":{"title":"Text Box","permalink":"/flexnative/docs/components/inputs/text-box/"}}');var n=a(74848),t=a(28453),o=a(45424),i=a(96540),s=a(75117);const c=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"With actions"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Without actions",actions:!1})]})}},d="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 21:59:10\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:13:08\n * @ Description: Examples of NumericTextBox component with actions.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='With actions' />\n        <NumericTextBox material label='Label' placeholder='Without actions' actions={false} />\n      </div>\n    );\n  }\n}",m=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Step 1 (default)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Step 5",step:5}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Step 10",step:10}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Step 50",step:50}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Step 100",step:100}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Step 1000",step:1e3})]})}},u="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:06:09\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:18:58\n * @ Description: Examples of NumericTextBox component increment / decrement steps.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='Step 1 (default)' />\n        <NumericTextBox material label='Label' placeholder='Step 5' step={5} />\n        <NumericTextBox material label='Label' placeholder='Step 10' step={10} />\n        <NumericTextBox material label='Label' placeholder='Step 50' step={50} />\n        <NumericTextBox material label='Label' placeholder='Step 100' step={100} />\n        <NumericTextBox material label='Label' placeholder='Step 1000' step={1000} />\n      </div>\n    );\n  }\n}",x=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"primary",color:"primary"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"dark",color:"dark"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"info",color:"info"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"warning",color:"warning"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"default",color:"default"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",color:"rgb(237, 20, 61)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",color:"hwb(349 8% 7%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",color:"hsl(349, 86%, 50%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"secondary",color:"secondary"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"light",color:"light"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"success",color:"success"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"error",color:"error"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"crimson",color:"crimson"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"#ed143d",color:"#ed143d"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",color:"rgba(237, 20, 61, 0.5)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",color:"hsla(349, 86%, 50% / 0.5)"})]})}},p="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:18:18\n * @ Description: Examples of NumericTextBox component with different colors.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='primary' color='primary'/>\n        <NumericTextBox material label='Label' placeholder='dark' color='dark'/>\n        <NumericTextBox material label='Label' placeholder='info' color='info'/>\n        <NumericTextBox material label='Label' placeholder='warning' color='warning' />\n        <NumericTextBox material label='Label' placeholder='default' color='default'/>\n        <NumericTextBox material label='Label' placeholder='rgb(237, 20, 61)' color='rgb(237, 20, 61)'/>\n        <NumericTextBox material label='Label' placeholder='hwb(349 8% 7%)' color='hwb(349 8% 7%)'/>\n        <NumericTextBox material label='Label' placeholder='hsl(349, 86%, 50%)' color='hsl(349, 86%, 50%)' />\n\n        <NumericTextBox material label='Label' placeholder='secondary' color='secondary'/>\n        <NumericTextBox material label='Label' placeholder='light' color='light'/>\n        <NumericTextBox material label='Label' placeholder='success' color='success'/>\n        <NumericTextBox material label='Label' placeholder='error' color='error'/>\n        <NumericTextBox material label='Label' placeholder='crimson' color='crimson'/>\n        <NumericTextBox material label='Label' placeholder='#ed143d' color='#ed143d'/>\n        <NumericTextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' color='rgba(237, 20, 61, 0.5)'/>\n        <NumericTextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' color='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",b=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"crimson",borderColor:"crimson"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"#ed143d",borderColor:"#ed143d"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",borderColor:"hwb(349 8% 7%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61 / 0.5)",borderColor:"rgba(237, 20, 61 / 0.5)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",borderColor:"rgb(237, 20, 61)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",borderColor:"rgba(237, 20, 61, 0.5)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",borderColor:"hsl(349, 86%, 50%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",borderColor:"hsla(349, 86%, 50% / 0.5)"})]})}},h="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:41:55\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:17:55\n * @ Description: Examples of NumericTextBox component with border colors.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='crimson' borderColor='crimson' />\n        <NumericTextBox material label='Label' placeholder='#ed143d' borderColor='#ed143d' />\n        <NumericTextBox material label='Label' placeholder='hwb(349 8% 7%)' borderColor='hwb(349 8% 7%)' />\n        <NumericTextBox material label='Label' placeholder='rgba(237, 20, 61 / 0.5)' borderColor='rgba(237, 20, 61 / 0.5)' />\n\n        <NumericTextBox material label='Label' placeholder='rgb(237, 20, 61)' borderColor='rgb(237, 20, 61)' />\n        <NumericTextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' borderColor='rgba(237, 20, 61, 0.5)' />\n        <NumericTextBox material label='Label' placeholder='hsl(349, 86%, 50%)' borderColor='hsl(349, 86%, 50%)' />\n        <NumericTextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' borderColor='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",f=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"crimson",activeBorderColor:"crimson"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"#ed143d",activeBorderColor:"#ed143d"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",activeBorderColor:"hwb(349 8% 7%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61 / 0.5)",activeBorderColor:"rgba(237, 20, 61 / 0.5)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",activeBorderColor:"rgb(237, 20, 61)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",activeBorderColor:"rgba(237, 20, 61, 0.5)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",activeBorderColor:"hsl(349, 86%, 50%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",activeBorderColor:"hsla(349, 86%, 50% / 0.5)"})]})}},v="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:47:01\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:17:21\n * @ Description: Examples of NumericTextBox component in with active border colors.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='crimson' activeBorderColor='crimson' />\n        <NumericTextBox material label='Label' placeholder='#ed143d' activeBorderColor='#ed143d' />\n        <NumericTextBox material label='Label' placeholder='hwb(349 8% 7%)' activeBorderColor='hwb(349 8% 7%)' />\n        <NumericTextBox material label='Label' placeholder='rgba(237, 20, 61 / 0.5)' activeBorderColor='rgba(237, 20, 61 / 0.5)' />\n\n        <NumericTextBox material label='Label' placeholder='rgb(237, 20, 61)' activeBorderColor='rgb(237, 20, 61)' />\n        <NumericTextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' activeBorderColor='rgba(237, 20, 61, 0.5)' />\n        <NumericTextBox material label='Label' placeholder='hsl(349, 86%, 50%)' activeBorderColor='hsl(349, 86%, 50%)' />\n        <NumericTextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' activeBorderColor='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",g=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"none (default)",borderWidth:"none"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hairline",borderWidth:"hairline"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"thin",borderWidth:"thin"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"base",borderWidth:"base"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"thick",borderWidth:"thick"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"3",borderWidth:3})]})}},j="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 23:07:10\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:18:11\n * @ Description: Examples of NumericTextBox component with borders width.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='none (default)' borderWidth='none' />\n        <NumericTextBox material label='Label' placeholder='hairline' borderWidth='hairline' />\n        <NumericTextBox material label='Label' placeholder='thin' borderWidth='thin' />\n        <NumericTextBox material label='Label' placeholder='base' borderWidth='base' />\n        <NumericTextBox material label='Label' placeholder='thick' borderWidth='thick' />\n        <NumericTextBox material label='Label' placeholder='3' borderWidth={3}/>\n      </div>\n    );\n  }\n}",T=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"none",radius:"none"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"medium",radius:"medium"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"full radius",radius:"full"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"small",radius:"small"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"large",radius:"large"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"12",radius:12})]})}},C="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-15 22:50:56\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:18:05\n * @ Description: Examples of NumericTextBox component border radius.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='none' radius='none'/>\n        <NumericTextBox material label='Label' placeholder='medium' radius='medium'/>\n        <NumericTextBox material label='Label' placeholder='full radius' radius='full'/>\n        <NumericTextBox material label='Label' placeholder='small' radius='small'/>\n        <NumericTextBox material label='Label' placeholder='large' radius='large' />\n        <NumericTextBox material label='Label' placeholder='12' radius={12} />\n      </div>\n    );\n  }\n}",L=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"crimson",borderColor:"crimson"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"#ed143d",borderColor:"#ed143d"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",borderColor:"hwb(349 8% 7%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61 / 0.5)",borderColor:"rgba(237, 20, 61 / 0.5)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",borderColor:"rgb(237, 20, 61)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",borderColor:"rgba(237, 20, 61, 0.5)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",borderColor:"hsl(349, 86%, 50%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",borderColor:"hsla(349, 86%, 50% / 0.5)"})]})}},N="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-15 22:55:08\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:17:33\n * @ Description: Examples of NumericTextBox component with background colors.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='crimson' borderColor='crimson' />\n        <NumericTextBox material label='Label' placeholder='#ed143d' borderColor='#ed143d' />\n        <NumericTextBox material label='Label' placeholder='hwb(349 8% 7%)' borderColor='hwb(349 8% 7%)' />\n        <NumericTextBox material label='Label' placeholder='rgba(237, 20, 61 / 0.5)' borderColor='rgba(237, 20, 61 / 0.5)' />\n        <NumericTextBox material label='Label' placeholder='rgb(237, 20, 61)' borderColor='rgb(237, 20, 61)' />\n        <NumericTextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' borderColor='rgba(237, 20, 61, 0.5)' />\n        <NumericTextBox material label='Label' placeholder='hsl(349, 86%, 50%)' borderColor='hsl(349, 86%, 50%)' />\n        <NumericTextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' borderColor='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",y=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"crimson",activeBackgroundColor:"crimson"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"#ed143d",activeBackgroundColor:"#ed143d"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",activeBackgroundColor:"hwb(349 8% 7%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61 / 0.5)",activeBackgroundColor:"rgba(237, 20, 61 / 0.5)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",activeBackgroundColor:"rgb(237, 20, 61)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",activeBackgroundColor:"rgba(237, 20, 61, 0.5)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",activeBackgroundColor:"hsl(349, 86%, 50%)"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",activeBackgroundColor:"hsla(349, 86%, 50% / 0.5)"})]})}},B="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-15 22:57:49\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:16:37\n * @ Description: Examples of NumericTextBox component in with activeBackgroundColor property.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='crimson' activeBackgroundColor='crimson' />\n        <NumericTextBox material label='Label' placeholder='#ed143d' activeBackgroundColor='#ed143d' />\n        <NumericTextBox material label='Label' placeholder='hwb(349 8% 7%)' activeBackgroundColor='hwb(349 8% 7%)' />\n        <NumericTextBox material label='Label' placeholder='rgba(237, 20, 61 / 0.5)' activeBackgroundColor='rgba(237, 20, 61 / 0.5)' />\n        <NumericTextBox material label='Label' placeholder='rgb(237, 20, 61)' activeBackgroundColor='rgb(237, 20, 61)' />\n        <NumericTextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' activeBackgroundColor='rgba(237, 20, 61, 0.5)' />\n        <NumericTextBox material label='Label' placeholder='hsl(349, 86%, 50%)' activeBackgroundColor='hsl(349, 86%, 50%)' />\n        <NumericTextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' activeBackgroundColor='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",A=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"outlined",type:"outlined"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"underlined",type:"underlined"})]})}},S="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-15 23:00:34\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:20:15\n * @ Description: Examples of NumericTextBox component with type properties.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='outlined' type='outlined' />\n        <NumericTextBox material label='Label' placeholder='underlined' type='underlined' />\n      </div>\n    );\n  }\n}",I=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"small",size:"small"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"default",size:"default"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"medium",size:"medium"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"large",size:"large"})]})}},w="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-16 20:51:10\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:18:24\n * @ Description: Examples of NumericTextBox component with different sizes.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='small' size='small' />\n        <NumericTextBox material label='Label' placeholder='default' size='default' />\n        <NumericTextBox material label='Label' placeholder='medium' size='medium' />\n        <NumericTextBox material label='Label' placeholder='large' size='large' />\n      </div>\n    );\n  }\n}",k=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"outlined",type:"outlined",readOnly:!0}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"underlined",type:"underlined",readOnly:!0})]})}},R="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-16 20:53:54\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:11:15\n * @ Description: Examples of NumericTextBox component in readonly state.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='outlined' type='outlined' readOnly />\n        <NumericTextBox material label='Label' placeholder='underlined' type='underlined' readOnly />\n      </div>\n    );\n  }\n}";i.PureComponent;var P=a(71582),E=a(32533);const M=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,placeholder:"Input with text label",label:"Label"}),(0,n.jsx)(s.uI,{material:!0,placeholder:"Input with custom element as label",label:(0,n.jsx)(D,{})})]})}};function D(){return(0,n.jsxs)(P.EY,{style:V.label,children:[(0,n.jsx)(E.default,{name:"avatar",onPress:()=>"web"===P.OD.OS?alert("Custom Element as label"):P.Fc.alert("Alert Title","Custom Element as label",[{text:"OK"}])})," Custom Element Label"]})}const V=P.vv.create({label:{color:"crimson"},row:{columnGap:16,flexDirection:"row",width:"100%",backgroundColor:"transparent"},column:{flex:1,rowGap:16,alignContent:"center",justifyContent:"space-evenly",backgroundColor:"transparent"}}),O="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:18:50\n * @ Description: Examples of NumericTextBox component with labels.\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, Alert, Platform } from \"react-native\";\nimport Icon from '@flexnative/icons';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material placeholder='Input with text label' label=\"Label\" />\n        <NumericTextBox material placeholder='Input with custom element as label' label={<Label />} />\n      </div>\n    );\n  }\n}\n\nfunction Label() {\n  const openAlert = () =>\n    Platform.OS === 'web'\n      ? alert('Custom Element as label')\n      : Alert.alert('Alert Title', 'Custom Element as label', [\n          {text: 'OK'},\n        ]);\n    \n  return <Text style={styles.label}>\n    <Icon name=\"avatar\" onPress={openAlert} /> Custom Element Label\n  </Text>;\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    color: 'crimson'\n  },\n  row: {\n    columnGap: 16,\n    flexDirection: \"row\",\n    width: '100%',\n    backgroundColor: 'transparent'\n  },\n  column: {\n    flex: 1,\n    rowGap: 16,\n    alignContent: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: 'transparent'\n  }\n});",_=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,placeholder:"Style with StyleProp<TextStyle>",label:"Label",labelStyle:z.label}),(0,n.jsx)(s.uI,{material:!0,placeholder:"Style with function",label:"Label",labelStyle:W("rgb(35, 189, 224)","crimson")})]})}},W=(e,l)=>a=>[{color:a.focused?l:e}],z=P.vv.create({label:{color:"crimson"}}),q="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:19:04\n * @ Description: Examples of NumericTextBox component with custom label styles.\n */\n\nimport React from 'react';\nimport { StyleSheet, ColorValue, StyleProp, TextStyle } from \"react-native\";\n// highlight-next-line\nimport { StateCallbackType, NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material placeholder='Style with StyleProp<TextStyle>' label=\"Label\" labelStyle={styles.label} />\n        <NumericTextBox material placeholder='Style with function' label=\"Label\" labelStyle={labelStyles('rgb(35, 189, 224)', 'crimson')} />\n      </div>\n    );\n  }\n}\n\nconst labelStyles = (defaultColor: ColorValue, activeColor: ColorValue) => {\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\n    return [\n      {\n        color: state.focused ? activeColor : defaultColor\n      }\n    ]\n  }\n} \n\nconst styles = StyleSheet.create({\n  label: {\n    color: 'crimson'\n  }\n});",K=class extends i.PureComponent{render(){return(0,n.jsx)("div",{className:"example-block form-input",children:(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"input with helper text",helperText:"Helper text"})})}},U="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:18:34\n * @ Description: Examples of NumericTextBox component with helper text.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='input with helper text' helperText=\"Helper text\" />\n      </div>\n    );\n  }\n}",F=class extends i.PureComponent{render(){return(0,n.jsx)("div",{className:"example-block form-input",children:(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Max length",maxLength:15})})}},G="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 22:47:07\n * @ Description: Examples of NumericTextBox component with max length, number of digits.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='Max length' maxLength={15} />\n      </div>\n    );\n  }\n}",$=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Input with icon prefix",prefix:"star"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Input with custom element as prefix",prefix:(0,n.jsx)(H,{})})]})}};function H(){return(0,n.jsx)(E.default,{name:"avatar",onPress:()=>"web"===P.OD.OS?alert("Custom Element as prefix"):P.Fc.alert("Alert Title","Custom Element as prefix",[{text:"OK"}])})}const Z="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 22:51:08\n * @ Description: Examples of NumericTextBox component with prefix.\n */\n\nimport React from 'react';\nimport { Alert, Platform } from 'react-native';\nimport Icon from '@flexnative/icons';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='Input with icon prefix' prefix=\"star\" />\n        <NumericTextBox material label='Label' placeholder='Input with custom element as prefix' prefix={<Prefix />} />\n      </div>\n    );\n  }\n}\n\nfunction Prefix() {\n  const openAlert = () =>\n    Platform.OS === 'web'\n      ? alert('Custom Element as prefix')\n      : Alert.alert('Alert Title', 'Custom Element as prefix', [\n          {text: 'OK'},\n        ]);\n    \n  return <Icon name=\"avatar\" onPress={openAlert} />;\n}",J=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Style with StyleProp<TextStyle>",prefix:"star",prefixStyle:X.prefix}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Style with function",prefix:"star",prefixStyle:Y("rgb(35, 189, 224)","crimson")})]})}},Y=(e,l)=>a=>[{color:a.focused?l:e}],X=P.vv.create({prefix:{color:"crimson"}}),Q="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 22:54:54\n * @ Description: Examples of NumericTextBox component with prefix with custom styles.\n */\n\nimport React from 'react';\nimport { ColorValue, StyleProp, StyleSheet, TextStyle } from \"react-native\";\n// highlight-next-line\nimport { NumericTextBox, StateCallbackType } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='Style with StyleProp<TextStyle>' prefix=\"star\" prefixStyle={styles.prefix} />\n        <NumericTextBox material label='Label' placeholder='Style with function' prefix=\"star\" prefixStyle={prefixStyle('rgb(35, 189, 224)', 'crimson')} />\n      </div>\n    );\n  }\n}\n\nconst prefixStyle = (defaultColor: ColorValue, activeColor: ColorValue) => {\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\n    return [\n      {\n        color: state.focused ? activeColor : defaultColor\n      }\n    ]\n  }\n} \n\nconst styles = StyleSheet.create({\n  prefix: {\n    color: 'crimson'\n  }\n});",ee=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Input with icon suffix",suffix:"star"}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Input with custom element as suffix",suffix:(0,n.jsx)(le,{})})]})}};function le(){return(0,n.jsx)(E.default,{name:"avatar",onPress:()=>"web"===P.OD.OS?alert("Custom Element as suffix"):P.Fc.alert("Alert Title","Custom Element as suffix",[{text:"OK"}])})}const ae="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:04:40\n * @ Description: Examples of NumericTextBox component with different colors.\n */\n\nimport React from 'react';\nimport { Alert, Platform } from \"react-native\";\nimport Icon from '@flexnative/icons';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='Input with icon suffix' suffix=\"star\" />\n        <NumericTextBox material label='Label' placeholder='Input with custom element as suffix' suffix={<Suffix />} />\n      </div>\n    );\n  }\n}\n\nfunction Suffix() {\n  const openAlert = () =>\n    Platform.OS === 'web'\n      ? alert('Custom Element as suffix')\n      : Alert.alert('Alert Title', 'Custom Element as suffix', [\n          {text: 'OK'},\n        ]);\n    \n  return <Icon name=\"avatar\" onPress={openAlert} />;\n}",re=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Style with StyleProp<TextStyle>",suffix:"star",suffixStyle:te.prefix}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Style with function",suffix:"star",suffixStyle:ne("rgb(35, 189, 224)","crimson")})]})}},ne=(e,l)=>a=>[{color:a.focused?l:e}],te=P.vv.create({prefix:{color:"crimson"}}),oe="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:06:26\n * @ Description: Examples of NumericTextBox component with Suffix with custom styles.\n */\n\nimport React from 'react';\nimport { StyleSheet, ColorValue, StyleProp, TextStyle } from \"react-native\";\n// highlight-next-line\nimport { NumericTextBox, StateCallbackType } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='Style with StyleProp<TextStyle>' suffix=\"star\" suffixStyle={styles.prefix} />\n        <NumericTextBox material label='Label' placeholder='Style with function' suffix=\"star\" suffixStyle={suffixStyle('rgb(35, 189, 224)', 'crimson')} />\n      </div>\n    );\n  }\n}\n\nconst suffixStyle = (defaultColor: ColorValue, activeColor: ColorValue) => {\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\n    return [\n      {\n        color: state.focused ? activeColor : defaultColor\n      }\n    ]\n  }\n} \n\nconst styles = StyleSheet.create({\n  prefix: {\n    color: 'crimson'\n  }\n});",ie=class extends i.PureComponent{render(){return(0,n.jsxs)("div",{className:"example-block form-input",children:[(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Prefix Separator",prefix:"avatar",prefixSeparator:!0}),(0,n.jsx)(s.uI,{material:!0,label:"Label",placeholder:"Suffix Separator",suffix:"avatar",suffixSeparator:!0})]})}},se="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:17:25\n * @ Description: Examples of NumericTextBox component with AdornmentSeparator.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { NumericTextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <NumericTextBox material label='Label' placeholder='Prefix Separator' prefix=\"avatar\" prefixSeparator />\n        <NumericTextBox material label='Label' placeholder='Suffix Separator' suffix=\"avatar\" suffixSeparator />\n      </div>\n    );\n  }\n}",ce={title:"Material",sidebar_position:1,sidebar_class_name:"nav_icon material",last_update:{date:new Date("2024-09-24T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},de=void 0,me={},ue=[{value:"Usecase Examples",id:"usecase-examples",level:2},{value:"Actions",id:"actions",level:3},{value:"Steps",id:"steps",level:3},{value:"Colors",id:"colors",level:3},{value:"Border Colors",id:"border-colors",level:3},{value:"Active Border Colors",id:"active-border-colors",level:3},{value:"Border Width",id:"border-width",level:3},{value:"Border Radius",id:"border-radius",level:3},{value:"Background Color",id:"background-color",level:3},{value:"Active Background Color",id:"active-background-color",level:3},{value:"Type",id:"type",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Readonly",id:"readonly",level:3},{value:"Disabled",id:"disabled",level:3},{value:"Label",id:"label",level:3},{value:"Label Style",id:"label-style",level:3},{value:"Helper Text",id:"helper-text",level:3},{value:"Max Length",id:"max-length",level:3},{value:"Prefix",id:"prefix",level:3},{value:"Prefix Style",id:"prefix-style",level:3},{value:"Surfix",id:"surfix",level:3},{value:"Surfix Style",id:"surfix-style",level:3},{value:"Adornments Separator",id:"adornments-separator",level:3},{value:"Playground",id:"playground",level:2}];function xe(e){const l={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(l.p,{children:["The following examples demonstrates the ",(0,n.jsx)(l.strong,{children:"Numeric Text Boxes"})," in action."]}),"\n",(0,n.jsx)(l.admonition,{type:"warning",children:(0,n.jsx)(l.p,{children:"In documentation apprence of components may not be in correct way.\nTo view the component in exact design please view the demo app."})}),"\n",(0,n.jsx)(l.h2,{id:"usecase-examples",children:"Usecase Examples"}),"\n",(0,n.jsx)(l.p,{children:"Usecase Examples with material style."}),"\n",(0,n.jsx)(l.admonition,{title:"Caution",type:"danger",children:(0,n.jsxs)(l.p,{children:["For material style ",(0,n.jsx)(l.strong,{children:"label"})," it is required."]})}),"\n",(0,n.jsx)(l.h3,{id:"actions",children:"Actions"}),"\n",(0,n.jsx)(o.A,{codeExample:d,children:(0,n.jsx)(c,{})}),"\n",(0,n.jsx)(l.h3,{id:"steps",children:"Steps"}),"\n",(0,n.jsx)(o.A,{codeExample:u,children:(0,n.jsx)(m,{})}),"\n",(0,n.jsx)(l.h3,{id:"colors",children:"Colors"}),"\n",(0,n.jsx)(o.A,{codeExample:p,children:(0,n.jsx)(x,{})}),"\n",(0,n.jsx)(l.h3,{id:"border-colors",children:"Border Colors"}),"\n",(0,n.jsx)(o.A,{codeExample:h,children:(0,n.jsx)(b,{})}),"\n",(0,n.jsx)(l.h3,{id:"active-border-colors",children:"Active Border Colors"}),"\n",(0,n.jsx)(o.A,{codeExample:v,children:(0,n.jsx)(f,{})}),"\n",(0,n.jsx)(l.h3,{id:"border-width",children:"Border Width"}),"\n",(0,n.jsx)(o.A,{codeExample:j,children:(0,n.jsx)(g,{})}),"\n",(0,n.jsx)(l.h3,{id:"border-radius",children:"Border Radius"}),"\n",(0,n.jsx)(o.A,{codeExample:C,children:(0,n.jsx)(T,{})}),"\n",(0,n.jsx)(l.h3,{id:"background-color",children:"Background Color"}),"\n",(0,n.jsx)(o.A,{codeExample:N,children:(0,n.jsx)(L,{})}),"\n",(0,n.jsx)(l.h3,{id:"active-background-color",children:"Active Background Color"}),"\n",(0,n.jsx)(o.A,{codeExample:B,children:(0,n.jsx)(y,{})}),"\n",(0,n.jsx)(l.h3,{id:"type",children:"Type"}),"\n",(0,n.jsx)(o.A,{codeExample:S,children:(0,n.jsx)(A,{})}),"\n",(0,n.jsx)(l.h3,{id:"sizes",children:"Sizes"}),"\n",(0,n.jsx)(o.A,{codeExample:w,children:(0,n.jsx)(I,{})}),"\n",(0,n.jsx)(l.h3,{id:"readonly",children:"Readonly"}),"\n",(0,n.jsx)(o.A,{codeExample:R,children:(0,n.jsx)(k,{})}),"\n",(0,n.jsx)(l.h3,{id:"disabled",children:"Disabled"}),"\n",(0,n.jsx)(o.A,{codeExample:R,children:(0,n.jsx)(k,{})}),"\n",(0,n.jsx)(l.h3,{id:"label",children:"Label"}),"\n",(0,n.jsx)(o.A,{codeExample:O,children:(0,n.jsx)(M,{})}),"\n",(0,n.jsx)(l.h3,{id:"label-style",children:"Label Style"}),"\n",(0,n.jsx)(o.A,{codeExample:q,children:(0,n.jsx)(_,{})}),"\n",(0,n.jsx)(l.h3,{id:"helper-text",children:"Helper Text"}),"\n",(0,n.jsx)(o.A,{codeExample:U,children:(0,n.jsx)(K,{})}),"\n",(0,n.jsx)(l.h3,{id:"max-length",children:"Max Length"}),"\n",(0,n.jsx)(o.A,{codeExample:G,children:(0,n.jsx)(F,{})}),"\n",(0,n.jsx)(l.h3,{id:"prefix",children:"Prefix"}),"\n",(0,n.jsx)(o.A,{codeExample:Z,children:(0,n.jsx)($,{})}),"\n",(0,n.jsx)(l.h3,{id:"prefix-style",children:"Prefix Style"}),"\n",(0,n.jsx)(o.A,{codeExample:Q,children:(0,n.jsx)(J,{})}),"\n",(0,n.jsx)(l.h3,{id:"surfix",children:"Surfix"}),"\n",(0,n.jsx)(o.A,{codeExample:ae,children:(0,n.jsx)(ee,{})}),"\n",(0,n.jsx)(l.h3,{id:"surfix-style",children:"Surfix Style"}),"\n",(0,n.jsx)(o.A,{codeExample:oe,children:(0,n.jsx)(re,{})}),"\n",(0,n.jsx)(l.h3,{id:"adornments-separator",children:"Adornments Separator"}),"\n",(0,n.jsx)(o.A,{codeExample:se,children:(0,n.jsx)(ie,{})}),"\n",(0,n.jsx)(l.h2,{id:"playground",children:"Playground"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"//Play with props to see live changes;\n\nrender(<NumericTextBox\n    prefixSeparator\n    material\n    label='Label'\n    placeholder='Play with props to see live changes'\n    color='primary'\n    borderColor='crimson'\n    borderWidth='thick'\n    radius='full'\n    size='large'\n    prefix=\"star\"\n  />);\n"})})]})}function pe(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,n.jsx)(l,{...e,children:(0,n.jsx)(xe,{...e})}):xe(e)}},7227:(e,l,a)=>{"use strict";a.d(l,{A:()=>o});a(96540);var r=a(34164);const n={tabItem:"tabItem_Ymn6"};var t=a(74848);function o(e){let{children:l,hidden:a,className:o}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.A)(n.tabItem,o),hidden:a,children:l})}},49489:(e,l,a)=>{"use strict";a.d(l,{A:()=>C});var r=a(96540),n=a(34164),t=a(24245),o=a(56347),i=a(36494),s=a(62814),c=a(45167),d=a(69900);function m(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:l}=e;return!!l&&"object"==typeof l&&"value"in l}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:l,children:a}=e;return(0,r.useMemo)((()=>{const e=l??function(e){return m(e).map((e=>{let{props:{value:l,label:a,attributes:r,default:n}}=e;return{value:l,label:a,attributes:r,default:n}}))}(a);return function(e){const l=(0,c.XI)(e,((e,l)=>e.value===l.value));if(l.length>0)throw new Error(`Docusaurus error: Duplicate values "${l.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[l,a])}function x(e){let{value:l,tabValues:a}=e;return a.some((e=>e.value===l))}function p(e){let{queryString:l=!1,groupId:a}=e;const n=(0,o.W6)(),t=function(e){let{queryString:l=!1,groupId:a}=e;if("string"==typeof l)return l;if(!1===l)return null;if(!0===l&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:l,groupId:a});return[(0,s.aZ)(t),(0,r.useCallback)((e=>{if(!t)return;const l=new URLSearchParams(n.location.search);l.set(t,e),n.replace({...n.location,search:l.toString()})}),[t,n])]}function b(e){const{defaultValue:l,queryString:a=!1,groupId:n}=e,t=u(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:l,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(l){if(!x({value:l,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${l}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return l}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:l,tabValues:t}))),[c,m]=p({queryString:a,groupId:n}),[b,h]=function(e){let{groupId:l}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(l),[n,t]=(0,d.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&t.set(e)}),[a,t])]}({groupId:n}),f=(()=>{const e=c??b;return x({value:e,tabValues:t})?e:null})();(0,i.A)((()=>{f&&s(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!x({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);s(e),m(e),h(e)}),[m,h,t]),tabValues:t}}var h=a(11062);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=a(74848);function g(e){let{className:l,block:a,selectedValue:r,selectValue:o,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.a_)(),d=e=>{const l=e.currentTarget,a=s.indexOf(l),n=i[a].value;n!==r&&(c(l),o(n))},m=e=>{let l=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;l=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;l=s[a]??s[s.length-1];break}}l?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":a},l),children:i.map((e=>{let{value:l,label:a,attributes:t}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===l?0:-1,"aria-selected":r===l,ref:e=>s.push(e),onKeyDown:m,onClick:d,...t,className:(0,n.A)("tabs__item",f.tabItem,t?.className,{"tabs__item--active":r===l}),children:a??l},l)}))})}function j(e){let{lazy:l,children:a,selectedValue:t}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(l){const e=o.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map(((e,l)=>(0,r.cloneElement)(e,{key:l,hidden:e.props.value!==t})))})}function T(e){const l=b(e);return(0,v.jsxs)("div",{className:(0,n.A)("tabs-container",f.tabList),children:[(0,v.jsx)(g,{...l,...e}),(0,v.jsx)(j,{...l,...e})]})}function C(e){const l=(0,h.A)();return(0,v.jsx)(T,{...e,children:m(e.children)},String(l))}},45424:(e,l,a)=>{"use strict";a.d(l,{A:()=>s});var r=a(96540),n=a(49489),t=a(7227),o=a(39498),i=a(74848);const s=class extends r.PureComponent{render(){return(0,i.jsxs)(n.A,{className:"demo-tabs",children:[(0,i.jsx)(t.A,{value:"preview",label:"Preview",default:!0,children:this.props.children}),(0,i.jsx)(t.A,{value:"code",label:"Code",children:(0,i.jsx)(o.A,{showLineNumbers:!0,language:"jsx",children:this.props.codeExample})})]})}}},35013:(e,l,a)=>{"use strict";a.d(l,{K:()=>n,q:()=>r});const r=13,n="/flexnative/img/logo.svg"},42480:(e,l,a)=>{"use strict";a.d(l,{A:()=>b});var r=a(96540),n=a(35013),t=a(64444),o=a(86884),i=a(32533),s=a(17120),c=a(57388),d=a(58424),m=a(73769),u=a(75117),x=a(44116),p=a(49585);const b={React:r,...r,Avatar:t.Ay,AvatarGroup:t.Z7,Button:o.A,Icon:i.default,Spinner:i.Spinner,BottomSheet:s.A,Tag:c.A,Badge:d.A,SkeletonLoader:m.Ay,Circle:m.jl,Rect:m.rw,TextBox:u.fI,NumericTextBox:u.uI,Check:u.Jl,CheckList:u.Pg,Message:x.A,Block:p.e,LOGO:n.K}},78982:()=>{},47790:()=>{},73776:()=>{},77965:()=>{},66089:()=>{},79368:()=>{},64688:()=>{},51069:()=>{},15340:()=>{},79838:()=>{},63779:()=>{},77199:()=>{}}]);