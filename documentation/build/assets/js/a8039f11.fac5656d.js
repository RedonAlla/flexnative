"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[1284],{78536:e=>{e.exports=JSON.parse('{"tags":[{"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces.","count":50},{"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React","count":50},{"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence.","count":49},{"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web.","count":50},{"label":"Authentication","permalink":"/flexnative/docs/tags/authentication","description":"A package to implement almost full authentication and protect routes with Expo Router. `@flexnative/authentication` handles user authentication and protecting routes using Expo Router. The package includes React context, custom hooks, type definitions, and utilizes `expo-secure-store` for secure token storage. This integration enhances the security and manageability of authentication processes across the application.\\n","count":7},{"label":"Component","permalink":"/flexnative/docs/tags/component","description":"Create user interfaces from components.","count":38},{"label":"Avatar","permalink":"/flexnative/docs/tags/avatars","description":"Avatars can be used to represent people or objects. It supports images, Icons, or letters.","count":6},{"label":"Badge","permalink":"/flexnative/docs/tags/badges","description":"Small numerical value or status descriptor for UI elements.","count":1},{"label":"BottomSheet","permalink":"/flexnative/docs/tags/bottomSheet","description":"Overlay Modal that displays content from the bottom of the screen. They can provide users with quick access to contextual information, actions, or settings without interrupting their current workflow.","count":1},{"label":"Button","permalink":"/flexnative/docs/tags/buttons","description":"Buttons allow users to trigger an action or display content.","count":1},{"label":"Tags","permalink":"/flexnative/docs/tags/tags","description":"Tag component is used to categorize content.","count":2},{"label":"Icons","permalink":"/flexnative/docs/tags/icons","description":"Icon fonts are fonts which contain vector glyphs instead of letters and numbers. You can style them with CSS by using all styling properties that can be applied to a regular text in a modern browser.","count":4},{"label":"Inputs","permalink":"/flexnative/docs/tags/inputs","description":"A foundational component for inputting text into the app via a keyboard. Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad.","count":11},{"label":"Layout","permalink":"/flexnative/docs/tags/layout","description":"Useful components for creating responsive and consistent layouts, the `FlexNative Layout` component provides a powerful grid system that allows you to create complex layouts with ease.","count":2},{"label":"Messages","permalink":"/flexnative/docs/tags/messages","description":"Display warning messages that require attention with colored message blocks, to emphasize part of your page.","count":1},{"label":"Navigation","permalink":"/flexnative/docs/tags/navigation","description":"Useful components for navigation.","count":2},{"label":"Skeleton Loading","permalink":"/flexnative/docs/tags/skeleton","description":"Skeleton is a placeholder to display instead of the actual content.","count":1},{"label":"Utilities","permalink":"/flexnative/docs/tags/utilities","description":"FlexNative Utilities is part of FlexNative witch provides some utilities packages.","count":2}]}')}}]);