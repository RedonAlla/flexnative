(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[4558],{79738:(e,n,r)=>{"use strict";r.r(n),r.d(n,{assets:()=>j,contentTitle:()=>y,default:()=>C,frontMatter:()=>b,metadata:()=>i,toc:()=>I});const i=JSON.parse('{"id":"components/spinner/index","title":"Spinner","description":"Spinner is part of the @flexnative/icons package.","source":"@site/docs/components/spinner/index.mdx","sourceDirName":"components/spinner","slug":"/components/spinner/","permalink":"/flexnative/docs/components/spinner/","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/components/spinner/index.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{"inline":false,"label":"Component","permalink":"/flexnative/docs/tags/component","description":"Create user interfaces from components."}],"version":"current","lastUpdatedAt":1727136000000,"frontMatter":{"title":"Spinner","last_update":{"date":"2024-09-24T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework","component"]},"sidebar":"componentsSidebar","previous":{"title":"Skeleton Loading","permalink":"/flexnative/docs/components/skeleton-loading/"},"next":{"title":"Tags","permalink":"/flexnative/docs/components/tags/"}}');var o=r(74848),s=r(28453),t=r(85851),a=r(96540),l=r(32533);const c=64,d=class extends a.PureComponent{render(){return(0,o.jsxs)("div",{className:"example-block",children:[(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"default"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"primary"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"info"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"success"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"warning"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"error"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"dark"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"light"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"red"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"chartreuse"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"#9400FF"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"#FFC436"}),(0,o.jsx)(l.Spinner,{name:"spinner",size:c,color:"rgb(0, 146, 255)"})]})}},p="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-17 20:29:33\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-17 22:15:39\n * @ Description: Examples of Spinner component with colors.\n */\nimport React from 'react';\n// highlight-next-line\nimport { Spinner } from '@flexnative/icons';\nimport { ICON_SIZE } from './constants';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block'>\n        <Spinner name='spinner' size={ICON_SIZE} color='default'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='primary'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='secondary'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='info'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='success'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='warning'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='error'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='dark'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='light'/>\n\n        <Spinner name='spinner' size={ICON_SIZE} color='red'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='chartreuse'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='#9400FF'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='#FFC436'/>\n        <Spinner name='spinner' size={ICON_SIZE} color='rgb(0, 146, 255)'/>\n      </div>\n    );\n  }\n}",u=class extends a.PureComponent{render(){return(0,o.jsxs)("div",{className:"example-block",children:[(0,o.jsx)(l.Spinner,{name:"star",color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"star",size:16,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"star",size:18,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"star",size:24,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"star",size:32,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"star",size:64,color:"secondary"})]})}},m="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-17 20:29:33\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-17 22:28:36\n * @ Description: Examples of Spinner component with different sizes.\n */\nimport React from 'react';\n// highlight-next-line\nimport { Spinner } from '@flexnative/icons';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block'>\n        <Spinner name='star' color='secondary' />\n        <Spinner name='star' size={16} color='secondary' />\n        <Spinner name='star' size={18} color='secondary' />\n        <Spinner name='star' size={24} color='secondary' />\n        <Spinner name='star' size={32} color='secondary' />\n        <Spinner name='star' size={64} color='secondary' />\n      </div>\n    );\n  }\n}";var h=r(71582);const x=class extends a.PureComponent{render(){return(0,o.jsxs)("div",{className:"example-block",children:[(0,o.jsx)(l.Spinner,{name:"star",style:f.icon1}),(0,o.jsx)(l.Spinner,{name:"star",style:f.icon2}),(0,o.jsx)(l.Spinner,{name:"star",style:f.icon3})]})}},f=h.vv.create({icon1:{width:64,height:64,fontSize:64,color:"rgb(102, 102, 102)"},icon2:{width:64,height:64,fontSize:64,color:"rgb(0, 146, 255)"},icon3:{fontSize:32,color:"crimson",backgroundColor:"#FFC436",textAlignVertical:"center",width:68,height:68,padding:15,textAlign:"center",borderRadius:34,borderWidth:3,borderColor:"black",overflow:"hidden"}}),S="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-17 20:29:33\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-17 22:37:54\n * @ Description: Examples of Spinner component styling with StyleSheet.\n */\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\n// highlight-next-line\nimport { Spinner } from '@flexnative/icons';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block'>\n        <Spinner name='star' style={styles.icon1} />\n        <Spinner name='star' style={styles.icon2} />\n        <Spinner name='star' style={styles.icon3} />\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon1: {\n    width: 64,\n    height: 64,\n    fontSize: 64,\n    color: 'rgb(102, 102, 102)'\n  },\n  icon2: {\n    width: 64,\n    height: 64,\n    fontSize: 64,\n    color: 'rgb(0, 146, 255)'\n  },\n  icon3: {\n    fontSize: 32,\n    color: 'crimson',\n    backgroundColor: '#FFC436',\n    textAlignVertical: 'center',\n    width: 68,\n    height: 68,\n    padding: 15,\n    textAlign: 'center',\n    borderRadius: 34,\n    borderWidth: 3,\n    borderColor: 'black',\n    overflow: 'hidden'\n  }\n});",v=class extends a.PureComponent{render(){return(0,o.jsxs)("div",{className:"example-block",children:[(0,o.jsx)(l.Spinner,{name:"sun",size:c,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"star",size:c,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"moon",size:c,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"trash",size:c,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"grid",size:c,color:"secondary"}),(0,o.jsx)(l.Spinner,{name:"excel-file",size:c,color:"secondary"})]})}},g="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-17 20:29:33\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-17 22:38:23\n * @ Description: Examples of Spinner component using any icon as spinner.\n */\nimport React from 'react';\n// highlight-next-line\nimport { Spinner } from '@flexnative/icons';\nimport { ICON_SIZE } from './constants';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block'>\n        <Spinner name='sun' size={ICON_SIZE} color='secondary' />\n        <Spinner name='star' size={ICON_SIZE} color='secondary' />\n        <Spinner name='moon' size={ICON_SIZE} color='secondary' />\n        <Spinner name='trash' size={ICON_SIZE} color='secondary' />\n        <Spinner name='grid' size={ICON_SIZE} color='secondary' />\n        <Spinner name='excel-file' size={ICON_SIZE} color='secondary' />\n      </div>\n    );\n  }\n}",b={title:"Spinner",last_update:{date:new Date("2024-09-24T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},y=void 0,j={},I=[{value:"API",id:"api",level:2},{value:"Component",id:"component",level:2},{value:"Properties",id:"properties",level:2},{value:"Usecase Examples",id:"usecase-examples",level:2},{value:"Colors",id:"colors",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Styling with StyleSheet",id:"styling-with-stylesheet",level:3},{value:"Any Icon",id:"any-icon",level:3},{value:"Playground",id:"playground",level:2}];function z(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Spinner"})," is part of the ",(0,o.jsx)(n.a,{href:"/flexnative/docs/components/icons/",children:(0,o.jsx)(n.strong,{children:"@flexnative/icons"})})," package.\nTo use the ",(0,o.jsx)(n.strong,{children:"FlexNative Spinner"})," you needs to install ",(0,o.jsx)(n.code,{children:"@flexnative/icons"})," package.\n",(0,o.jsx)(n.a,{href:"/flexnative/docs/components/icons/#installation",children:"Fallow this link"})," on how to install the package."]}),"\n",(0,o.jsx)(n.p,{children:"You can use any of paskage's icon as apinner."}),"\n",(0,o.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Spinner } from '@flexnative/icons';\n"})}),"\n",(0,o.jsx)(n.h2,{id:"component",children:"Component"}),"\n",(0,o.jsx)(n.p,{children:"A memoized React component that renders a spinning icon using animated styles."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Spinner"})}),"\n",(0,o.jsxs)(n.p,{children:["Type: ",(0,o.jsxs)("code",{children:["React.MemoExoticComponent<(props: ",(0,o.jsx)(n.a,{href:"#properties",children:"IconProps"}),") => React.JSX.Element>"]})]}),"\n",(0,o.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["and ",(0,o.jsx)(n.code,{children:"Spinner"})," components expects props of type ",(0,o.jsx)(n.a,{href:"/flexnative/docs/components/icons/basic-usage#properties",children:(0,o.jsx)(n.code,{children:"IconProp"})}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"usecase-examples",children:"Usecase Examples"}),"\n",(0,o.jsx)(n.p,{children:"The following example demonstrates the Spinner in action."}),"\n",(0,o.jsx)(n.h3,{id:"colors",children:"Colors"}),"\n",(0,o.jsx)(t.A,{codeExample:p,children:(0,o.jsx)(d,{})}),"\n",(0,o.jsx)(n.h3,{id:"sizes",children:"Sizes"}),"\n",(0,o.jsx)(t.A,{codeExample:m,children:(0,o.jsx)(u,{})}),"\n",(0,o.jsx)(n.h3,{id:"styling-with-stylesheet",children:"Styling with StyleSheet"}),"\n",(0,o.jsx)(t.A,{codeExample:S,children:(0,o.jsx)(x,{})}),"\n",(0,o.jsx)(n.h3,{id:"any-icon",children:"Any Icon"}),"\n",(0,o.jsx)(t.A,{codeExample:g,children:(0,o.jsx)(v,{})}),"\n",(0,o.jsx)(n.h2,{id:"playground",children:"Playground"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"//Play with props to see live changes;\n\nrender(<Spinner name='star' size={128} color='secondary' />);\n"})})]})}function C(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(z,{...e})}):z(e)}},7227:(e,n,r)=>{"use strict";r.d(n,{A:()=>t});r(96540);var i=r(34164);const o={tabItem:"tabItem_Ymn6"};var s=r(74848);function t(e){let{children:n,hidden:r,className:t}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(o.tabItem,t),hidden:r,children:n})}},49489:(e,n,r)=>{"use strict";r.d(n,{A:()=>j});var i=r(96540),o=r(34164),s=r(24245),t=r(56347),a=r(36494),l=r(62814),c=r(45167),d=r(69900);function p(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:r,attributes:i,default:o}}=e;return{value:n,label:r,attributes:i,default:o}}))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function m(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:r}=e;const o=(0,t.W6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,l.aZ)(s),(0,i.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(o.location.search);n.set(s,e),o.replace({...o.location,search:n.toString()})}),[s,o])]}function x(e){const{defaultValue:n,queryString:r=!1,groupId:o}=e,s=u(e),[t,l]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=r.find((e=>e.default))??r[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s}))),[c,p]=h({queryString:r,groupId:o}),[x,f]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,s]=(0,d.Dv)(r);return[o,(0,i.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:o}),S=(()=>{const e=c??x;return m({value:e,tabValues:s})?e:null})();(0,a.A)((()=>{S&&l(S)}),[S]);return{selectedValue:t,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),f(e)}),[p,f,s]),tabValues:s}}var f=r(11062);const S={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(74848);function g(e){let{className:n,block:r,selectedValue:i,selectValue:t,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,r=l.indexOf(n),o=a[r].value;o!==i&&(c(n),t(o))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":r},n),children:a.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>l.push(e),onKeyDown:p,onClick:d,...s,className:(0,o.A)("tabs__item",S.tabItem,s?.className,{"tabs__item--active":i===n}),children:r??n},n)}))})}function b(e){let{lazy:n,children:r,selectedValue:s}=e;const t=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=t.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:t.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=x(e);return(0,v.jsxs)("div",{className:(0,o.A)("tabs-container",S.tabList),children:[(0,v.jsx)(g,{...n,...e}),(0,v.jsx)(b,{...n,...e})]})}function j(e){const n=(0,f.A)();return(0,v.jsx)(y,{...e,children:p(e.children)},String(n))}},85851:(e,n,r)=>{"use strict";r.d(n,{A:()=>l});var i=r(96540),o=r(49489),s=r(7227),t=r(39498),a=r(74848);const l=class extends i.PureComponent{render(){return(0,a.jsxs)(o.A,{className:"demo-tabs",children:[(0,a.jsx)(s.A,{value:"preview",label:"Preview",default:!0,children:this.props.children}),(0,a.jsx)(s.A,{value:"code",label:"Code",children:(0,a.jsx)(t.A,{showLineNumbers:!0,language:"jsx",children:this.props.codeExample})})]})}}},35013:(e,n,r)=>{"use strict";r.d(n,{K:()=>o,q:()=>i});const i=13,o="/flexnative/img/logo.svg"},42480:(e,n,r)=>{"use strict";r.d(n,{A:()=>m});var i=r(96540),o=r(35013),s=r(64444),t=r(86884),a=r(32533),l=r(17120),c=r(49030),d=r(58424),p=r(73769),u=r(75117);const m={React:i,...i,Avatar:s.Ay,AvatarGroup:s.Z7,Button:t.A,Icon:a.default,Spinner:a.Spinner,BottomSheet:l.A,Tag:c.A,Badge:d.A,SkeletonLoader:p.Ay,Circle:p.jl,Rect:p.rw,TextBox:u.fI,NumericTextBox:u.uI,Check:u.Jl,CheckList:u.Pg,LOGO:o.K}},78982:()=>{},47790:()=>{},73776:()=>{},77965:()=>{},66089:()=>{},79368:()=>{},64688:()=>{},51069:()=>{},15340:()=>{},79838:()=>{},63779:()=>{},77199:()=>{}}]);