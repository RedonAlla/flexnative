"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[349],{39522:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var r=n(69053),a=n(74848),i=n(28453);const o={slug:"b3713dd",title:"\ud83d\udee0\ufe0f Inputs refactor",description:"feat(inputs) add isError prop to enhance error handling",authors:"RedonAlla",tags:["inputs_v0.0.11","inputs"]},s=void 0,l={authorsImageUrls:[void 0]},c=[];function p(e){const t={a:"a",code:"code",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsxs)(t.strong,{children:[(0,a.jsx)(t.a,{href:"https://github.com/RedonAlla/flexnative/commit/b3713dd",children:"#b3713dd"})," feat(inputs): add isError prop to enhance error handling"]})}),"\n",(0,a.jsxs)(t.p,{children:["Added the ",(0,a.jsx)(t.code,{children:"isError"})," property to the input components within the ra-inputs package, allowing for improved error state management. This change updates the component styles to display error-specific colors when ",(0,a.jsx)(t.code,{children:"isError"})," is true, ensuring consistent visual feedback. Additionally, certain optional properties like ",(0,a.jsx)(t.code,{children:"borderWidth"})," and ",(0,a.jsx)(t.code,{children:"disabled"})," are now explicitly marked as optional in the TypeScript interfaces, increasing flexibility in their usage. These enhancements collectively improve the user experience by providing clearer input validation feedback. Additionally, incremented package version from 0.0.10 to 0.0.11."]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var r=n(96540);const a={},i=r.createContext(a);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},69053:e=>{e.exports=JSON.parse('{"permalink":"/flexnative/changelog/b3713dd","source":"@site/blog/2025-02-02-feat-inputs.md","title":"\ud83d\udee0\ufe0f Inputs refactor","description":"feat(inputs) add isError prop to enhance error handling","date":"2025-02-02T00:00:00.000Z","tags":[{"inline":false,"label":"Inputs 0.0.11","permalink":"/flexnative/changelog/tags/inputs_v0.0.11","description":"Inputs 0.0.11. Use this tag to filter all changes about Inputs version 0.0.11."},{"inline":false,"label":"Inputs","permalink":"/flexnative/changelog/tags/inputs","description":"A foundational component for inputting text into the app via a keyboard. Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad."}],"readingTime":0.445,"hasTruncateMarker":false,"authors":[{"name":"Redon Alla","title":".NET, React, Angular Developer","url":"https://github.com/RedonAlla","page":{"permalink":"/flexnative/changelog/authors/redon-alla"},"socials":{"linkedin":"https://www.linkedin.com/in/redon-alla-17ba3590/","github":"https://github.com/RedonAlla"},"imageURL":"https://avatars.githubusercontent.com/u/39186570?v=4","key":"RedonAlla"}],"frontMatter":{"slug":"b3713dd","title":"\ud83d\udee0\ufe0f Inputs refactor","description":"feat(inputs) add isError prop to enhance error handling","authors":"RedonAlla","tags":["inputs_v0.0.11","inputs"]},"unlisted":false,"prevItem":{"title":"\ud83d\udee0\ufe0f Inputs refactor","permalink":"/flexnative/changelog/fce5c91"},"nextItem":{"title":"\ud83d\udee0\ufe0f Inputs refactor","permalink":"/flexnative/changelog/93429af"}}')}}]);