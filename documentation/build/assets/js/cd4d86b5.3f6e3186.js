(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[7219],{9696:(e,n,r)=>{"use strict";r.r(n),r.d(n,{assets:()=>ie,contentTitle:()=>ae,default:()=>ce,frontMatter:()=>te,metadata:()=>o,toc:()=>se});const o=JSON.parse('{"id":"components/inputs/text-box/default","title":"Default","description":"The following examples demonstrates the Text Boxes in action.","source":"@site/docs/components/inputs/text-box/default.mdx","sourceDirName":"components/inputs/text-box","slug":"/components/inputs/text-box/default","permalink":"/flexnative/docs/components/inputs/text-box/default","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/components/inputs/text-box/default.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{"inline":false,"label":"Component","permalink":"/flexnative/docs/tags/component","description":"Create user interfaces from components."}],"version":"current","lastUpdatedAt":1727136000000,"sidebarPosition":1,"frontMatter":{"title":"Default","sidebar_position":1,"sidebar_class_name":"nav_icon text-box-default","last_update":{"date":"2024-09-24T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework","component"]},"sidebar":"componentsSidebar","previous":{"title":"Text Box","permalink":"/flexnative/docs/components/inputs/text-box/"},"next":{"title":"Material","permalink":"/flexnative/docs/components/inputs/text-box/material"}}');var l=r(74848),t=r(28453),a=r(45424),i=r(96540),s=r(75117);const d=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"primary",color:"primary"}),(0,l.jsx)(s.fI,{placeholder:"dark",color:"dark"}),(0,l.jsx)(s.fI,{placeholder:"info",color:"info"}),(0,l.jsx)(s.fI,{placeholder:"warning",color:"warning"}),(0,l.jsx)(s.fI,{placeholder:"default",color:"default"}),(0,l.jsx)(s.fI,{placeholder:"rgb(237, 20, 61)",color:"rgb(237, 20, 61)"}),(0,l.jsx)(s.fI,{placeholder:"hwb(349 8% 7%)",color:"hwb(349 8% 7%)"}),(0,l.jsx)(s.fI,{placeholder:"hsl(349, 86%, 50%)",color:"hsl(349, 86%, 50%)"}),(0,l.jsx)(s.fI,{placeholder:"secondary",color:"secondary"}),(0,l.jsx)(s.fI,{placeholder:"light",color:"light"}),(0,l.jsx)(s.fI,{placeholder:"success",color:"success"}),(0,l.jsx)(s.fI,{placeholder:"error",color:"error"}),(0,l.jsx)(s.fI,{placeholder:"crimson",color:"crimson"}),(0,l.jsx)(s.fI,{placeholder:"#ed143d",color:"#ed143d"}),(0,l.jsx)(s.fI,{placeholder:"rgba(237, 20, 61, 0.5)",color:"rgba(237, 20, 61, 0.5)"}),(0,l.jsx)(s.fI,{placeholder:"hsla(349, 86%, 50% / 0.5)",color:"hsla(349, 86%, 50% / 0.5)"})]})}},c="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:18:09\n * @ Description: Examples of TextBox component with different colors.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='primary' color='primary'/>\n        <TextBox placeholder='dark' color='dark'/>\n        <TextBox placeholder='info' color='info'/>\n        <TextBox placeholder='warning' color='warning' />\n        <TextBox placeholder='default' color='default'/>\n        <TextBox placeholder='rgb(237, 20, 61)' color='rgb(237, 20, 61)'/>\n        <TextBox placeholder='hwb(349 8% 7%)' color='hwb(349 8% 7%)'/>\n        <TextBox placeholder='hsl(349, 86%, 50%)' color='hsl(349, 86%, 50%)' />\n\n        <TextBox placeholder='secondary' color='secondary'/>\n        <TextBox placeholder='light' color='light'/>\n        <TextBox placeholder='success' color='success'/>\n        <TextBox placeholder='error' color='error'/>\n        <TextBox placeholder='crimson' color='crimson'/>\n        <TextBox placeholder='#ed143d' color='#ed143d'/>\n        <TextBox placeholder='rgba(237, 20, 61, 0.5)' color='rgba(237, 20, 61, 0.5)'/>\n        <TextBox placeholder='hsla(349, 86%, 50% / 0.5)' color='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",x=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"crimson",borderColor:"crimson"}),(0,l.jsx)(s.fI,{placeholder:"#ed143d",borderColor:"#ed143d"}),(0,l.jsx)(s.fI,{placeholder:"hwb(349 8% 7%)",borderColor:"hwb(349 8% 7%)"}),(0,l.jsx)(s.fI,{placeholder:"rgba(237, 20, 61 / 0.5)",borderColor:"rgba(237, 20, 61 / 0.5)"}),(0,l.jsx)(s.fI,{placeholder:"rgb(237, 20, 61)",borderColor:"rgb(237, 20, 61)"}),(0,l.jsx)(s.fI,{placeholder:"rgba(237, 20, 61, 0.5)",borderColor:"rgba(237, 20, 61, 0.5)"}),(0,l.jsx)(s.fI,{placeholder:"hsl(349, 86%, 50%)",borderColor:"hsl(349, 86%, 50%)"}),(0,l.jsx)(s.fI,{placeholder:"hsla(349, 86%, 50% / 0.5)",borderColor:"hsla(349, 86%, 50% / 0.5)"})]})}},p="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:41:55\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:17:16\n * @ Description: Examples of TextBox component with border colors.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='crimson' borderColor='crimson' />\n        <TextBox placeholder='#ed143d' borderColor='#ed143d' />\n        <TextBox placeholder='hwb(349 8% 7%)' borderColor='hwb(349 8% 7%)' />\n        <TextBox placeholder='rgba(237, 20, 61 / 0.5)' borderColor='rgba(237, 20, 61 / 0.5)' />\n\n        <TextBox placeholder='rgb(237, 20, 61)' borderColor='rgb(237, 20, 61)' />\n        <TextBox placeholder='rgba(237, 20, 61, 0.5)' borderColor='rgba(237, 20, 61, 0.5)' />\n        <TextBox placeholder='hsl(349, 86%, 50%)' borderColor='hsl(349, 86%, 50%)' />\n        <TextBox placeholder='hsla(349, 86%, 50% / 0.5)' borderColor='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",u=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"crimson",activeBorderColor:"crimson"}),(0,l.jsx)(s.fI,{placeholder:"#ed143d",activeBorderColor:"#ed143d"}),(0,l.jsx)(s.fI,{placeholder:"hwb(349 8% 7%)",activeBorderColor:"hwb(349 8% 7%)"}),(0,l.jsx)(s.fI,{placeholder:"rgba(237, 20, 61 / 0.5)",activeBorderColor:"rgba(237, 20, 61 / 0.5)"}),(0,l.jsx)(s.fI,{placeholder:"rgb(237, 20, 61)",activeBorderColor:"rgb(237, 20, 61)"}),(0,l.jsx)(s.fI,{placeholder:"rgba(237, 20, 61, 0.5)",activeBorderColor:"rgba(237, 20, 61, 0.5)"}),(0,l.jsx)(s.fI,{placeholder:"hsl(349, 86%, 50%)",activeBorderColor:"hsl(349, 86%, 50%)"}),(0,l.jsx)(s.fI,{placeholder:"hsla(349, 86%, 50% / 0.5)",activeBorderColor:"hsla(349, 86%, 50% / 0.5)"})]})}},m="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:47:01\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:16:32\n * @ Description: Examples of TextBox component in with active border colors.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='crimson' activeBorderColor='crimson' />\n        <TextBox placeholder='#ed143d' activeBorderColor='#ed143d' />\n        <TextBox placeholder='hwb(349 8% 7%)' activeBorderColor='hwb(349 8% 7%)' />\n        <TextBox placeholder='rgba(237, 20, 61 / 0.5)' activeBorderColor='rgba(237, 20, 61 / 0.5)' />\n\n        <TextBox placeholder='rgb(237, 20, 61)' activeBorderColor='rgb(237, 20, 61)' />\n        <TextBox placeholder='rgba(237, 20, 61, 0.5)' activeBorderColor='rgba(237, 20, 61, 0.5)' />\n        <TextBox placeholder='hsl(349, 86%, 50%)' activeBorderColor='hsl(349, 86%, 50%)' />\n        <TextBox placeholder='hsla(349, 86%, 50% / 0.5)' activeBorderColor='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",h=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"none (default)",borderWidth:"none"}),(0,l.jsx)(s.fI,{placeholder:"hairline",borderWidth:"hairline"}),(0,l.jsx)(s.fI,{placeholder:"thin",borderWidth:"thin"}),(0,l.jsx)(s.fI,{placeholder:"base",borderWidth:"base"}),(0,l.jsx)(s.fI,{placeholder:"thick",borderWidth:"thick"}),(0,l.jsx)(s.fI,{placeholder:"3",borderWidth:3})]})}},f="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 23:07:10\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:17:51\n * @ Description: Examples of TextBox component with borders width.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='none (default)' borderWidth='none' />\n        <TextBox placeholder='hairline' borderWidth='hairline' />\n        <TextBox placeholder='thin' borderWidth='thin' />\n        <TextBox placeholder='base' borderWidth='base' />\n        <TextBox placeholder='thick' borderWidth='thick' />\n        <TextBox placeholder='3' borderWidth={3}/>\n      </div>\n    );\n  }\n}",b=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"none",radius:"none"}),(0,l.jsx)(s.fI,{placeholder:"medium",radius:"medium"}),(0,l.jsx)(s.fI,{placeholder:"full radius",radius:"full"}),(0,l.jsx)(s.fI,{placeholder:"small",radius:"small"}),(0,l.jsx)(s.fI,{placeholder:"large",radius:"large"}),(0,l.jsx)(s.fI,{placeholder:"12",radius:12})]})}},v="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-15 22:50:56\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:17:34\n * @ Description: Examples of TextBox component border radius.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='none' radius='none'/>\n        <TextBox placeholder='medium' radius='medium'/>\n        <TextBox placeholder='full radius' radius='full'/>\n        <TextBox placeholder='small' radius='small'/>\n        <TextBox placeholder='large' radius='large' />\n        <TextBox placeholder='12' radius={12} />\n      </div>\n    );\n  }\n}",g=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"crimson",borderColor:"crimson"}),(0,l.jsx)(s.fI,{placeholder:"#ed143d",borderColor:"#ed143d"}),(0,l.jsx)(s.fI,{placeholder:"hwb(349 8% 7%)",borderColor:"hwb(349 8% 7%)"}),(0,l.jsx)(s.fI,{placeholder:"rgba(237, 20, 61 / 0.5)",borderColor:"rgba(237, 20, 61 / 0.5)"}),(0,l.jsx)(s.fI,{placeholder:"rgb(237, 20, 61)",borderColor:"rgb(237, 20, 61)"}),(0,l.jsx)(s.fI,{placeholder:"rgba(237, 20, 61, 0.5)",borderColor:"rgba(237, 20, 61, 0.5)"}),(0,l.jsx)(s.fI,{placeholder:"hsl(349, 86%, 50%)",borderColor:"hsl(349, 86%, 50%)"}),(0,l.jsx)(s.fI,{placeholder:"hsla(349, 86%, 50% / 0.5)",borderColor:"hsla(349, 86%, 50% / 0.5)"})]})}},j="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-15 22:55:08\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:16:58\n * @ Description: Examples of TextBox component with background colors.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='crimson' borderColor='crimson' />\n        <TextBox placeholder='#ed143d' borderColor='#ed143d' />\n        <TextBox placeholder='hwb(349 8% 7%)' borderColor='hwb(349 8% 7%)' />\n        <TextBox placeholder='rgba(237, 20, 61 / 0.5)' borderColor='rgba(237, 20, 61 / 0.5)' />\n        <TextBox placeholder='rgb(237, 20, 61)' borderColor='rgb(237, 20, 61)' />\n        <TextBox placeholder='rgba(237, 20, 61, 0.5)' borderColor='rgba(237, 20, 61, 0.5)' />\n        <TextBox placeholder='hsl(349, 86%, 50%)' borderColor='hsl(349, 86%, 50%)' />\n        <TextBox placeholder='hsla(349, 86%, 50% / 0.5)' borderColor='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",T=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"crimson",activeBackgroundColor:"crimson"}),(0,l.jsx)(s.fI,{placeholder:"#ed143d",activeBackgroundColor:"#ed143d"}),(0,l.jsx)(s.fI,{placeholder:"hwb(349 8% 7%)",activeBackgroundColor:"hwb(349 8% 7%)"}),(0,l.jsx)(s.fI,{placeholder:"rgba(237, 20, 61 / 0.5)",activeBackgroundColor:"rgba(237, 20, 61 / 0.5)"}),(0,l.jsx)(s.fI,{placeholder:"rgb(237, 20, 61)",activeBackgroundColor:"rgb(237, 20, 61)"}),(0,l.jsx)(s.fI,{placeholder:"rgba(237, 20, 61, 0.5)",activeBackgroundColor:"rgba(237, 20, 61, 0.5)"}),(0,l.jsx)(s.fI,{placeholder:"hsl(349, 86%, 50%)",activeBackgroundColor:"hsl(349, 86%, 50%)"}),(0,l.jsx)(s.fI,{placeholder:"hsla(349, 86%, 50% / 0.5)",activeBackgroundColor:"hsla(349, 86%, 50% / 0.5)"})]})}},C="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-15 22:57:49\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-17 19:53:47\n * @ Description: Examples of TextBox component in with activeBackgroundColor property.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='crimson' activeBackgroundColor='crimson' />\n        <TextBox placeholder='#ed143d' activeBackgroundColor='#ed143d' />\n        <TextBox placeholder='hwb(349 8% 7%)' activeBackgroundColor='hwb(349 8% 7%)' />\n        <TextBox placeholder='rgba(237, 20, 61 / 0.5)' activeBackgroundColor='rgba(237, 20, 61 / 0.5)' />\n        <TextBox placeholder='rgb(237, 20, 61)' activeBackgroundColor='rgb(237, 20, 61)' />\n        <TextBox placeholder='rgba(237, 20, 61, 0.5)' activeBackgroundColor='rgba(237, 20, 61, 0.5)' />\n        <TextBox placeholder='hsl(349, 86%, 50%)' activeBackgroundColor='hsl(349, 86%, 50%)' />\n        <TextBox placeholder='hsla(349, 86%, 50% / 0.5)' activeBackgroundColor='hsla(349, 86%, 50% / 0.5)' />\n      </div>\n    );\n  }\n}",y=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"outlined",type:"outlined"}),(0,l.jsx)(s.fI,{placeholder:"underlined",type:"underlined"})]})}},B="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-15 23:00:34\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-17 19:55:35\n * @ Description: Examples of TextBox component with type properties.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='outlined' type='outlined' />\n        <TextBox placeholder='underlined' type='underlined' />\n      </div>\n    );\n  }\n}",A=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"small",size:"small"}),(0,l.jsx)(s.fI,{placeholder:"default",size:"default"}),(0,l.jsx)(s.fI,{placeholder:"medium",size:"medium"}),(0,l.jsx)(s.fI,{placeholder:"large",size:"large"})]})}},w="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-16 20:51:10\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:18:24\n * @ Description: Examples of TextBox component with different sizes.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='small' size='small' />\n        <TextBox placeholder='default' size='default' />\n        <TextBox placeholder='medium' size='medium' />\n        <TextBox placeholder='large' size='large' />\n      </div>\n    );\n  }\n}",S=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"outlined",type:"outlined",readOnly:!0}),(0,l.jsx)(s.fI,{placeholder:"underlined",type:"underlined",readOnly:!0})]})}},I="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-16 20:53:54\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 21:11:15\n * @ Description: Examples of TextBox component in readonly state.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='outlined' type='outlined' readOnly />\n        <TextBox placeholder='underlined' type='underlined' readOnly />\n      </div>\n    );\n  }\n}";i.PureComponent;var k=r(71582),R=r(32533);const P=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"Input with text label",label:"Label"}),(0,l.jsx)(s.fI,{placeholder:"Input with custom element as label",label:(0,l.jsx)(E,{})})]})}};function E(){return(0,l.jsxs)(k.EY,{style:N.label,children:[(0,l.jsx)(R.default,{name:"avatar",onPress:()=>"web"===k.OD.OS?alert("Custom Element as label"):k.Fc.alert("Alert Title","Custom Element as label",[{text:"OK"}])})," Custom Element Label"]})}const N=k.vv.create({label:{color:"crimson"},row:{columnGap:16,flexDirection:"row",width:"100%",backgroundColor:"transparent"},column:{flex:1,rowGap:16,alignContent:"center",justifyContent:"space-evenly",backgroundColor:"transparent"}}),M="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 22:35:48\n * @ Description: Examples of TextBox component with labels.\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, Alert, Platform } from \"react-native\";\nimport Icon from '@flexnative/icons';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='Input with text label' label=\"Label\" />\n        <TextBox placeholder='Input with custom element as label' label={<Label />} />\n      </div>\n    );\n  }\n}\n\nfunction Label() {\n  const openAlert = () =>\n    Platform.OS === 'web'\n      ? alert('Custom Element as label')\n      : Alert.alert('Alert Title', 'Custom Element as label', [\n          {text: 'OK'},\n        ]);\n    \n  return <Text style={styles.label}>\n    <Icon name=\"avatar\" onPress={openAlert} /> Custom Element Label\n  </Text>;\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    color: 'crimson'\n  },\n  row: {\n    columnGap: 16,\n    flexDirection: \"row\",\n    width: '100%',\n    backgroundColor: 'transparent'\n  },\n  column: {\n    flex: 1,\n    rowGap: 16,\n    alignContent: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: 'transparent'\n  }\n});",D=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"Style with StyleProp<TextStyle>",label:"Label",labelStyle:L.label}),(0,l.jsx)(s.fI,{placeholder:"Style with function",label:"Label",labelStyle:V("rgb(35, 189, 224)","crimson")})]})}},V=(e,n)=>r=>[{color:r.focused?n:e}],L=k.vv.create({label:{color:"crimson"}}),O="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 22:38:18\n * @ Description: Examples of TextBox component with custom label styles.\n */\n\nimport React from 'react';\nimport { StyleSheet, ColorValue, StyleProp, TextStyle } from \"react-native\";\n// highlight-next-line\nimport { StateCallbackType, TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='Style with StyleProp<TextStyle>' label=\"Label\" labelStyle={styles.label} />\n        <TextBox placeholder='Style with function' label=\"Label\" labelStyle={labelStyles('rgb(35, 189, 224)', 'crimson')} />\n      </div>\n    );\n  }\n}\n\nconst labelStyles = (defaultColor: ColorValue, activeColor: ColorValue) => {\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\n    return [\n      {\n        color: state.focused ? activeColor : defaultColor\n      }\n    ]\n  }\n} \n\nconst styles = StyleSheet.create({\n  label: {\n    color: 'crimson'\n  }\n});",_=class extends i.PureComponent{render(){return(0,l.jsx)("div",{className:"example-block form-input",children:(0,l.jsx)(s.fI,{placeholder:"input with helper text",helperText:"Helper text"})})}},W="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 22:42:14\n * @ Description: Examples of TextBox component with helper text.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='input with helper text' helperText=\"Helper text\" />\n      </div>\n    );\n  }\n}",z=class extends i.PureComponent{render(){return(0,l.jsx)("div",{className:"example-block form-input",children:(0,l.jsx)(s.fI,{placeholder:"Max length",maxLength:15})})}},q="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 22:47:07\n * @ Description: Examples of TextBox component with max length, number of digits.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='Max length' maxLength={15} />\n      </div>\n    );\n  }\n}",K=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"Input with icon prefix",prefix:"star"}),(0,l.jsx)(s.fI,{placeholder:"Input with custom element as prefix",prefix:(0,l.jsx)(U,{})})]})}};function U(){return(0,l.jsx)(R.default,{name:"avatar",onPress:()=>"web"===k.OD.OS?alert("Custom Element as prefix"):k.Fc.alert("Alert Title","Custom Element as prefix",[{text:"OK"}])})}const F="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 22:51:08\n * @ Description: Examples of TextBox component with prefix.\n */\n\nimport React from 'react';\nimport { Alert, Platform } from 'react-native';\nimport Icon from '@flexnative/icons';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='Input with icon prefix' prefix=\"star\" />\n        <TextBox placeholder='Input with custom element as prefix' prefix={<Prefix />} />\n      </div>\n    );\n  }\n}\n\nfunction Prefix() {\n  const openAlert = () =>\n    Platform.OS === 'web'\n      ? alert('Custom Element as prefix')\n      : Alert.alert('Alert Title', 'Custom Element as prefix', [\n          {text: 'OK'},\n        ]);\n    \n  return <Icon name=\"avatar\" onPress={openAlert} />;\n}",G=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"Style with StyleProp<TextStyle>",prefix:"star",prefixStyle:H.prefix}),(0,l.jsx)(s.fI,{placeholder:"Style with function",prefix:"star",prefixStyle:$("rgb(35, 189, 224)","crimson")})]})}},$=(e,n)=>r=>[{color:r.focused?n:e}],H=k.vv.create({prefix:{color:"crimson"}}),Z="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 22:54:54\n * @ Description: Examples of TextBox component with prefix with custom styles.\n */\n\nimport React from 'react';\nimport { ColorValue, StyleProp, StyleSheet, TextStyle } from \"react-native\";\n// highlight-next-line\nimport { TextBox, StateCallbackType } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='Style with StyleProp<TextStyle>' prefix=\"star\" prefixStyle={styles.prefix} />\n        <TextBox placeholder='Style with function' prefix=\"star\" prefixStyle={prefixStyle('rgb(35, 189, 224)', 'crimson')} />\n      </div>\n    );\n  }\n}\n\nconst prefixStyle = (defaultColor: ColorValue, activeColor: ColorValue) => {\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\n    return [\n      {\n        color: state.focused ? activeColor : defaultColor\n      }\n    ]\n  }\n} \n\nconst styles = StyleSheet.create({\n  prefix: {\n    color: 'crimson'\n  }\n});",J=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"Input with icon suffix",suffix:"star"}),(0,l.jsx)(s.fI,{placeholder:"Input with custom element as suffix",suffix:(0,l.jsx)(Y,{})})]})}};function Y(){return(0,l.jsx)(R.default,{name:"avatar",onPress:()=>"web"===k.OD.OS?alert("Custom Element as suffix"):k.Fc.alert("Alert Title","Custom Element as suffix",[{text:"OK"}])})}const X="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:04:40\n * @ Description: Examples of TextBox component with different colors.\n */\n\nimport React from 'react';\nimport { Alert, Platform } from \"react-native\";\nimport Icon from '@flexnative/icons';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='Input with icon suffix' suffix=\"star\" />\n        <TextBox placeholder='Input with custom element as suffix' suffix={<Suffix />} />\n      </div>\n    );\n  }\n}\n\nfunction Suffix() {\n  const openAlert = () =>\n    Platform.OS === 'web'\n      ? alert('Custom Element as suffix')\n      : Alert.alert('Alert Title', 'Custom Element as suffix', [\n          {text: 'OK'},\n        ]);\n    \n  return <Icon name=\"avatar\" onPress={openAlert} />;\n}",Q=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"Style with StyleProp<TextStyle>",suffix:"star",suffixStyle:ne.prefix}),(0,l.jsx)(s.fI,{placeholder:"Style with function",suffix:"star",suffixStyle:ee("rgb(35, 189, 224)","crimson")})]})}},ee=(e,n)=>r=>[{color:r.focused?n:e}],ne=k.vv.create({prefix:{color:"crimson"}}),re="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:06:26\n * @ Description: Examples of TextBox component with Suffix with custom styles.\n */\n\nimport React from 'react';\nimport { StyleSheet, ColorValue, StyleProp, TextStyle } from \"react-native\";\n// highlight-next-line\nimport { TextBox, StateCallbackType } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='Style with StyleProp<TextStyle>' suffix=\"star\" suffixStyle={styles.prefix} />\n        <TextBox placeholder='Style with function' suffix=\"star\" suffixStyle={suffixStyle('rgb(35, 189, 224)', 'crimson')} />\n      </div>\n    );\n  }\n}\n\nconst suffixStyle = (defaultColor: ColorValue, activeColor: ColorValue) => {\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\n    return [\n      {\n        color: state.focused ? activeColor : defaultColor\n      }\n    ]\n  }\n} \n\nconst styles = StyleSheet.create({\n  prefix: {\n    color: 'crimson'\n  }\n});",oe=class extends i.PureComponent{render(){return(0,l.jsxs)("div",{className:"example-block form-input",children:[(0,l.jsx)(s.fI,{placeholder:"Prefix Separator",prefix:"avatar",prefixSeparator:!0}),(0,l.jsx)(s.fI,{placeholder:"Suffix Separator",suffix:"avatar",suffixSeparator:!0})]})}},le="/**\n * @ Author: Redon Alla\n * @ Create Time: 2024-10-14 22:35:25\n * @ Modified by: Redon Alla\n * @ Modified time: 2024-10-16 23:09:39\n * @ Description: Examples of TextBox component with AdornmentSeparator.\n */\n\nimport React from 'react';\n// highlight-next-line\nimport { TextBox } from '@flexnative/inputs';\n\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div className='example-block form-input'>\n        <TextBox placeholder='Prefix Separator' prefix=\"avatar\" prefixSeparator />\n        <TextBox placeholder='Suffix Separator' suffix=\"avatar\" suffixSeparator />\n      </div>\n    );\n  }\n}",te={title:"Default",sidebar_position:1,sidebar_class_name:"nav_icon text-box-default",last_update:{date:new Date("2024-09-24T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},ae=void 0,ie={},se=[{value:"Usecase Examples",id:"usecase-examples",level:2},{value:"Colors",id:"colors",level:3},{value:"Border Colors",id:"border-colors",level:3},{value:"Active Border Colors",id:"active-border-colors",level:3},{value:"Border Width",id:"border-width",level:3},{value:"Border Radius",id:"border-radius",level:3},{value:"Background Color",id:"background-color",level:3},{value:"Active Background Color",id:"active-background-color",level:3},{value:"Type",id:"type",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Readonly",id:"readonly",level:3},{value:"Disabled",id:"disabled",level:3},{value:"Label",id:"label",level:3},{value:"Label Style",id:"label-style",level:3},{value:"Helper Text",id:"helper-text",level:3},{value:"Max Length",id:"max-length",level:3},{value:"Prefix",id:"prefix",level:3},{value:"Prefix Style",id:"prefix-style",level:3},{value:"Surfix",id:"surfix",level:3},{value:"Surfix Style",id:"surfix-style",level:3},{value:"Adornments Separator",id:"adornments-separator",level:3},{value:"Playground",id:"playground",level:2}];function de(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["The following examples demonstrates the ",(0,l.jsx)(n.strong,{children:"Text Boxes"})," in action."]}),"\n",(0,l.jsx)(n.admonition,{type:"warning",children:(0,l.jsx)(n.p,{children:"In documentation apprence of components may not be in correct way.\nTo view the component in exact design please view the demo app."})}),"\n",(0,l.jsx)(n.h2,{id:"usecase-examples",children:"Usecase Examples"}),"\n",(0,l.jsx)(n.p,{children:"Usecase Examples with default style."}),"\n",(0,l.jsx)(n.h3,{id:"colors",children:"Colors"}),"\n",(0,l.jsx)(a.A,{codeExample:c,children:(0,l.jsx)(d,{})}),"\n",(0,l.jsx)(n.h3,{id:"border-colors",children:"Border Colors"}),"\n",(0,l.jsx)(a.A,{codeExample:p,children:(0,l.jsx)(x,{})}),"\n",(0,l.jsx)(n.h3,{id:"active-border-colors",children:"Active Border Colors"}),"\n",(0,l.jsx)(a.A,{codeExample:m,children:(0,l.jsx)(u,{})}),"\n",(0,l.jsx)(n.h3,{id:"border-width",children:"Border Width"}),"\n",(0,l.jsx)(a.A,{codeExample:f,children:(0,l.jsx)(h,{})}),"\n",(0,l.jsx)(n.h3,{id:"border-radius",children:"Border Radius"}),"\n",(0,l.jsx)(a.A,{codeExample:v,children:(0,l.jsx)(b,{})}),"\n",(0,l.jsx)(n.h3,{id:"background-color",children:"Background Color"}),"\n",(0,l.jsx)(a.A,{codeExample:j,children:(0,l.jsx)(g,{})}),"\n",(0,l.jsx)(n.h3,{id:"active-background-color",children:"Active Background Color"}),"\n",(0,l.jsx)(a.A,{codeExample:C,children:(0,l.jsx)(T,{})}),"\n",(0,l.jsx)(n.h3,{id:"type",children:"Type"}),"\n",(0,l.jsx)(a.A,{codeExample:B,children:(0,l.jsx)(y,{})}),"\n",(0,l.jsx)(n.h3,{id:"sizes",children:"Sizes"}),"\n",(0,l.jsx)(a.A,{codeExample:w,children:(0,l.jsx)(A,{})}),"\n",(0,l.jsx)(n.h3,{id:"readonly",children:"Readonly"}),"\n",(0,l.jsx)(a.A,{codeExample:I,children:(0,l.jsx)(S,{})}),"\n",(0,l.jsx)(n.h3,{id:"disabled",children:"Disabled"}),"\n",(0,l.jsx)(a.A,{codeExample:I,children:(0,l.jsx)(S,{})}),"\n",(0,l.jsx)(n.h3,{id:"label",children:"Label"}),"\n",(0,l.jsx)(a.A,{codeExample:M,children:(0,l.jsx)(P,{})}),"\n",(0,l.jsx)(n.h3,{id:"label-style",children:"Label Style"}),"\n",(0,l.jsx)(a.A,{codeExample:O,children:(0,l.jsx)(D,{})}),"\n",(0,l.jsx)(n.h3,{id:"helper-text",children:"Helper Text"}),"\n",(0,l.jsx)(a.A,{codeExample:W,children:(0,l.jsx)(_,{})}),"\n",(0,l.jsx)(n.h3,{id:"max-length",children:"Max Length"}),"\n",(0,l.jsx)(a.A,{codeExample:q,children:(0,l.jsx)(z,{})}),"\n",(0,l.jsx)(n.h3,{id:"prefix",children:"Prefix"}),"\n",(0,l.jsx)(a.A,{codeExample:F,children:(0,l.jsx)(K,{})}),"\n",(0,l.jsx)(n.h3,{id:"prefix-style",children:"Prefix Style"}),"\n",(0,l.jsx)(a.A,{codeExample:Z,children:(0,l.jsx)(G,{})}),"\n",(0,l.jsx)(n.h3,{id:"surfix",children:"Surfix"}),"\n",(0,l.jsx)(a.A,{codeExample:X,children:(0,l.jsx)(J,{})}),"\n",(0,l.jsx)(n.h3,{id:"surfix-style",children:"Surfix Style"}),"\n",(0,l.jsx)(a.A,{codeExample:re,children:(0,l.jsx)(Q,{})}),"\n",(0,l.jsx)(n.h3,{id:"adornments-separator",children:"Adornments Separator"}),"\n",(0,l.jsx)(a.A,{codeExample:le,children:(0,l.jsx)(oe,{})}),"\n",(0,l.jsx)(n.h2,{id:"playground",children:"Playground"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"//Play with props to see live changes;\n\nrender(<TextBox\n    prefixSeparator\n    placeholder='Play with props to see live changes'\n    color='primary'\n    borderColor='crimson'\n    borderWidth='thick'\n    radius='full'\n    size='large'\n    prefix=\"star\"\n  />);\n"})})]})}function ce(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(de,{...e})}):de(e)}},7227:(e,n,r)=>{"use strict";r.d(n,{A:()=>a});r(96540);var o=r(34164);const l={tabItem:"tabItem_Ymn6"};var t=r(74848);function a(e){let{children:n,hidden:r,className:a}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,o.A)(l.tabItem,a),hidden:r,children:n})}},49489:(e,n,r)=>{"use strict";r.d(n,{A:()=>C});var o=r(96540),l=r(34164),t=r(24245),a=r(56347),i=r(36494),s=r(62814),d=r(45167),c=r(69900);function x(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return x(e).map((e=>{let{props:{value:n,label:r,attributes:o,default:l}}=e;return{value:n,label:r,attributes:o,default:l}}))}(r);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function u(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:r}=e;const l=(0,a.W6)(),t=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,s.aZ)(t),(0,o.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(l.location.search);n.set(t,e),l.replace({...l.location,search:n.toString()})}),[t,l])]}function h(e){const{defaultValue:n,queryString:r=!1,groupId:l}=e,t=p(e),[a,s]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=r.find((e=>e.default))??r[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:t}))),[d,x]=m({queryString:r,groupId:l}),[h,f]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[l,t]=(0,c.Dv)(r);return[l,(0,o.useCallback)((e=>{r&&t.set(e)}),[r,t])]}({groupId:l}),b=(()=>{const e=d??h;return u({value:e,tabValues:t})?e:null})();(0,i.A)((()=>{b&&s(b)}),[b]);return{selectedValue:a,selectValue:(0,o.useCallback)((e=>{if(!u({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);s(e),x(e),f(e)}),[x,f,t]),tabValues:t}}var f=r(11062);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(74848);function g(e){let{className:n,block:r,selectedValue:o,selectValue:a,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,t.a_)(),c=e=>{const n=e.currentTarget,r=s.indexOf(n),l=i[r].value;l!==o&&(d(n),a(l))},x=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=s.indexOf(e.currentTarget)+1;n=s[r]??s[0];break}case"ArrowLeft":{const r=s.indexOf(e.currentTarget)-1;n=s[r]??s[s.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},n),children:i.map((e=>{let{value:n,label:r,attributes:t}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>s.push(e),onKeyDown:x,onClick:c,...t,className:(0,l.A)("tabs__item",b.tabItem,t?.className,{"tabs__item--active":o===n}),children:r??n},n)}))})}function j(e){let{lazy:n,children:r,selectedValue:t}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===t));return e?(0,o.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function T(e){const n=h(e);return(0,v.jsxs)("div",{className:(0,l.A)("tabs-container",b.tabList),children:[(0,v.jsx)(g,{...n,...e}),(0,v.jsx)(j,{...n,...e})]})}function C(e){const n=(0,f.A)();return(0,v.jsx)(T,{...e,children:x(e.children)},String(n))}},45424:(e,n,r)=>{"use strict";r.d(n,{A:()=>s});var o=r(96540),l=r(49489),t=r(7227),a=r(39498),i=r(74848);const s=class extends o.PureComponent{render(){return(0,i.jsxs)(l.A,{className:"demo-tabs",children:[(0,i.jsx)(t.A,{value:"preview",label:"Preview",default:!0,children:this.props.children}),(0,i.jsx)(t.A,{value:"code",label:"Code",children:(0,i.jsx)(a.A,{showLineNumbers:!0,language:"jsx",children:this.props.codeExample})})]})}}},35013:(e,n,r)=>{"use strict";r.d(n,{K:()=>l,q:()=>o});const o=13,l="/flexnative/img/logo.svg"},42480:(e,n,r)=>{"use strict";r.d(n,{A:()=>h});var o=r(96540),l=r(35013),t=r(64444),a=r(86884),i=r(32533),s=r(17120),d=r(57388),c=r(58424),x=r(73769),p=r(75117),u=r(44116),m=r(49585);const h={React:o,...o,Avatar:t.Ay,AvatarGroup:t.Z7,Button:a.A,Icon:i.default,Spinner:i.Spinner,BottomSheet:s.A,Tag:d.A,Badge:c.A,SkeletonLoader:x.Ay,Circle:x.jl,Rect:x.rw,TextBox:p.fI,NumericTextBox:p.uI,Check:p.Jl,CheckList:p.Pg,Message:u.A,Block:m.e,LOGO:l.K}},78982:()=>{},47790:()=>{},73776:()=>{},77965:()=>{},66089:()=>{},79368:()=>{},64688:()=>{},51069:()=>{},15340:()=>{},79838:()=>{},63779:()=>{},77199:()=>{}}]);