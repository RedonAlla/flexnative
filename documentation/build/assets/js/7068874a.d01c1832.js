(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[4798],{22475:(e,t,n)=>{"use strict";n.d(t,{Ay:()=>i,RM:()=>a});var r=n(74848),s=n(28453),o=n(39498);const a=[{value:"Installation",id:"installation",level:2}];function l(e){const t={h2:"h2",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(t.p,{children:["You can installing ",(0,r.jsx)(t.strong,{children:e.title})," packages using npm:"]}),"\n",(0,r.jsx)(o.A,{language:"bash",children:`npm i ${e.name}`})]})}function i(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},22888:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"getting-started/setup-ra-theme-provider","title":"Setup Theme Provider","description":"FlexNative ThemeProvider is part of FlexNative and is a component that makes the theme available throughout your app.","source":"@site/docs/getting-started/setup-ra-theme-provider.mdx","sourceDirName":"getting-started","slug":"/getting-started/setup-ra-theme-provider","permalink":"/flexnative/docs/getting-started/setup-ra-theme-provider","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/getting-started/setup-ra-theme-provider.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."}],"version":"current","lastUpdatedAt":1727136000000,"frontMatter":{"title":"Setup Theme Provider","last_update":{"date":"2024-09-24T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework"]},"sidebar":"componentsSidebar","previous":{"title":"Installation","permalink":"/flexnative/docs/getting-started/installation"},"next":{"title":"Theme","permalink":"/flexnative/docs/theme/"}}');var s=n(74848),o=n(28453),a=n(22475),l=n(49489),i=n(7227);const c={title:"Setup Theme Provider",last_update:{date:new Date("2024-09-24T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework"]},d=void 0,h={},u=[...a.RM,{value:"Using ThemeProvider",id:"using-themeprovider",level:2},{value:"Examples",id:"examples",level:3},{value:"Using ThemeContext",id:"using-themecontext",level:2},{value:"ThemeContextProps",id:"themecontextprops",level:3},{value:"BaseTheme&lt;TColors&gt;",id:"basethemetcolors",level:3},{value:"Examples",id:"examples-1",level:3}];function m(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"FlexNative ThemeProvider"})," is part of ",(0,s.jsx)(t.em,{children:"FlexNative"})," and is a component that makes the theme available throughout your app.\nIt uses ",(0,s.jsx)(t.strong,{children:"React's Context API"}),"."]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["If you are not familiar with React's Context we strongly suggest to follow ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"https://reactjs.org/docs/context.html",children:"this link"})})," before starting."]})}),"\n",(0,s.jsx)(a.Ay,{title:"FlexNative ThemeProvider",name:"@flexnative/theme-context"}),"\n",(0,s.jsx)(t.h2,{id:"using-themeprovider",children:"Using ThemeProvider"}),"\n",(0,s.jsxs)(t.p,{children:["ThemeProvider it is a ",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.strong,{children:"Class React Component"})})," that let's passing/consuming theme from all components through the App.\nIt accepts a ",(0,s.jsx)(t.a,{href:"/flexnative/docs/theme/default-theme#basethemetcolors",children:"value prop"})," which is the data that will be shared with all components that are consumers of that context."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"ThemeProvider"})," wrap the top-level component of your application with a Provider component, thus making the context available to all its descendants."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"ThemeProvider"})," it comes with the base structure for implementing ",(0,s.jsx)(t.em,{children:"multiple themes"})," and supporting ",(0,s.jsx)(t.em,{children:"dark mode"}),"."]}),"\n",(0,s.jsx)(t.admonition,{title:"CAUTION",type:"danger",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:(0,s.jsx)(t.strong,{children:"ThemeProvider"})})," it supports dark mode depending on the device's color scheme.\nYou also can implement you custom dark mode beheiver, for more details read section\n",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/flexnative/docs/theme/examples",children:"ThemeProvider"})}),"."]})}),"\n",(0,s.jsxs)(t.p,{children:["To change default colors or add new colors fallow this link on ",(0,s.jsx)(t.a,{href:"/flexnative/docs/theme/customizing-theme",children:"how to change default colors"}),"\nor ",(0,s.jsx)(t.a,{href:"../theme//extend-theme.mdx",children:"how to add custom colors"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["To support dark mode fallow this link on ",(0,s.jsx)(t.a,{href:"/flexnative/docs/theme/examples",children:"how to implement dark mode using ThemeContext"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(t.p,{children:["Add ",(0,s.jsx)(t.strong,{children:"ThemeProvider"})," from ",(0,s.jsx)(t.em,{children:"FlexNative"})," to the root of your app and update App.js as follows examples."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:"showLineNumbers",children:"// highlight-next-line\nimport ThemeContext, { light } from '@flexnative/theme-context';\n\nfunction App() {\n  return (\n    <ThemeContext.Provider value={{colors: themeColors}}>\n      <YourAPP />\n    </ThemeContext.Provider>\n  );\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"using-themecontext",children:"Using ThemeContext"}),"\n",(0,s.jsxs)(t.p,{children:["ThemeContext it expects as ",(0,s.jsx)(t.code,{children:"value"})," an object of type ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#themecontextprops",children:(0,s.jsx)(t.code,{children:"ThemeProviderProps<TColors>"})})}),".\nYou can use one of default themes ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/docs/theme/default-heme#light-palette",children:"light"})})," or ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/docs/theme/default-heme#dark-palette",children:"dark"})}),"\nfrom ",(0,s.jsx)(t.code,{children:"@flexnative/theme-context"})," or you can create your own theme as long you implements ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"#basetheme",children:(0,s.jsx)(t.code,{children:"ThemeBase"})})})," object."]}),"\n",(0,s.jsxs)(t.p,{children:["To change default colors or add new colors fallow this link on ",(0,s.jsx)(t.a,{href:"/docs/theme/@flexnative/theme-customizing-theme",children:"how to change default colors"}),"\nor ",(0,s.jsx)(t.a,{href:"/docs/theme/@flexnative/theme-customizing-theme",children:"how to add custom colors"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["To support dark mode fallow this link on ",(0,s.jsx)(t.a,{href:"/docs/theme/@flexnative/theme-dark-mod-theme",children:"how to implement dark mode using ThemeContext"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"themecontextprops",children:"ThemeContextProps"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Default Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"colors"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#basethemetcolors",children:(0,s.jsx)(t.code,{children:"BaseTheme<TColors>"})})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"true"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#basetheme",children:"BaseTheme"})}),(0,s.jsxs)(t.td,{children:["Where ",(0,s.jsx)(t.strong,{children:"TColors"})," object with custom colors"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"colorScheme"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ColorSchemeName"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"false"})}),(0,s.jsx)(t.td,{children:"Device ColorScheme"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"ColorSchemeName"})," from ",(0,s.jsx)(t.code,{children:"react-native"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"setTheme"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"(theme: BaseTheme & TColors) => void"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"false"})}),(0,s.jsx)(t.td,{children:"null"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"void function"})," for change all theme colors. It expect as parameter object of ",(0,s.jsx)(t.code,{children:"BaseTheme<TColors>"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"setColorScheme"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"(colorScheme: ColorSchemeName) => void"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"false"})}),(0,s.jsx)(t.td,{children:"null"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"void function"})," for change schema (light/dark). It expect as parameter type of ",(0,s.jsx)(t.code,{children:"ColorSchemeName"})]})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"basethemetcolors",children:"BaseTheme<TColors>"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"#basetheme",children:(0,s.jsx)(t.code,{children:"BaseTheme"})})," and ",(0,s.jsx)(t.code,{children:"TColors"})," custom extendet colors."]}),"\n",(0,s.jsx)(t.h3,{id:"examples-1",children:"Examples"}),"\n",(0,s.jsx)(t.p,{children:"Example of consuming Theme Context."}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(i.A,{value:"function-component",label:"Function Component",default:!0,children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",metastring:"showLineNumbers",children:"import { useThemeContext } from '@flexnative/theme-context';\n// highlight-next-line\nimport ThemeContext from '@flexnative/theme-context';\n\nfunction App() {\n  const theme = useThemeContext();\n\n  return (\n    <Text style={{ color: theme.colors.text}}>Example of consuming Theme Context.</Text>\n  );\n}\n"})})}),(0,s.jsx)(i.A,{value:"class-component",label:"Class Component",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",metastring:"showLineNumbers",children:"import React from 'react';\nimport { Text } from 'react-native';\n// highlight-next-line\nimport ThemeContext, { light } from '@flexnative/theme-context';\n\nclass App extends React.Component {\n  // highlight-start\n  static contextType = ThemeContext;\n  declare context: React.ContextType<typeof ThemeContext>;\n  // highlight-end\n\n  return (\n    <Text style={{ color: this.context.colors.text}}>Example of consuming Theme Context.</Text>\n  );\n}\n"})})})]})]})}function x(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},7227:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});n(96540);var r=n(34164);const s={tabItem:"tabItem_Ymn6"};var o=n(74848);function a(e){let{children:t,hidden:n,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:n,children:t})}},49489:(e,t,n)=>{"use strict";n.d(t,{A:()=>w});var r=n(96540),s=n(34164),o=n(24245),a=n(56347),l=n(36494),i=n(62814),c=n(45167),d=n(69900);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:s}}=e;return{value:t,label:n,attributes:r,default:s}}))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function x(e){let{queryString:t=!1,groupId:n}=e;const s=(0,a.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(s.location.search);t.set(o,e),s.replace({...s.location,search:t.toString()})}),[o,s])]}function p(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,o=u(e),[a,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[c,h]=x({queryString:n,groupId:s}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,o]=(0,d.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:s}),g=(()=>{const e=c??p;return m({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{g&&i(g)}),[g]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),h(e),f(e)}),[h,f,o]),tabValues:o}}var f=n(11062);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(74848);function j(e){let{className:t,block:n,selectedValue:r,selectValue:a,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const t=e.currentTarget,n=i.indexOf(t),s=l[n].value;s!==r&&(c(t),a(s))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:o}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>i.push(e),onKeyDown:h,onClick:d,...o,className:(0,s.A)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function b(e){let{lazy:t,children:n,selectedValue:o}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function T(e){const t=p(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,v.jsx)(j,{...t,...e}),(0,v.jsx)(b,{...t,...e})]})}function w(e){const t=(0,f.A)();return(0,v.jsx)(T,{...e,children:h(e.children)},String(t))}},35013:(e,t,n)=>{"use strict";n.d(t,{K:()=>s,q:()=>r});const r=13,s="/flexnative/img/logo.svg"},42480:(e,t,n)=>{"use strict";n.d(t,{A:()=>m});var r=n(96540),s=n(35013),o=n(64444),a=n(86884),l=n(32533),i=n(17120),c=n(49030),d=n(58424),h=n(73769),u=n(75117);const m={React:r,...r,Avatar:o.Ay,AvatarGroup:o.Z7,Button:a.A,Icon:l.default,Spinner:l.Spinner,BottomSheet:i.A,Tag:c.A,Badge:d.A,SkeletonLoader:h.Ay,Circle:h.jl,Rect:h.rw,TextBox:u.fI,NumericTextBox:u.uI,Check:u.Jl,CheckList:u.Pg,LOGO:s.K}},78982:()=>{},47790:()=>{},73776:()=>{},77965:()=>{},66089:()=>{},79368:()=>{},64688:()=>{},51069:()=>{},15340:()=>{},79838:()=>{},63779:()=>{},77199:()=>{}}]);