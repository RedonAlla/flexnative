"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[2802],{61031:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"components/navigation/FancyDrawer","title":"FancyDrawer","description":"Component","source":"@site/docs/components/navigation/FancyDrawer.mdx","sourceDirName":"components/navigation","slug":"/components/navigation/FancyDrawer","permalink":"/flexnative/docs/components/navigation/FancyDrawer","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/components/navigation/FancyDrawer.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{"inline":false,"label":"Component","permalink":"/flexnative/docs/tags/component","description":"Create user interfaces from components."},{"inline":false,"label":"Navigation","permalink":"/flexnative/docs/tags/navigation","description":"Useful components for navigation."}],"version":"current","lastUpdatedAt":1736121600000,"frontMatter":{"last_update":{"date":"2025-01-06T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework","component","navigation"]},"sidebar":"componentsSidebar","previous":{"title":"Navigation","permalink":"/flexnative/docs/components/navigation/"},"next":{"title":"Skeleton Loading","permalink":"/flexnative/docs/components/skeleton-loading/"}}');var r=t(74848),o=t(28453),i=t(49489),s=t(7227);const l={last_update:{date:new Date("2025-01-06T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component","navigation"]},c=void 0,u={},d=[{value:"Component",id:"component",level:2},{value:"Example",id:"example",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"component",children:"Component"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"withFancyDrawer"})," function is a HOC that enhances a given component with additional animations and styles to simulate a fancy drawer effect."]}),"\n",(0,r.jsx)(n.p,{children:"The code makes use of React hooks and animation libraries (useDrawerProgress, useDrawerStatus, and useAnimatedStyle)\nto dynamically apply animations based on the drawer's state and progress."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"withFancyDrawer"})}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"withFancyDrawer<T>(Component: React.ComponentType<React.PropsWithChildren<T>>)"})]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)("div",{className:"example-block",style:{justifyContent:"center"},children:(0,r.jsx)("img",{src:t(35918).A,width:"35%"})}),"\n","\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(s.A,{value:"CustomDrawerContent",label:"CustomDrawerContent",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="/src/components/CustomDrawerContent.js"',children:"import React from 'react';\nimport {\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n  DrawerItem,\n  DrawerItemList,\n} from '@react-navigation/drawer';\nimport { View, StyleSheet } from 'react-native';\n\nimport Avatar from '@flexnative/avatar';\nimport Ionicons from '@expo/vector-icons/Ionicons';\n\n\nconst profilePic = require(\"../../../assets/icon.png\");\n\n/**\n * The drawer itself\n */\nexport default (props: DrawerContentComponentProps) => {\n  return (\n    <DrawerContentScrollView style={styles.container} {...props} >\n      <Avatar style={styles.avatar} source={profilePic} size='large' />\n      <DrawerItemList {...props} />\n      <Separator />\n      <DrawerItem\n        label=\"Logout\"\n        activeTintColor='white'\n        inactiveTintColor='white'\n        icon={(props) => <Ionicons name=\"log-out-outline\" size={props.size} color={props.color}/> }\n        onPress={() => console.log('help')}\n      />\n    </DrawerContentScrollView>\n  );\n}\n\nconst Separator = () => (\n\t<View style={styles.separator}></View>\n)\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 50\n  },\n  avatar: {\n    marginBottom: DEMO_COMPONENT_GAP\n  },\n  separator: {\n\t\tmargin: 15,\n\t\theight: 1,\n\t\twidth: '100%',\n\t\tbackgroundColor: '#ffffff30',\n  }\n});\n"})})}),(0,r.jsx)(s.A,{value:"_layout",label:"_layout",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="/app/_layout.jsx"',children:"import React from 'react';\nimport { PureComponent, ReactNode } from 'react';\nimport { Drawer } from 'expo-router/drawer';\n\nimport Icon from '@flexnative/icons';\nimport ThemeContext from '@flexnative/theme-context';\n\nimport DrawerContent from '@/screens/components/Navigation/CustomDrawerContent';\n\n\nexport default class DrawerScreen extends PureComponent {\n\n  static contextType = ThemeContext;\n  declare context: React.ContextType<typeof ThemeContext>;\n  \n  render(): ReactNode {\n    return (\n      <Drawer\n        screenOptions={{\n          drawerType: \"slide\",\n          drawerStyle: {\n            width: 250,\n            backgroundColor: this.context.colors.primary\n          },\n          drawerInactiveTintColor: 'white',\n          drawerActiveTintColor: 'white',\n          drawerActiveBackgroundColor: '#ffffff30',\n          overlayColor: 'transparent',\n          headerTitleStyle: {\n            fontFamily: 'fontRegular',\n          },\n        }}\n        initialRouteName={'Home'}\n        drawerContent={DrawerContent}>\n        <Drawer.Screen\n          name=\"Home\"\n          options={{\n            title: \"Home\",\n            drawerIcon: (props) => <Icon name=\"star\" size={props.size} color={props.color}/> \n          }}\n        />\n        <Drawer.Screen\n          name=\"Modal\"\n          options={{\n            title: \"Modal\",\n            drawerIcon: (props) => <Icon name=\"modal\" size={props.size} color={props.color}/> \n          }}\n        />\n        <Drawer.Screen\n          name={'Chat'}\n          options={{\n            title: \"Char\",\n            drawerIcon: (props) => <Icon name=\"popup\" size={props.size} color={props.color}/> \n          }}\n        />\n      </Drawer>\n    );\n  }\n}\n"})})}),(0,r.jsx)(s.A,{value:"ModalScreen",label:"ModalScreen",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="/app/Modal.jsx"',children:"import React from \"react\";\nimport { View, Text, StyleSheet} from \"react-native\";\nimport {\n  DrawerActions,\n  useNavigation,\n} from '@react-navigation/native';\n// highlight-next-line\nimport { withFancyDrawer } from \"@flexnative/navigation\";\nimport Button from \"@flexnative/buttons\";\n\n\nfunction ModalScreen(props: any) {\n  const navigation = useNavigation();\n  \n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Modal Screen</Text>\n      <Button text='Open Drawer' iconLeft='menu' color='primary' onPress={() => navigation.dispatch(DrawerActions.openDrawer())} />\n      <Button text='Go Back' iconLeft='chevron-left' color='secondary' onPress={() => navigation.goBack()} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    rowGap: 20,\n    backgroundColor: '#16a085',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: 22,\n    color: '#fff',\n    fontFamily: 'Bold'\n  }\n});\n\n// highlight-next-line\nexport default withFancyDrawer(ModalScreen);\n"})})}),(0,r.jsx)(s.A,{value:"ChatScreen",label:"ChatScreen",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="/app/Chat.jsx"',children:"import React from 'react';\nimport { View, Text, Image, ScrollView, StyleSheet } from 'react-native';\nimport {\n  DrawerActions,\n  useNavigation,\n} from '@react-navigation/native';\nimport { withFancyDrawer } from '@flexnative/navigation';\n// highlight-next-line\nimport Button from '@flexnative/buttons';\nimport { useThemeContext } from '@flexnative/theme-context';\n\n\nfunction ChatScreen() {\n  const navigation = useNavigation();\n  const theme = useThemeContext();\n  \n  return (\n    <ScrollView style={styles.container}>\n      <View style={[styles.header, { backgroundColor: theme.colors.secondary }]}>\n        <Button size='large' iconLeft='menu' radius='full' color='secondary' type='text' onPress={() => navigation.dispatch(DrawerActions.openDrawer())} /> <Text style={[styles.headerText]}>Chats</Text>\n      </View>\n      \n      {chatItems.map((item, index) => (\n        <View key={index} style={styles.chatItem}>\n          <Image source={item.avatar} style={styles.avatar} />\n          <View style={styles.chatText}>\n            <Text style={styles.chatName}>{item.name}</Text>\n            <Text style={styles.chatMessage}>{item.message}</Text>\n            <Text style={styles.chatDate}>{item.date}</Text>\n          </View>\n        </View>\n      ))}\n    </ScrollView>\n\n  );\n}\n\n// highlight-next-line\nexport default withFancyDrawer(ChatScreen);\n\nconst chatItems = [\n  {\n    name: 'Tetra',\n    message: '~ Blerim Hasa: Po do futem un tani',\n    date: '03/12/2024',\n    avatar: require('../../../assets/icons/avatar-1.jpg'),\n  },\n  {\n    name: 'Eli',\n    message: 'Tani e fika',\n    date: '02/12/2024',\n    avatar: require('../../../assets/icons/avatar-2.jpg'),\n  },\n  {\n    name: 'Lorenci',\n    message: 'Reacted \ud83d\udc4d to \"Shum\xeb faleminderit\"',\n    date: '02/12/2024',\n    avatar: require('../../../assets/icons/avatar-3.jpg'),\n  },\n  // Add more chat items as needed\n];\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  header: {\n    padding: 7,\n    columnGap: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f8f8f8',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  headerText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  chatItem: {\n    flexDirection: 'row',\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 15,\n  },\n  chatText: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  chatName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  chatMessage: {\n    color: '#666',\n  },\n  chatDate: {\n    color: '#aaa',\n    fontSize: 12,\n  },\n});\n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},7227:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var o=t(74848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,i),hidden:t,children:n})}},49489:(e,n,t)=>{t.d(n,{A:()=>C});var a=t(96540),r=t(34164),o=t(24245),i=t(56347),s=t(36494),l=t(62814),c=t(45167),u=t(69900);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function h(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=p(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[c,d]=f({queryString:t,groupId:r}),[h,v]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,u.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),g=(()=>{const e=c??h;return m({value:e,tabValues:o})?e:null})();(0,s.A)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),v(e)}),[d,v,o]),tabValues:o}}var v=t(11062);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function w(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),r=s[t].value;r!==a&&(c(n),i(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:d,onClick:u,...o,className:(0,r.A)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:o}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function b(e){const n=h(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,x.jsx)(w,{...n,...e}),(0,x.jsx)(y,{...n,...e})]})}function C(e){const n=(0,v.A)();return(0,x.jsx)(b,{...e,children:d(e.children)},String(n))}},35918:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/FancyDrawer-14b3a3b99a4d5a895fb87d3ad58aff57.gif"},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var a=t(96540);const r={},o=a.createContext(r);function i(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);