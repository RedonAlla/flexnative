"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[7368],{19153:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"authentication/context","title":"AuthContext","description":"AuthContext, set up a React Context","source":"@site/docs/authentication/context.mdx","sourceDirName":"authentication","slug":"/authentication/context","permalink":"/flexnative/docs/authentication/context","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/authentication/context.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{"inline":false,"label":"Authentication","permalink":"/flexnative/docs/tags/authentication","description":"A package to implement almost full authentication and protect routes with Expo Router. `@flexnative/authentication` handles user authentication and protecting routes using Expo Router. The package includes React context, custom hooks, type definitions, and utilizes `expo-secure-store` for secure token storage. This integration enhances the security and manageability of authentication processes across the application.\\n"}],"version":"current","lastUpdatedAt":1739664000000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"AuthContext","last_update":{"date":"2025-02-16T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework","authentication"]},"sidebar":"componentsSidebar","previous":{"title":"Authentication","permalink":"/flexnative/docs/authentication/"},"next":{"title":"useAuthState","permalink":"/flexnative/docs/authentication/hooks"}}');var s=n(74848),r=n(28453);const o={sidebar_position:1,title:"AuthContext",last_update:{date:new Date("2025-02-16T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","authentication"]},a=void 0,d={},c=[{value:"API",id:"api",level:2},{value:"Component",id:"component",level:2},{value:"AuthContextProps",id:"authcontextprops",level:2},{value:"AuthStateProps",id:"authstateprops",level:3}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"AuthContext"})}),", set up a ",(0,s.jsx)(t.a,{href:"https://react.dev/reference/react/createContext",children:"React Context"}),"\nprovider that expose an authentication session to the entire app.\nYou can implement your custom authentication session provider."]}),"\n",(0,s.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:'import { AuthContext } from "@flexnative/authentication";\n'})}),"\n",(0,s.jsx)(t.h2,{id:"component",children:"Component"}),"\n",(0,s.jsx)(t.p,{children:"A React component that represents a group of avatar items."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"AuthContext"}),"\nType: ",(0,s.jsx)(t.code,{children:"React.Context<AuthContextProps<any, any>>"})]}),"\n",(0,s.jsx)(t.h2,{id:"authcontextprops",children:"AuthContextProps"}),"\n",(0,s.jsx)(t.p,{children:"Type aliases that outline the structure and expected properties for an authentication context in a React application.\nThis is a generic type alias used to define the properties expected in an authentication context."}),"\n",(0,s.jsxs)(t.p,{children:["It accepts a generic type parameter ",(0,s.jsx)(t.code,{children:"TLoginRequest"}),",\nwhich allows the ",(0,s.jsx)(t.code,{children:"onLogin"})," method to be defined with a specific login request type."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Default Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"state"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#authstateprops",children:(0,s.jsx)(t.code,{children:"AuthStateProps"})})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"true"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)("code",{children:JSON.stringify({authenticated:!1})})}),(0,s.jsx)(t.td,{children:"Define the properties expected used to store authentication-related state properties."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"onRegister"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"(registerForm: TRegisterForm) => Promise<void>"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"false"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsxs)(t.td,{children:["An optional function that handles user registration.",(0,s.jsx)("br",{})," It takes a ",(0,s.jsx)(t.code,{children:"registerForm"})," parameter of type ",(0,s.jsx)(t.code,{children:"TRegisterForm"})," and returns a ",(0,s.jsx)(t.code,{children:"Promise<void>"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"onLogout"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"() => Promise<void>"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"false"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsxs)(t.td,{children:["An optional function for handling user logout, returning a ",(0,s.jsx)(t.code,{children:"Promise<void>"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"onLogin"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"(loginForm: TLoginRequest) => Promise<void>"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"true"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsxs)(t.td,{children:["A required function that handles user login. ",(0,s.jsx)("br",{})," It takes a ",(0,s.jsx)(t.code,{children:"loginForm"})," parameter of type ",(0,s.jsx)(t.code,{children:"TLoginRequest"})," (specified by the consumer of this type), and it returns a ",(0,s.jsx)(t.code,{children:"Promise<void>"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"onAuthentication"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"() => Promise<void>"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"true"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsxs)(t.td,{children:["A required function that triggers authentication logic, returning a ",(0,s.jsx)(t.code,{children:"Promise<void>"}),"."]})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"These type definitions help ensure that the components interacting with authentication logic within the application have well-defined interfaces, improving type safety and readability across the codebase."}),"\n",(0,s.jsx)(t.h3,{id:"authstateprops",children:"AuthStateProps"}),"\n",(0,s.jsx)(t.p,{children:"Defines the structure of the state object to store authentication-related state properties."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Default Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"session"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"false"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{children:"An optional string that may store session information or identifiers."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"authenticated"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"boolean"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"true"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{children:"A boolean indicating whether the user is currently authenticated."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(96540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);