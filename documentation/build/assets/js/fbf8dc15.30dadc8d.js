(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[9992],{34225:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>K,contentTitle:()=>Z,default:()=>ee,frontMatter:()=>J,metadata:()=>l,toc:()=>X});const l=JSON.parse('{"id":"components/layout/Grid","title":"Grid","description":"Block component it is a wrapper over the React-Native View component,","source":"@site/docs/components/layout/Grid.mdx","sourceDirName":"components/layout","slug":"/components/layout/Grid","permalink":"/flexnative/docs/components/layout/Grid","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/components/layout/Grid.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{"inline":false,"label":"Component","permalink":"/flexnative/docs/tags/component","description":"Create user interfaces from components."},{"inline":false,"label":"Layout","permalink":"/flexnative/docs/tags/layout","description":"Useful components for creating responsive and consistent layouts, the `FlexNative Layout` component provides a powerful grid system that allows you to create complex layouts with ease."}],"version":"current","lastUpdatedAt":1736035200000,"frontMatter":{"last_update":{"date":"2025-01-05T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework","component","layout"]},"sidebar":"componentsSidebar","previous":{"title":"Layout","permalink":"/flexnative/docs/components/layout/"},"next":{"title":"Messages","permalink":"/flexnative/docs/components/messages/"}}');var r=n(74848),o=n(28453),s=n(45424),c=n(96540),d=n(71582),i=n(49585);const a=class extends c.PureComponent{render(){return(0,r.jsxs)("div",{className:"example-block",style:{flexDirection:"row"},children:[(0,r.jsx)(i.e,{backgroundColor:"#16a085",flex:.5,children:(0,r.jsx)(d.EY,{style:x.text,children:"flex: 0.5"})}),(0,r.jsx)(i.e,{backgroundColor:"#FFC300",flex:2,children:(0,r.jsx)(d.EY,{style:x.text,children:"flex: 2"})}),(0,r.jsx)(i.e,{backgroundColor:"#FF5733",flex:1.5,children:(0,r.jsx)(d.EY,{style:x.text,children:"flex: 1.5"})})]})}},x=d.vv.create({text:{padding:10,color:"#fff"}}),h="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-06 20:02:17\n * @ Description: Examples of `Block` component with different `flex\xb4 values.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block' style={{ flexDirection: 'row' }}>\n        <Block backgroundColor='#16a085' flex={0.5}>\n          <Text style={styles.text}>flex: 0.5</Text>\n        </Block>\n        <Block backgroundColor='#FFC300' flex={2}>\n          <Text style={styles.text}>flex: 2</Text>\n          </Block>\n        <Block backgroundColor='#FF5733' flex={1.5}>\n          <Text style={styles.text}>flex: 1.5</Text>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 10,\n    color: '#fff'\n  }\n});",p=class extends c.PureComponent{render(){return(0,r.jsxs)("div",{className:"example-block",children:[(0,r.jsxs)(i.e,{row:!0,children:[(0,r.jsx)(i.e,{backgroundColor:"#16a085",children:(0,r.jsx)(d.EY,{style:u.text,children:"Block 1. col 1"})}),(0,r.jsx)(i.e,{backgroundColor:"#FFC300",children:(0,r.jsx)(d.EY,{style:u.text,children:"Block 1. col 2"})})]}),(0,r.jsxs)(i.e,{children:[(0,r.jsx)(i.e,{backgroundColor:"#FF5733",children:(0,r.jsx)(d.EY,{style:u.text,children:"Block 2. row 1"})}),(0,r.jsx)(i.e,{backgroundColor:"#C70039",children:(0,r.jsx)(d.EY,{style:u.text,children:"Block 2. row 2"})})]})]})}},u=d.vv.create({text:{padding:10,color:"#fff"}}),y="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 20:15:19\n * @ Description: Examples of `Block` component with different `row values.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Block row>\n          <Block backgroundColor='#16a085'>\n            <Text style={styles.text}>Block 1. col 1</Text>\n          </Block>\n          \n          <Block backgroundColor='#FFC300'>\n            <Text style={styles.text}>Block 1. col 2</Text>\n          </Block>\n        </Block>\n\n        <Block>\n          <Block backgroundColor='#FF5733'>\n            <Text style={styles.text}>Block 2. row 1</Text>\n          </Block>\n\n          <Block backgroundColor='#C70039'>\n            <Text style={styles.text}>Block 2. row 2</Text>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 10,\n    color: '#fff'\n  }\n});",f=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",children:(0,r.jsxs)(i.e,{children:[(0,r.jsx)(i.e,{justifyContent:"flex-start",backgroundColor:"#16a085",style:j.block,children:(0,r.jsx)(d.EY,{style:j.text,children:"flex-start"})}),(0,r.jsx)(i.e,{justifyContent:"flex-end",backgroundColor:"#FFC300",style:j.block,children:(0,r.jsx)(d.EY,{style:j.text,children:"flex-end"})}),(0,r.jsx)(i.e,{justifyContent:"center",backgroundColor:"#FF5733",style:j.block,children:(0,r.jsx)(d.EY,{style:j.text,children:"center"})}),(0,r.jsxs)(i.e,{justifyContent:"space-around",backgroundColor:"#C70039",style:j.block,children:[(0,r.jsx)(d.EY,{style:j.text,children:"space-around"}),(0,r.jsx)(d.EY,{style:j.text,children:"space-around"})]}),(0,r.jsxs)(i.e,{justifyContent:"space-between",backgroundColor:"#9b59b6",style:j.block,children:[(0,r.jsx)(d.EY,{style:j.text,children:"space-between"}),(0,r.jsx)(d.EY,{style:j.text,children:"space-between"})]}),(0,r.jsxs)(i.e,{justifyContent:"space-evenly",backgroundColor:"#2980b9",style:j.block,children:[(0,r.jsx)(d.EY,{style:j.text,children:"space-evenly"}),(0,r.jsx)(d.EY,{style:j.text,children:"space-evenly"})]})]})})}},j=d.vv.create({text:{color:"#fff"},block:{height:100}}),m="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 21:12:29\n * @ Description: Examples of `Block` component with justifyContent.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Block>\n          <Block justifyContent=\"flex-start\" backgroundColor='#16a085' style={styles.block}>\n            <Text style={styles.text}>flex-start</Text>\n          </Block>\n          \n          <Block justifyContent='flex-end' backgroundColor='#FFC300' style={styles.block}>\n            <Text style={styles.text}>flex-end</Text>\n          </Block>\n\n          <Block justifyContent='center' backgroundColor='#FF5733' style={styles.block}>\n            <Text style={styles.text}>center</Text>\n          </Block>\n\n          <Block justifyContent='space-around' backgroundColor='#C70039' style={styles.block}>\n            <Text style={styles.text}>space-around</Text>\n            <Text style={styles.text}>space-around</Text>\n          </Block>\n\n          <Block justifyContent='space-between' backgroundColor='#9b59b6' style={styles.block}>\n            <Text style={styles.text}>space-between</Text>\n            <Text style={styles.text}>space-between</Text>\n          </Block>\n\n          <Block justifyContent='space-evenly' backgroundColor='#2980b9' style={styles.block}>\n            <Text style={styles.text}>space-evenly</Text>\n            <Text style={styles.text}>space-evenly</Text>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#fff'\n  },\n  block: {\n    height: 100,\n  }\n});",b=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",children:(0,r.jsxs)(i.e,{children:[(0,r.jsx)(i.e,{alignItems:"center",backgroundColor:"#16a085",style:k.block,children:(0,r.jsx)(d.EY,{style:k.text,children:"center"})}),(0,r.jsx)(i.e,{alignItems:"flex-end",backgroundColor:"#FFC300",style:k.block,children:(0,r.jsx)(d.EY,{style:k.text,children:"flex-end"})}),(0,r.jsx)(i.e,{alignItems:"flex-start",backgroundColor:"#FF5733",style:k.block,children:(0,r.jsx)(d.EY,{style:k.text,children:"flex-start"})}),(0,r.jsx)(i.e,{alignItems:"baseline",backgroundColor:"#2980b9",style:k.block,children:(0,r.jsx)(d.EY,{style:k.text,children:"baseline"})}),(0,r.jsx)(i.e,{alignItems:"stretch",backgroundColor:"#C70039",style:k.block,children:(0,r.jsx)(d.EY,{style:k.text,children:"stretch"})})]})})}},k=d.vv.create({text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"},block:{padding:5,height:100}}),g="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 21:33:18\n * @ Description: Examples of `Block` component with alignItems.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Block>\n          <Block alignItems='center' backgroundColor='#16a085' style={styles.block}>\n            <Text style={styles.text}>center</Text>\n          </Block>\n          \n          <Block alignItems='flex-end' backgroundColor='#FFC300' style={styles.block}>\n            <Text style={styles.text}>flex-end</Text>\n          </Block>\n\n          <Block alignItems='flex-start' backgroundColor='#FF5733' style={styles.block}>\n            <Text style={styles.text}>flex-start</Text>\n          </Block>\n\n          <Block alignItems='baseline' backgroundColor='#2980b9' style={styles.block}>\n            <Text style={styles.text}>baseline</Text>\n          </Block>\n\n          <Block alignItems='stretch' backgroundColor='#C70039' style={styles.block}>\n            <Text style={styles.text}>stretch</Text>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n  block: {\n    padding: 5,\n    height: 100,\n  }\n});",v=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",children:(0,r.jsxs)(i.e,{children:[(0,r.jsx)(i.e,{alignContent:"center",backgroundColor:"#16a085",style:C.block,children:(0,r.jsx)(d.EY,{style:C.text,children:"center"})}),(0,r.jsx)(i.e,{alignContent:"flex-end",backgroundColor:"#FFC300",style:C.block,children:(0,r.jsx)(d.EY,{style:C.text,children:"flex-end"})}),(0,r.jsx)(i.e,{alignContent:"flex-start",backgroundColor:"#FF5733",style:C.block,children:(0,r.jsx)(d.EY,{style:C.text,children:"flex-start"})}),(0,r.jsxs)(i.e,{alignContent:"space-around",backgroundColor:"#2980b9",style:C.block,children:[(0,r.jsx)(d.EY,{style:C.text,children:"space-around"}),(0,r.jsx)(d.EY,{style:C.text,children:"space-around"})]}),(0,r.jsxs)(i.e,{alignContent:"stretch",backgroundColor:"#C70039",style:C.block,children:[(0,r.jsx)(d.EY,{style:C.text,children:"stretch"}),(0,r.jsx)(d.EY,{style:C.text,children:"stretch"})]}),(0,r.jsxs)(i.e,{alignContent:"space-between",backgroundColor:"#9b59b6",style:C.block,children:[(0,r.jsx)(d.EY,{style:C.text,children:"space-between"}),(0,r.jsx)(d.EY,{style:C.text,children:"space-between"})]}),(0,r.jsxs)(i.e,{alignContent:"space-evenly",backgroundColor:"#2980b9",style:C.block,children:[(0,r.jsx)(d.EY,{style:C.text,children:"space-evenly"}),(0,r.jsx)(d.EY,{style:C.text,children:"space-evenly"})]})]})})}},C=d.vv.create({text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"},block:{padding:5,height:100}}),w="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 22:18:59\n * @ Description: Examples of `Block` component with alignContent.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Block>\n          <Block alignContent='center' backgroundColor='#16a085' style={styles.block}>\n            <Text style={styles.text}>center</Text>\n          </Block>\n          \n          <Block alignContent='flex-end' backgroundColor='#FFC300' style={styles.block}>\n            <Text style={styles.text}>flex-end</Text>\n          </Block>\n\n          <Block alignContent='flex-start' backgroundColor='#FF5733' style={styles.block}>\n            <Text style={styles.text}>flex-start</Text>\n          </Block>\n\n          <Block alignContent='space-around' backgroundColor='#2980b9' style={styles.block}>\n            <Text style={styles.text}>space-around</Text>\n            <Text style={styles.text}>space-around</Text>\n          </Block>\n\n          <Block alignContent='stretch' backgroundColor='#C70039' style={styles.block}>\n            <Text style={styles.text}>stretch</Text>\n            <Text style={styles.text}>stretch</Text>\n          </Block>\n\n          <Block alignContent='space-between' backgroundColor='#9b59b6' style={styles.block}>\n            <Text style={styles.text}>space-between</Text>\n            <Text style={styles.text}>space-between</Text>\n          </Block>\n\n          <Block alignContent='space-evenly' backgroundColor='#2980b9' style={styles.block}>\n            <Text style={styles.text}>space-evenly</Text>\n            <Text style={styles.text}>space-evenly</Text>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n  block: {\n    padding: 5,\n    height: 100,\n  }\n});",T=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",children:(0,r.jsxs)(i.e,{children:[(0,r.jsx)(i.e,{backgroundColor:"#16a085",width:150,children:(0,r.jsx)(d.EY,{style:B.text,children:"width: 150"})}),(0,r.jsx)(i.e,{backgroundColor:"#FFC300",width:200,children:(0,r.jsx)(d.EY,{style:B.text,children:"width: 200"})}),(0,r.jsx)(i.e,{backgroundColor:"#FF5733",width:"50%",children:(0,r.jsx)(d.EY,{style:B.text,children:"width: '50%'"})})]})})}},B=d.vv.create({text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"}}),E="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 22:33:28\n * @ Description: Examples of `Block` component with different width.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Block>\n          <Block backgroundColor='#16a085' width={150}>\n            <Text style={styles.text}>width: 150</Text>\n          </Block>\n          <Block backgroundColor='#FFC300' width={200}>\n            <Text style={styles.text}>width: 200</Text>\n          </Block>\n          <Block backgroundColor='#FF5733' width={'50%'}>\n            <Text style={styles.text}>width: '50%'</Text>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n});",R=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",children:(0,r.jsxs)(i.e,{children:[(0,r.jsx)(i.e,{backgroundColor:"#16a085",height:30,children:(0,r.jsx)(d.EY,{style:A.text,children:"height: 30"})}),(0,r.jsx)(i.e,{backgroundColor:"#FFC300",height:50,children:(0,r.jsx)(d.EY,{style:A.text,children:"height: 50"})}),(0,r.jsx)(i.e,{backgroundColor:"#FF5733",height:"50%",children:(0,r.jsx)(d.EY,{style:A.text,children:"height: '50%'"})})]})})}},A=d.vv.create({text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"}}),F="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 22:38:23\n * @ Description: Examples of `Block` component with different width.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Block>\n          <Block backgroundColor='#16a085' height={30}>\n            <Text style={styles.text}>height: 30</Text>\n          </Block>\n          <Block backgroundColor='#FFC300' height={50}>\n            <Text style={styles.text}>height: 50</Text>\n          </Block>\n          <Block backgroundColor='#FF5733' height={'50%'}>\n            <Text style={styles.text}>height: '50%'</Text>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n});",Y=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",children:(0,r.jsxs)(i.e,{children:[(0,r.jsxs)(i.e,{backgroundColor:"#16a085",row:!0,wrap:"nowrap",style:S.block,children:[(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"nowrap"})]}),(0,r.jsxs)(i.e,{backgroundColor:"#FFC300",row:!0,wrap:"wrap",style:S.block,children:[(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap"})]}),(0,r.jsxs)(i.e,{backgroundColor:"#FF5733",row:!0,wrap:"wrap-reverse",style:S.block,children:[(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 1"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 2"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 3"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 4"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 5"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 6"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 7"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 8"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 9"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 10"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 11"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 12"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 13"}),(0,r.jsx)(d.EY,{style:S.text,children:"wrap-reverse: 14"})]})]})})}},S=d.vv.create({block:{padding:12},text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"}}),N="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-06 20:03:03\n * @ Description: Examples of `Block` component with different width.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Block>\n          <Block backgroundColor='#16a085' row wrap='nowrap' style={styles.block}>\n            <Text style={styles.text}>nowrap</Text>\n            <Text style={styles.text}>nowrap</Text>\n            <Text style={styles.text}>nowrap</Text>\n            <Text style={styles.text}>nowrap</Text>\n            <Text style={styles.text}>nowrap</Text>\n            <Text style={styles.text}>nowrap</Text>\n            <Text style={styles.text}>nowrap</Text>\n            <Text style={styles.text}>nowrap</Text>\n            <Text style={styles.text}>nowrap</Text>\n            <Text style={styles.text}>nowrap</Text>\n            </Block>\n          <Block backgroundColor='#FFC300' row wrap='wrap' style={styles.block}>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n            <Text style={styles.text}>wrap</Text>\n          </Block>\n          <Block backgroundColor='#FF5733' row wrap='wrap-reverse' style={styles.block}>\n            <Text style={styles.text}>wrap-reverse: 1</Text>\n            <Text style={styles.text}>wrap-reverse: 2</Text>\n            <Text style={styles.text}>wrap-reverse: 3</Text>\n            <Text style={styles.text}>wrap-reverse: 4</Text>\n            <Text style={styles.text}>wrap-reverse: 5</Text>\n            <Text style={styles.text}>wrap-reverse: 6</Text>\n            <Text style={styles.text}>wrap-reverse: 7</Text>\n            <Text style={styles.text}>wrap-reverse: 8</Text>\n            <Text style={styles.text}>wrap-reverse: 9</Text>\n            <Text style={styles.text}>wrap-reverse: 10</Text>\n            <Text style={styles.text}>wrap-reverse: 11</Text>\n            <Text style={styles.text}>wrap-reverse: 12</Text>\n            <Text style={styles.text}>wrap-reverse: 13</Text>\n            <Text style={styles.text}>wrap-reverse: 14</Text>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  block: {\n    padding: 12\n  },\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n});",P=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",style:{height:200},children:(0,r.jsxs)(i.e,{gap:12,children:[(0,r.jsxs)(i.e,{row:!0,gap:12,children:[(0,r.jsx)(i.e,{backgroundColor:"#FFC300",children:(0,r.jsx)(d.EY,{style:D.text,children:"Row 1 : Clo 1. flex: 1"})}),(0,r.jsx)(i.e,{backgroundColor:"#FF5733",children:(0,r.jsx)(d.EY,{style:D.text,children:"Row 1 : Clo 2. flex: 2"})})]}),(0,r.jsxs)(i.e,{gap:12,children:[(0,r.jsx)(i.e,{backgroundColor:"#C70039",children:(0,r.jsx)(d.EY,{style:D.text,children:"Row 2 : Clo 1. flex: 1"})}),(0,r.jsx)(i.e,{backgroundColor:"#9b59b6",children:(0,r.jsx)(d.EY,{style:D.text,children:"Row 2 : Clo 2. flex: 2"})})]})]})})}},D=d.vv.create({text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"}}),M="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-06 20:07:29\n * @ Description: Examples of `Block` component with different width.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\nconst DEMO_COMPONENT_GAP = 12;\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block' style={{ height: 200 }}>\n        <Block gap={DEMO_COMPONENT_GAP}>\n          <Block row gap={DEMO_COMPONENT_GAP}>\n            <Block backgroundColor='#FFC300'>\n              <Text style={styles.text}>Row 1 : Clo 1. flex: 1</Text>\n            </Block>\n            <Block backgroundColor='#FF5733'>\n              <Text style={styles.text}>Row 1 : Clo 2. flex: 2</Text>\n            </Block>\n          </Block>\n\n          <Block gap={DEMO_COMPONENT_GAP}>\n            <Block backgroundColor='#C70039'>\n              <Text style={styles.text}>Row 2 : Clo 1. flex: 1</Text>\n            </Block>\n            <Block backgroundColor='#9b59b6'>\n              <Text style={styles.text}>Row 2 : Clo 2. flex: 2</Text>\n            </Block>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n});",O=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",style:{height:200},children:(0,r.jsxs)(i.e,{rowGap:12,children:[(0,r.jsxs)(i.e,{row:!0,rowGap:12,children:[(0,r.jsx)(i.e,{backgroundColor:"#FFC300",children:(0,r.jsx)(d.EY,{style:I.text,children:"Row 1 : Clo 1. flex: 1"})}),(0,r.jsx)(i.e,{backgroundColor:"#FF5733",children:(0,r.jsx)(d.EY,{style:I.text,children:"Row 1 : Clo 2. flex: 2"})})]}),(0,r.jsxs)(i.e,{rowGap:12,children:[(0,r.jsx)(i.e,{backgroundColor:"#C70039",children:(0,r.jsx)(d.EY,{style:I.text,children:"Row 2 : Clo 1. flex: 1"})}),(0,r.jsx)(i.e,{backgroundColor:"#9b59b6",children:(0,r.jsx)(d.EY,{style:I.text,children:"Row 2 : Clo 2. flex: 2"})})]})]})})}},I=d.vv.create({text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"}}),G="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-06 20:09:56\n * @ Description: Examples of `Block` component with rowGap.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\nconst DEMO_COMPONENT_GAP = 12;\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block' style={{ height: 200 }}>\n        <Block rowGap={DEMO_COMPONENT_GAP}>\n          <Block row rowGap={DEMO_COMPONENT_GAP}>\n            <Block backgroundColor='#FFC300'>\n              <Text style={styles.text}>Row 1 : Clo 1. flex: 1</Text>\n            </Block>\n            <Block backgroundColor='#FF5733'>\n              <Text style={styles.text}>Row 1 : Clo 2. flex: 2</Text>\n            </Block>\n          </Block>\n\n          <Block rowGap={DEMO_COMPONENT_GAP}>\n            <Block backgroundColor='#C70039'>\n              <Text style={styles.text}>Row 2 : Clo 1. flex: 1</Text>\n            </Block>\n            <Block backgroundColor='#9b59b6'>\n              <Text style={styles.text}>Row 2 : Clo 2. flex: 2</Text>\n            </Block>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n});",_=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",style:{height:200},children:(0,r.jsxs)(i.e,{columnGap:12,children:[(0,r.jsxs)(i.e,{row:!0,columnGap:12,children:[(0,r.jsx)(i.e,{backgroundColor:"#FFC300",children:(0,r.jsx)(d.EY,{style:V.text,children:"Row 1 : Clo 1. flex: 1"})}),(0,r.jsx)(i.e,{backgroundColor:"#FF5733",children:(0,r.jsx)(d.EY,{style:V.text,children:"Row 1 : Clo 2. flex: 2"})})]}),(0,r.jsxs)(i.e,{columnGap:12,children:[(0,r.jsx)(i.e,{backgroundColor:"#C70039",children:(0,r.jsx)(d.EY,{style:V.text,children:"Row 2 : Clo 1. flex: 1"})}),(0,r.jsx)(i.e,{backgroundColor:"#9b59b6",children:(0,r.jsx)(d.EY,{style:V.text,children:"Row 2 : Clo 2. flex: 2"})})]})]})})}},V=d.vv.create({text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"}}),W="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-06 20:16:20\n * @ Description: Examples of `Block` component with columnGap.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\nconst DEMO_COMPONENT_GAP = 12;\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block' style={{ height: 200 }}>\n        <Block columnGap={DEMO_COMPONENT_GAP}>\n          <Block row columnGap={DEMO_COMPONENT_GAP}>\n            <Block backgroundColor='#FFC300'>\n              <Text style={styles.text}>Row 1 : Clo 1. flex: 1</Text>\n            </Block>\n            <Block backgroundColor='#FF5733'>\n              <Text style={styles.text}>Row 1 : Clo 2. flex: 2</Text>\n            </Block>\n          </Block>\n\n          <Block columnGap={DEMO_COMPONENT_GAP}>\n            <Block backgroundColor='#C70039'>\n              <Text style={styles.text}>Row 2 : Clo 1. flex: 1</Text>\n            </Block>\n            <Block backgroundColor='#9b59b6'>\n              <Text style={styles.text}>Row 2 : Clo 2. flex: 2</Text>\n            </Block>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n});",L=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",children:(0,r.jsxs)(i.e,{children:[(0,r.jsx)(i.e,{backgroundColor:"#16a085",padding:5,children:(0,r.jsx)(d.EY,{style:q.text,children:"padding: 5"})}),(0,r.jsx)(i.e,{backgroundColor:"#FFC300",padding:20,children:(0,r.jsx)(d.EY,{style:q.text,children:"padding: 20"})}),(0,r.jsx)(i.e,{backgroundColor:"#FF5733",padding:45,children:(0,r.jsx)(d.EY,{style:q.text,children:"padding: 45"})})]})})}},q=d.vv.create({text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"}}),z="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-06 20:22:29\n * @ Description: Examples of `Block` component with padding.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Block>\n          <Block backgroundColor='#16a085' padding={5}>\n            <Text style={styles.text}>padding: 5</Text>\n          </Block>\n          <Block backgroundColor='#FFC300' padding={20}>\n            <Text style={styles.text}>padding: 20</Text>\n          </Block>\n          <Block backgroundColor='#FF5733' padding={45}>\n            <Text style={styles.text}>padding: 45</Text>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n});",U=class extends c.PureComponent{render(){return(0,r.jsx)("div",{className:"example-block",children:(0,r.jsxs)(i.e,{children:[(0,r.jsxs)(i.e,{row:!0,children:[(0,r.jsx)(i.e,{backgroundColor:"crimson",padding:12,children:(0,r.jsx)(d.EY,{style:$.text,children:"crimson"})}),(0,r.jsx)(i.e,{backgroundColor:"#229954",padding:12,children:(0,r.jsx)(d.EY,{style:$.text,children:"hex: #229954"})})]}),(0,r.jsxs)(i.e,{children:[(0,r.jsx)(i.e,{backgroundColor:"rgb(255, 195, 0)",padding:12,children:(0,r.jsx)(d.EY,{style:$.text,children:"RGB: 255, 195, 0"})}),(0,r.jsx)(i.e,{backgroundColor:"hsl(283, 39%, 53%)",padding:12,children:(0,r.jsx)(d.EY,{style:$.text,children:"HSL: 283, 39%, 53%"})})]})]})})}},$=d.vv.create({text:{padding:5,borderRadius:3,borderWidth:1,borderColor:"#fff",color:"#fff"}}),H="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 19:31:03\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-06 21:04:12\n * @ Description: Examples of `Block` component with backgroundColor.\n */\n\nimport React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nimport { Block } from \"@flexnative/layout\";\n\nconst DEMO_PADDING = 12;\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Block>\n          <Block row>\n            <Block backgroundColor='crimson' padding={DEMO_PADDING}>\n              <Text style={styles.text}>crimson</Text>\n            </Block>\n            \n            <Block backgroundColor='#229954' padding={DEMO_PADDING}>\n              <Text style={styles.text}>hex: #229954</Text>\n            </Block>\n          </Block>\n\n          <Block>\n            <Block backgroundColor='rgb(255, 195, 0)' padding={DEMO_PADDING}>\n              <Text style={styles.text}>RGB: 255, 195, 0</Text>\n            </Block>\n\n            <Block backgroundColor='hsl(283, 39%, 53%)' padding={DEMO_PADDING}>\n              <Text style={styles.text}>HSL: 283, 39%, 53%</Text>\n            </Block>\n          </Block>\n        </Block>\n      </div>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n});",J={last_update:{date:new Date("2025-01-05T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component","layout"]},Z=void 0,K={},X=[{value:"API",id:"api",level:2},{value:"Component",id:"component",level:2},{value:"Properties",id:"properties",level:2},{value:"Use case Examples",id:"use-case-examples",level:2},{value:"Flex",id:"flex",level:3},{value:"Row",id:"row",level:3},{value:"Justify Content",id:"justify-content",level:3},{value:"Align Items",id:"align-items",level:3},{value:"Align Content",id:"align-content",level:3},{value:"Width",id:"width",level:3},{value:"Height",id:"height",level:3},{value:"Wrap",id:"wrap",level:3},{value:"Gap",id:"gap",level:3},{value:"Row Gap",id:"row-gap",level:3},{value:"Column Gap",id:"column-gap",level:3},{value:"Padding",id:"padding",level:3},{value:"Background Color",id:"background-color",level:3},{value:"Playground",id:"playground",level:2}];function Q(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Block"})," component it is a wrapper over the ",(0,r.jsx)(t.strong,{children:"React-Native"})," ",(0,r.jsx)(t.code,{children:"View"})," component,\nusing the Flexbox algorithm which is designed to provide a consistent layout on different screen sizes.\nWe will enhance this component to support the grid and layout styling using properties that will speed up our development time."]}),"\n",(0,r.jsxs)(t.p,{children:["You will normally use a combination of ",(0,r.jsx)(t.a,{href:"#properties",children:(0,r.jsx)(t.code,{children:"BlockProps"})})," to achieve the right layout."]}),"\n",(0,r.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import { Block } from '@flexnative/layout';\n"})}),"\n",(0,r.jsx)(t.h2,{id:"component",children:"Component"}),"\n",(0,r.jsxs)(t.p,{children:["This component extends ",(0,r.jsx)(t.a,{href:"https://react.dev/reference/react/PureComponent",children:(0,r.jsx)(t.code,{children:"React.PureComponent"})}),",\nwhich optimizes the component by preventing unnecessary re-renders when the props haven't changed."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Block"}),"\nType: ",(0,r.jsxs)("code",{children:[(0,r.jsx)(t.a,{href:"https://react.dev/reference/react/PureComponent",children:"React.PureComponent"}),"<",(0,r.jsx)(t.a,{href:"#properties",children:"BlockProps"}),">"]})]}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"BlockProps"})," extends ",(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/view#props",children:(0,r.jsx)(t.code,{children:"ViewProps"})})," from ",(0,r.jsx)(t.strong,{children:"React Native"}),",\nso any property that is available in the ",(0,r.jsx)(t.code,{children:"View"})," component is also available in the ",(0,r.jsx)(t.code,{children:"Block"})," component."]})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Default Value"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"flex"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#flex",children:(0,r.jsx)(t.code,{children:'ViewStyle["flex"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"1"}),(0,r.jsx)(t.td,{children:"Optional property to set flex style for block component."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"row"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"false"}),(0,r.jsxs)(t.td,{children:["Optional boolean property to determine if the layout should be in a row format. If set to ",(0,r.jsx)(t.code,{children:"true"}),", it likely indicates that the component's children should be displayed horizontally."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"justifyContent"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#justifycontent",children:(0,r.jsx)(t.code,{children:'ViewStyle["justifyContent"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsx)(t.td,{children:"Alternative optional property name for justify content along the main axis."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"justify"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#justifycontent",children:(0,r.jsx)(t.code,{children:'ViewStyle["justifyContent"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsxs)(t.td,{children:["A short version for ",(0,r.jsx)(t.code,{children:"justifyContent"})," style property. Same as ",(0,r.jsx)(t.code,{children:"justifyContent"})," property."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"alignItems"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#alignitems",children:(0,r.jsx)(t.code,{children:'ViewStyle["alignItems"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsx)(t.td,{children:"Optional property to set alignment of items along the cross-axis."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"align"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#alignitems",children:(0,r.jsx)(t.code,{children:'ViewStyle["alignItems"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsxs)(t.td,{children:["A short version for ",(0,r.jsx)(t.code,{children:"alignItems"})," style property. Same as ",(0,r.jsx)(t.code,{children:"alignItems"})," property."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"alignContent"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#aligncontent",children:(0,r.jsx)(t.code,{children:'ViewStyle["alignContent"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsxs)(t.td,{children:["Defines the distribution of lines along the cross-axis. This only has effect when items are wrapped to multiple lines using ",(0,r.jsx)(t.code,{children:"flexWrap"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"content"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#aligncontent",children:(0,r.jsx)(t.code,{children:'ViewStyle["alignContent"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsxs)(t.td,{children:["A short version for ",(0,r.jsx)(t.code,{children:"alignContent"})," style property. Same as ",(0,r.jsx)(t.code,{children:"alignContent"})," property."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"width"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#width",children:(0,r.jsx)(t.code,{children:'ViewStyle["width"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsxs)(t.td,{children:["Optional property to set the width of the ",(0,r.jsx)(t.code,{children:"Block"})," component."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"height"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#height",children:(0,r.jsx)(t.code,{children:'ViewStyle["height"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsxs)(t.td,{children:["Optional property to set the height of the ",(0,r.jsx)(t.code,{children:"Block"})," component."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"wrap"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#flexwrap",children:(0,r.jsx)(t.code,{children:'ViewStyle["flexWrap"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"false"}),(0,r.jsx)(t.td,{children:"It controls whether children can wrap around after they hit the end of a flex container."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"gap"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#gap",children:(0,r.jsx)(t.code,{children:'ViewStyle["gap"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsx)(t.td,{children:"Optional property to specify the gap between rows or column in grid layout."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"rowGap"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#rowgap",children:(0,r.jsx)(t.code,{children:'ViewStyle["rowGap"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsx)(t.td,{children:"Optional property to specify the gap between rows in grid layout."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"columnGap"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#columngap",children:(0,r.jsx)(t.code,{children:'ViewStyle["columnGap"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsx)(t.td,{children:"Optional property to specify the gap between columns in grid layout."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"padding"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#padding",children:(0,r.jsx)(t.code,{children:'ViewStyle["padding"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsxs)(t.td,{children:["Optional property to set padding for the ",(0,r.jsx)(t.code,{children:"Block"})," component."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"backgroundColor"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props#backgroundcolor",children:(0,r.jsx)(t.code,{children:'ViewStyle["backgroundColor"]'})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsxs)(t.td,{children:["Optional property to set the background color of the ",(0,r.jsx)(t.code,{children:"Block"})," component."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"children"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/react-node",children:(0,r.jsx)(t.code,{children:"ReactNode"})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:"undefined"}),(0,r.jsxs)(t.td,{children:["The children of the ",(0,r.jsx)(t.code,{children:"Block"})," component."]})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"use-case-examples",children:"Use case Examples"}),"\n",(0,r.jsxs)(t.p,{children:["The following example demonstrates the ",(0,r.jsx)(t.code,{children:"Box"})," component in action."]}),"\n",(0,r.jsx)(t.h3,{id:"flex",children:"Flex"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"flex"})," will define how items are going to \u201cfill\u201d over the available space along your main axis.\nSpace will be divided according to each element's flex property."]}),"\n",(0,r.jsx)(s.A,{codeExample:h,children:(0,r.jsx)(a,{})}),"\n",(0,r.jsx)(t.h3,{id:"row",children:"Row"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"row"})," will define the ",(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/layout-props#flexdirection",children:(0,r.jsx)(t.code,{children:"flexDirection"})}),".\nIf ",(0,r.jsx)(t.code,{children:"row"})," is set to ",(0,r.jsx)(t.code,{children:"true"}),", ",(0,r.jsx)(t.code,{children:"flexDirection"})," it is set to ",(0,r.jsx)(t.code,{children:"row"})," and component's children should be displayed horizontally,\notherwise ",(0,r.jsx)(t.code,{children:"flexDirection"})," it is set to ",(0,r.jsx)(t.code,{children:"column"})," and component's children should be displayed vertically."]}),"\n",(0,r.jsx)(s.A,{codeExample:y,children:(0,r.jsx)(p,{})}),"\n",(0,r.jsx)(t.h3,{id:"justify-content",children:"Justify Content"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"justifyContent"})," specifies how to align children within the main axis of their container.\nFor example, you can use this property to center a child horizontally within a container with ",(0,r.jsx)(t.code,{children:"flexDirection"}),"\nset to ",(0,r.jsx)(t.code,{children:"row"})," or vertically within a container with ",(0,r.jsx)(t.code,{children:"flexDirection"})," set to ",(0,r.jsx)(t.code,{children:"column"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Property ",(0,r.jsx)(t.code,{children:"justify"})," it is added as a short version for ",(0,r.jsx)(t.code,{children:"justifyContent"})," style property."]}),"\n",(0,r.jsx)(s.A,{codeExample:m,children:(0,r.jsx)(f,{})}),"\n",(0,r.jsx)(t.h3,{id:"align-items",children:"Align Items"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"alignItems"})," defines how to align children along the cross axis of their container."]}),"\n",(0,r.jsxs)(t.p,{children:["Property ",(0,r.jsx)(t.code,{children:"align"})," it is added as a short version for ",(0,r.jsx)(t.code,{children:"alignItems"})," style property."]}),"\n",(0,r.jsx)(s.A,{codeExample:g,children:(0,r.jsx)(b,{})}),"\n",(0,r.jsx)(t.h3,{id:"align-content",children:"Align Content"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"alignContent"})," defines the distribution of lines along the cross-axis\nand it has effect only when items are wrapped to multiple lines using ",(0,r.jsx)(t.code,{children:"flexWrap"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Property ",(0,r.jsx)(t.code,{children:"content"})," it is added as a short version for ",(0,r.jsx)(t.code,{children:"alignContent"})," style property."]}),"\n",(0,r.jsx)(s.A,{codeExample:w,children:(0,r.jsx)(v,{})}),"\n",(0,r.jsx)(t.h3,{id:"width",children:"Width"}),"\n",(0,r.jsxs)(t.p,{children:["Specify the width of the ",(0,r.jsx)(t.code,{children:"Block"})," component."]}),"\n",(0,r.jsx)(s.A,{codeExample:E,children:(0,r.jsx)(T,{})}),"\n",(0,r.jsx)(t.h3,{id:"height",children:"Height"}),"\n",(0,r.jsxs)(t.p,{children:["Specify the height of the ",(0,r.jsx)(t.code,{children:"Block"})," component."]}),"\n",(0,r.jsx)(s.A,{codeExample:F,children:(0,r.jsx)(R,{})}),"\n",(0,r.jsx)(t.h3,{id:"wrap",children:"Wrap"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"wrap"})," controls whether children can wrap around after they hit the end of a flex container."]}),"\n",(0,r.jsx)(s.A,{codeExample:N,children:(0,r.jsx)(Y,{})}),"\n",(0,r.jsx)(t.h3,{id:"gap",children:"Gap"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"gap"})," defines the size of the gap between the rows and between the columns in flexbox, grid or multi-column layout."]}),"\n",(0,r.jsx)(t.p,{children:"It is a shorthand for the following properties:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"rowGap"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"columnGap"})}),"\n"]}),"\n",(0,r.jsx)(s.A,{codeExample:M,children:(0,r.jsx)(P,{})}),"\n",(0,r.jsx)(t.h3,{id:"row-gap",children:"Row Gap"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"rowGap"})," property specifies the gap between the rows in a flexbox or grid layout."]}),"\n",(0,r.jsx)(s.A,{codeExample:G,children:(0,r.jsx)(O,{})}),"\n",(0,r.jsx)(t.h3,{id:"column-gap",children:"Column Gap"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"columnGap"})," property specifies the gap between the columns in a flexbox or grid layout."]}),"\n",(0,r.jsx)(s.A,{codeExample:W,children:(0,r.jsx)(_,{})}),"\n",(0,r.jsx)(t.h3,{id:"padding",children:"Padding"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"padding"})," property for padding top, bottom, left, right."]}),"\n",(0,r.jsx)(s.A,{codeExample:z,children:(0,r.jsx)(L,{})}),"\n",(0,r.jsx)(t.h3,{id:"background-color",children:"Background Color"}),"\n",(0,r.jsx)(s.A,{codeExample:H,children:(0,r.jsx)(U,{})}),"\n",(0,r.jsx)(t.h2,{id:"playground",children:"Playground"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"const DEMO_PADDING = 15;\n\nconst styles = {\n  text: {\n    padding: 5,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#fff',\n    color: '#fff'\n  },\n};\n\nrender(\n  <Block>\n    <Block row>\n      <Block backgroundColor='crimson' padding={DEMO_PADDING}>\n        <p style={styles.text}>crimson</p>\n      </Block>\n      \n      <Block backgroundColor='#229954' padding={DEMO_PADDING}>\n        <p style={styles.text}>hex: #229954</p>\n      </Block>\n    </Block>\n\n    <Block>\n      <Block backgroundColor='rgb(255, 195, 0)' padding={DEMO_PADDING}>\n        <p style={styles.text}>RGB: 255, 195, 0</p>\n      </Block>\n\n      <Block backgroundColor='hsl(283, 39%, 53%)' padding={DEMO_PADDING}>\n        <p style={styles.text}>HSL: 283, 39%, 53%</p>\n      </Block>\n    </Block>\n  </Block>\n);\n"})})]})}function ee(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(Q,{...e})}):Q(e)}},7227:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});n(96540);var l=n(34164);const r={tabItem:"tabItem_Ymn6"};var o=n(74848);function s(e){let{children:t,hidden:n,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,l.A)(r.tabItem,s),hidden:n,children:t})}},49489:(e,t,n)=>{"use strict";n.d(t,{A:()=>v});var l=n(96540),r=n(34164),o=n(24245),s=n(56347),c=n(36494),d=n(62814),i=n(45167),a=n(69900);function x(e){return l.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??function(e){return x(e).map((e=>{let{props:{value:t,label:n,attributes:l,default:r}}=e;return{value:t,label:n,attributes:l,default:r}}))}(n);return function(e){const t=(0,i.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function u(e){let{queryString:t=!1,groupId:n}=e;const r=(0,s.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,d.aZ)(o),(0,l.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=h(e),[s,d]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const l=n.find((e=>e.default))??n[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:t,tabValues:o}))),[i,x]=u({queryString:n,groupId:r}),[y,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,a.Dv)(n);return[r,(0,l.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),j=(()=>{const e=i??y;return p({value:e,tabValues:o})?e:null})();(0,c.A)((()=>{j&&d(j)}),[j]);return{selectedValue:s,selectValue:(0,l.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);d(e),x(e),f(e)}),[x,f,o]),tabValues:o}}var f=n(11062);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=n(74848);function b(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:i}=(0,o.a_)(),a=e=>{const t=e.currentTarget,n=d.indexOf(t),r=c[n].value;r!==l&&(i(t),s(r))},x=e=>{let t=null;switch(e.key){case"Enter":a(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:c.map((e=>{let{value:t,label:n,attributes:o}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,ref:e=>d.push(e),onKeyDown:x,onClick:a,...o,className:(0,r.A)("tabs__item",j.tabItem,o?.className,{"tabs__item--active":l===t}),children:n??t},t)}))})}function k(e){let{lazy:t,children:n,selectedValue:o}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===o));return e?(0,l.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function g(e){const t=y(e);return(0,m.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,m.jsx)(b,{...t,...e}),(0,m.jsx)(k,{...t,...e})]})}function v(e){const t=(0,f.A)();return(0,m.jsx)(g,{...e,children:x(e.children)},String(t))}},45424:(e,t,n)=>{"use strict";n.d(t,{A:()=>d});var l=n(96540),r=n(49489),o=n(7227),s=n(39498),c=n(74848);const d=class extends l.PureComponent{render(){return(0,c.jsxs)(r.A,{className:"demo-tabs",children:[(0,c.jsx)(o.A,{value:"preview",label:"Preview",default:!0,children:this.props.children}),(0,c.jsx)(o.A,{value:"code",label:"Code",children:(0,c.jsx)(s.A,{showLineNumbers:!0,language:"jsx",children:this.props.codeExample})})]})}}},35013:(e,t,n)=>{"use strict";n.d(t,{K:()=>r,q:()=>l});const l=13,r="/flexnative/img/logo.svg"},42480:(e,t,n)=>{"use strict";n.d(t,{A:()=>y});var l=n(96540),r=n(35013),o=n(64444),s=n(86884),c=n(32533),d=n(17120),i=n(57388),a=n(58424),x=n(73769),h=n(75117),p=n(44116),u=n(49585);const y={React:l,...l,Avatar:o.Ay,AvatarGroup:o.Z7,Button:s.A,Icon:c.default,Spinner:c.Spinner,BottomSheet:d.A,Tag:i.A,Badge:a.A,SkeletonLoader:x.Ay,Circle:x.jl,Rect:x.rw,TextBox:h.fI,NumericTextBox:h.uI,Check:h.Jl,CheckList:h.Pg,Message:p.A,Block:u.e,LOGO:r.K}},78982:()=>{},47790:()=>{},73776:()=>{},77965:()=>{},66089:()=>{},79368:()=>{},64688:()=>{},51069:()=>{},15340:()=>{},79838:()=>{},63779:()=>{},77199:()=>{}}]);