"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[6847],{16786:(e,t,n)=>{n.d(t,{Ay:()=>d,RM:()=>l});var s=n(74848),r=n(28453);const l=[];function i(e){const t={a:"a",code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:e.name})," is part of the ",(0,s.jsx)(t.a,{href:"./",children:(0,s.jsx)(t.strong,{children:"@flexnative/inputs"})})," package.\nTo use the ",(0,s.jsx)(t.strong,{children:e.name})," you needs to install ",(0,s.jsx)(t.code,{children:"@flexnative/inputs"})," package.\n",(0,s.jsx)(t.a,{href:"/flexnative/docs/components/inputs/#installation",children:"Fallow this link"})," on how to install the package."]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}},54043:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>x});const s=JSON.parse('{"id":"components/inputs/check-list/index","title":"Check List","description":"React component that allows users to select items from a list.","source":"@site/docs/components/inputs/check-list/index.mdx","sourceDirName":"components/inputs/check-list","slug":"/components/inputs/check-list/","permalink":"/flexnative/docs/components/inputs/check-list/","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/components/inputs/check-list/index.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{"inline":false,"label":"Component","permalink":"/flexnative/docs/tags/component","description":"Create user interfaces from components."},{"inline":false,"label":"Inputs","permalink":"/flexnative/docs/tags/inputs","description":"A foundational component for inputting text into the app via a keyboard. Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad."}],"version":"current","lastUpdatedAt":1732924800000,"frontMatter":{"title":"Check List","last_update":{"date":"2024-11-30T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework","component","inputs"]},"sidebar":"componentsSidebar","previous":{"title":"Check Box","permalink":"/flexnative/docs/components/inputs/check-box/"},"next":{"title":"Default","permalink":"/flexnative/docs/components/inputs/check-list/default"}}');var r=n(74848),l=n(28453),i=n(16786),d=n(76449),c=n(93935);const o={title:"Check List",last_update:{date:new Date("2024-11-30T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component","inputs"]},a=void 0,h={},x=[...i.RM,{value:"API",id:"api",level:2},{value:"Component",id:"component",level:2},{value:"Properties",id:"properties",level:2},{value:"InputType",id:"inputtype",level:3},{value:"Color",id:"color",level:3},{value:"Playground",id:"playground",level:2}];function j(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.Ay,{name:"FlexNative Checkbox"}),"\n",(0,r.jsxs)(t.p,{children:["React component that allows users to select items from a list.\nComponent extending ",(0,r.jsx)(t.code,{children:"React.PureComponent"}),", which is optimized for performance by implementing a shallow prop and state comparison.\nIt supports both single and multiple selection modes based on the 'multipleSelect' prop.\nThe component maintains its selected items in the state and updates the selection when an item is pressed.\nIt also provides styling options through various props and handles rendering of labels and helper text conditionally."]}),"\n",(0,r.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import { CheckList, CheckListProps } from '@flexnative/inputs';\n"})}),"\n",(0,r.jsx)(t.h2,{id:"component",children:"Component"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"CheckList"})}),"\n",(0,r.jsxs)(t.p,{children:["Type: ",(0,r.jsxs)("code",{children:["React.PureComponent<",(0,r.jsx)(t.a,{href:"#properties",children:"CheckListProps<T>"}),">"]})]}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Default Value"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"value"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"T \u2758 Array<T>"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Representing selected value/values from the available list."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"valueField"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.em,{children:(0,r.jsx)(t.strong,{children:"When the selected item is an object, always specify valueField."})})," If you do not set a value for the field, the list will compare the items by reference, which may complicate debugging. For example, the selected value will not be applied, if it does not reference the exact passed data object."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"type"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#inputtype",children:(0,r.jsx)(t.code,{children:"InputType"})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"outlined"})}),(0,r.jsx)(t.td,{children:"Checklist borders mode."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"multipleSelect"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"true"})}),(0,r.jsx)(t.td,{children:"Boolean value for single or multiple selection."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"size"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/flexnative/docs/theme/default-theme#sizes",children:(0,r.jsx)(t.code,{children:"Sizes"})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"normal"})}),(0,r.jsx)(t.td,{children:"Check list sizes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"radius"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/flexnative/docs/theme/default-theme#borderradius",children:(0,r.jsx)(t.code,{children:"BorderRadius"})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"medium"})}),(0,r.jsx)(t.td,{children:"Check list border radius."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"borderWidth"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/flexnative/docs/theme/default-theme#borderwidth",children:(0,r.jsx)(t.code,{children:"BorderWidth"})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"hairline"})}),(0,r.jsx)(t.td,{children:"Check list borders width."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"borderColor"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/colors",children:(0,r.jsx)(t.code,{children:"ColorValue"})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsxs)(t.td,{children:["Borders color according ",(0,r.jsx)(t.code,{children:"react-native"})," ColorValue."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"disabled"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:"Indicator if input it is disabled or not."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"color"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/flexnative/docs/theme/default-theme#color",children:(0,r.jsx)(t.code,{children:"Color"})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"theme.color.default"})}),(0,r.jsxs)(t.td,{children:["Color by theme or a custom color according ",(0,r.jsx)(t.code,{children:"react-native"})," ColorValue."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"backgroundColor"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/colors",children:(0,r.jsx)(t.code,{children:"ColorValue"})})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Input background color."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"label"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"string"})," or ",(0,r.jsx)(t.a,{href:"https://legacy.reactjs.org/blog/2014/10/14/introducing-react-elements.html",children:(0,r.jsx)(t.code,{children:"React.ReactElement"})})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsxs)(t.td,{children:["A ",(0,r.jsx)(t.code,{children:"string"})," value to display as labal, or ",(0,r.jsx)(t.a,{href:"https://legacy.reactjs.org/blog/2014/10/14/introducing-react-elements.html",children:(0,r.jsx)(t.code,{children:"React.ReactElement"})})," to display a custom element as a label."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"labelStyle"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"StyleProp<TextStyle>"})," or ",(0,r.jsx)(t.code,{children:"((state: StateCallbackType) => StyleProp<TextStyle>)"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Either text styles or a function that receives a boolean reflecting whether the component is currently active and returns text styles."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"onChange"}),(0,r.jsx)(t.td,{children:(0,r.jsxs)("code",{children:["(event: NativeSyntheticEvent<",(0,r.jsx)(t.a,{href:"./check-box#checkboxeventt",children:"CheckboxEvent"}),"<T> \u2758 SyntheticEvent<HTMLInputElement, <",(0,r.jsx)(t.a,{href:"./check-box#checkboxeventt",children:"CheckboxEvent"}),"<T>>) => void;"]})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Callback that is invoked when the user presses the checkbox."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"onValueChange"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"(value: T) => void"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Callback that is invoked when the user presses the checkbox."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"direction"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("code",{children:"'row' | 'column'"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"column"})}),(0,r.jsx)(t.td,{children:"Check element direction."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"material"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:"Indicator if input should looks like Material input."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"helperText"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Helper text about input."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"children"}),(0,r.jsx)(t.td,{children:(0,r.jsxs)("code",{children:["Array",(0,r.jsx)("a",{href:"https://legacy.reactjs.org/blog/2014/10/14/introducing-react-elements.html"}),"<",(0,r.jsx)("a",{href:"/flexnative/docs/components/inputs/check-list#properties",children:"CheckProps<T>"}),">"]})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"React element to render custom check boxes."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"inputtype",children:"InputType"}),"\n",(0,r.jsxs)(t.p,{children:["One of ",(0,r.jsx)(t.code,{children:"'outlined' | 'underlined'"})]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"outlined"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:"Property to set check list with borders."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"underlined"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:"Property to set check list underlined, (with only bottom border)."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"color",children:"Color"}),"\n",(0,r.jsx)(d.A,{}),"\n",(0,r.jsx)(t.h2,{id:"playground",children:"Playground"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"//Play with props to see live changes;\n\nfunction CheckListPlayground() {\n  const [textValues, setTextValues] = useState(['1', '2', '3']);\n\n  return (\n    <CheckList label='Check list label'\n              value={textValues}\n              color='success'\n              size='large'\n              backgroundColor='default'\n              borderColor='info'\n              borderWidth='thick'\n              radius='medium'\n              onValueChange={(newValues) => setTextValues([...newValues])}>\n      <Check value='1' label='Check 1' />\n      <Check value='2' label='Check 2' />\n      <Check value='3' label='Check 3' color='primary' />\n    </CheckList>\n  );\n}\n\nrender(<CheckListPlayground />);\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(c.A,{})]})}function u(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}},93935:(e,t,n)=>{n.d(t,{A:()=>g});n(96540);var s=n(34164),r=n(45357),l=n(14783),i=n(57824),d=n(40877),c=n(23230),o=n(85225);const a={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var h=n(74848);function x(e){let{href:t,children:n}=e;return(0,h.jsx)(l.A,{href:t,className:(0,s.A)("card padding--lg",a.cardContainer),children:n})}function j(e){let{href:t,icon:n,title:r,description:l}=e;return(0,h.jsxs)(x,{href:t,children:[(0,h.jsxs)(o.A,{as:"h2",className:(0,s.A)("text--truncate",a.cardTitle),title:r,children:[n," ",r]}),l&&(0,h.jsx)("p",{className:(0,s.A)("text--truncate",a.cardDescription),title:l,children:l})]})}function u(e){let{item:t}=e;const n=(0,r.Nr)(t),s=function(){const{selectMessage:e}=(0,i.W)();return t=>e(t,(0,c.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return n?(0,h.jsx)(j,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??s(t.items.length)}):null}function p(e){let{item:t}=e;const n=(0,d.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",s=(0,r.cC)(t.docId??void 0);return(0,h.jsx)(j,{href:t.href,icon:n,title:t.label,description:t.description??s?.description})}function m(e){let{item:t}=e;switch(t.type){case"link":return(0,h.jsx)(p,{item:t});case"category":return(0,h.jsx)(u,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function f(e){let{className:t}=e;const n=(0,r.$S)();return(0,h.jsx)(g,{items:n.items,className:t})}function g(e){const{items:t,className:n}=e;if(!t)return(0,h.jsx)(f,{...e});const l=(0,r.d1)(t);return(0,h.jsx)("section",{className:(0,s.A)("row",n),children:l.map(((e,t)=>(0,h.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,h.jsx)(m,{item:e})},t)))})}},57824:(e,t,n)=>{n.d(t,{W:()=>o});var s=n(96540),r=n(97639);const l=["zero","one","two","few","many","other"];function i(e){return l.filter((t=>e.includes(t)))}const d={locale:"en",pluralForms:i(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,s.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:i(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),d}}),[e])}function o(){const e=c();return{selectMessage:(t,n)=>function(e,t,n){const s=e.split("|");if(1===s.length)return s[0];s.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${s.length}: ${e}`);const r=n.select(t),l=n.pluralForms.indexOf(r);return s[Math.min(l,s.length-1)]}(n,t,e)}}},88065:(e,t,n)=>{n.d(t,{A:()=>l});var s=n(96540),r=n(74848);const l=class extends s.PureComponent{render(){return(0,r.jsx)("span",{className:"color-view",style:{backgroundColor:this.props.color.toString()}})}}},76449:(e,t,n)=>{n.d(t,{A:()=>d});var s=n(96540),r=n(94605),l=n(88065),i=n(74848);const d=class extends s.PureComponent{render(){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("p",{children:["One of ",(0,i.jsx)("code",{children:"'default' | 'primary' | 'secondary' | 'info' | 'success' | 'warning' | 'error' | 'dark' | 'light' | ColorValue"})]}),(0,i.jsxs)("table",{children:[(0,i.jsxs)("thead",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{rowSpan:2,children:"Name"}),(0,i.jsx)("th",{rowSpan:2,children:" Type"}),(0,i.jsx)("th",{rowSpan:2,children:" Value"}),(0,i.jsx)("th",{colSpan:2,children:"Preview"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Light"}),(0,i.jsx)("th",{children:"Dark"})]})]}),(0,i.jsxs)("tbody",{children:[Object.keys(r.light).map(((e,t)=>(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:e}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:(0,i.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:`theme.colors.${e}`})}),(0,i.jsxs)("td",{children:[(0,i.jsx)(l.A,{color:r.light[e]})," ",(0,i.jsx)("code",{style:{marginLeft:15},children:r.light[e]})]}),(0,i.jsxs)("td",{children:[(0,i.jsx)(l.A,{color:r.dark[e]})," ",(0,i.jsx)("code",{style:{marginLeft:15},children:r.dark[e]})]})]},t))),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:(0,i.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})}),(0,i.jsxs)("td",{colSpan:3,children:["Any ",(0,i.jsx)("code",{children:(0,i.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})," chosen by developer."]})]})]})]})]})}}}}]);