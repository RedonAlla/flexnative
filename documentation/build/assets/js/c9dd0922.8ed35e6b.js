(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[3958],{22475:(e,s,n)=>{"use strict";n.d(s,{Ay:()=>a,RM:()=>i});var t=n(74848),r=n(28453),o=n(39498);const i=[{value:"Installation",id:"installation",level:2}];function l(e){const s={h2:"h2",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(s.p,{children:["You can installing ",(0,t.jsx)(s.strong,{children:e.title})," packages using npm:"]}),"\n",(0,t.jsx)(o.A,{language:"bash",children:`npm i ${e.name}`})]})}function a(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},79873:(e,s,n)=>{"use strict";n.r(s),n.d(s,{assets:()=>S,contentTitle:()=>E,default:()=>D,frontMatter:()=>W,metadata:()=>t,toc:()=>z});const t=JSON.parse('{"id":"components/messages/index","title":"Messages","description":"Component to display messages that require attention with colored message blocks,","source":"@site/docs/components/messages/index.mdx","sourceDirName":"components/messages","slug":"/components/messages/","permalink":"/flexnative/docs/components/messages/","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/components/messages/index.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{"inline":false,"label":"Component","permalink":"/flexnative/docs/tags/component","description":"Create user interfaces from components."},{"inline":false,"label":"Messages","permalink":"/flexnative/docs/tags/messages","description":"Display warning messages that require attention with colored message blocks, to emphasize part of your page."}],"version":"current","lastUpdatedAt":1735948800000,"frontMatter":{"title":"Messages","last_update":{"date":"2025-01-04T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework","component","messages"]},"sidebar":"componentsSidebar","previous":{"title":"Grid","permalink":"/flexnative/docs/components/layout/Grid"},"next":{"title":"Navigation","permalink":"/flexnative/docs/components/navigation/"}}');var r=n(74848),o=n(28453),i=n(22475),l=n(54182),a=n(45424),d=n(96540),c=n(44116),h=n(96444);function x(e,s){return`${e}\n\n${s||"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean mollis."}`}const m=class extends d.PureComponent{render(){return(0,r.jsxs)("div",{className:"example-block",children:[h.N.map(((e,s)=>(0,r.jsx)(c.A,{text:x(e),color:e},s))),(0,r.jsx)(c.A,{text:x("crimson"),color:"crimson"}),(0,r.jsx)(c.A,{text:x("#ed143d"),color:"#ed143d"}),(0,r.jsx)(c.A,{text:x("rgb(237, 20, 61)"),color:"rgb(237, 20, 61)"}),(0,r.jsx)(c.A,{text:x("rgba(237, 20, 61, 0.5)"),color:"rgba(237, 20, 61, 0.5)"})]})}},p="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 22:18:34\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-04 22:38:11\n * @ Description: Examples of Message component with different colors.\n */\n\nimport React from \"react\";\n\n// highlight-next-line\nimport Message from '@flexnative/messages';\nimport { Color } from \"@flexnative/theme-context\";\nimport { frameworkColors } from \"../../constants\";\nimport { messageTemplate } from \"./utilities\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        {\n          frameworkColors.map((color, index) =>\n            <Message key={index} text={messageTemplate(color as string)} color={color as Color} />\n          )\n        }\n\n        <Message text={messageTemplate('crimson')} color={'crimson'} />\n        <Message text={messageTemplate('#ed143d')} color={'#ed143d'} />\n        <Message text={messageTemplate('rgb(237, 20, 61)')} color={'rgb(237, 20, 61)'} />\n        <Message text={messageTemplate('rgba(237, 20, 61, 0.5)')} color={'rgba(237, 20, 61, 0.5)'} />\n      </div>\n    );\n  }\n}",g=class extends d.PureComponent{render(){return(0,r.jsxs)("div",{className:"example-block",children:[(0,r.jsx)(c.A,{borderColor:"crimson",borderWidth:"hairline",text:x("`crimson`")}),(0,r.jsx)(c.A,{borderColor:"#ed143d",borderWidth:"hairline",text:x("#ed143d")}),(0,r.jsx)(c.A,{borderColor:"rgb(237, 20, 61)",borderWidth:"hairline",text:x("rgb(237, 20, 61)")}),(0,r.jsx)(c.A,{borderColor:"rgba(237, 20, 61, 0.5)",borderWidth:"hairline",text:x("rgba(237, 20, 61, 0.5)")})]})}},f="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 22:18:34\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-04 22:56:37\n * @ Description: Examples of Message component with different borders colors.\n */\n\nimport React from \"react\";\n// highlight-next-line\nimport Message from \"@flexnative/messages\";\nimport { messageTemplate } from \"./utilities\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Message borderColor='crimson' borderWidth='hairline' text={messageTemplate('`crimson`')}  />\n        <Message borderColor='#ed143d' borderWidth='hairline' text={messageTemplate('#ed143d')} />\n        <Message borderColor='rgb(237, 20, 61)' borderWidth='hairline' text={messageTemplate('rgb(237, 20, 61)')}/>\n        <Message borderColor='rgba(237, 20, 61, 0.5)' borderWidth='hairline' text={messageTemplate('rgba(237, 20, 61, 0.5)')} />    \n      </div>\n    );\n  }\n}\n",j=class extends d.PureComponent{render(){return(0,r.jsxs)("div",{className:"example-block",children:[(0,r.jsx)(c.A,{color:"primary",radius:"none",text:x("`none`")}),(0,r.jsx)(c.A,{color:"primary",radius:"small",text:x("`small`")}),(0,r.jsx)(c.A,{color:"primary",radius:"medium",text:x("`medium`")}),(0,r.jsx)(c.A,{color:"primary",radius:"large",text:x("`large`")}),(0,r.jsx)(c.A,{color:"primary",radius:"full",text:x("`full`")}),(0,r.jsx)(c.A,{color:"primary",radius:12,text:x("12")})]})}},u="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 22:18:34\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-04 23:59:38\n * @ Description: Examples of Message component with different border radius.\n */\n\nimport React from \"react\";\n// highlight-next-line\nimport Message from \"@flexnative/messages\";\nimport { messageTemplate } from \"./utilities\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Message color='primary' radius='none' text={messageTemplate('`none`')}/>\n        <Message color='primary' radius='small' text={messageTemplate('`small`')} />\n        <Message color='primary' radius='medium' text={messageTemplate('`medium`')}  />\n        <Message color='primary' radius='large' text={messageTemplate('`large`')} />\n        <Message color='primary' radius='full' text={messageTemplate('`full`')} />\n        <Message color='primary' radius={12} text={messageTemplate('12')} />\n      </div>\n    );\n  }\n}",b=class extends d.PureComponent{render(){return(0,r.jsxs)("div",{className:"example-block",children:[(0,r.jsx)(c.A,{color:"primary",borderWidth:"none",text:x("`none`")}),(0,r.jsx)(c.A,{color:"primary",borderWidth:"hairline",text:x("`hairline`")}),(0,r.jsx)(c.A,{color:"primary",borderWidth:"thin",text:x("`thin`")}),(0,r.jsx)(c.A,{color:"primary",borderWidth:"base",text:x("`base`")}),(0,r.jsx)(c.A,{color:"primary",borderWidth:"thick",text:x("`thick`")}),(0,r.jsx)(c.A,{color:"primary",borderWidth:5,text:x("5")})]})}},v="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 22:18:34\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 00:07:04\n * @ Description: Examples of Message component with different border width.\n */\n\n\nimport React from \"react\";\n// highlight-next-line\nimport Message from \"@flexnative/messages\";\n\nimport { messageTemplate } from \"./utilities\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Message color='primary' borderWidth='none' text={messageTemplate('`none`')}/>\n        <Message color='primary' borderWidth='hairline' text={messageTemplate('`hairline`')} />\n        <Message color='primary' borderWidth='thin' text={messageTemplate('`thin`')}  />\n        <Message color='primary' borderWidth='base' text={messageTemplate('`base`')} />\n        <Message color='primary' borderWidth='thick' text={messageTemplate('`thick`')} />\n        <Message color='primary' borderWidth={5} text={messageTemplate('5')} />\n      </div>\n    );\n  }\n}",M=class extends d.PureComponent{render(){return(0,r.jsxs)("div",{className:"example-block",children:[(0,r.jsx)(c.A,{fill:"ghost",color:"primary",text:x("`ghost`",y)}),(0,r.jsx)(c.A,{fill:"ghost",color:"warning",text:x("`ghost`",y)}),(0,r.jsx)(c.A,{fill:"ghost",color:"crimson",text:x("`ghost`",y)}),(0,r.jsx)(c.A,{fill:"ghost",color:"#ed143d",text:x("ghost",y)}),(0,r.jsx)(c.A,{fill:"ghost",color:"rgb(237, 20, 61)",text:x("ghost",y)}),(0,r.jsx)(c.A,{fill:"ghost",color:"rgba(237, 20, 61, 0.5)",text:x("ghost",y)}),(0,r.jsx)(c.A,{fill:"solid",color:"primary",text:x("`solid`",y)}),(0,r.jsx)(c.A,{fill:"solid",color:"warning",text:x("`solid`",y)}),(0,r.jsx)(c.A,{fill:"solid",color:"crimson",text:x("`solid`",y)}),(0,r.jsx)(c.A,{fill:"solid",color:"#ed143d",text:x("solid",y)}),(0,r.jsx)(c.A,{fill:"solid",color:"rgb(237, 20, 61)",text:x("solid",y)}),(0,r.jsx)(c.A,{fill:"solid",color:"rgba(237, 20, 61, 0.5)",text:x("solid",y)})]})}},y="To have nice effect for fill='ghost' type using custom colors use hex color with a specific opacity.",A="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 22:18:34\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 00:22:43\n * @ Description: Examples of Message component with fill mode.\n */\n\nimport React from \"react\";\n// highlight-next-line\nimport Message from \"@flexnative/messages\";\nimport { messageTemplate } from \"./utilities\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Message fill='ghost' color='primary' text={messageTemplate('`ghost`', ghostMessage)}/>\n        <Message fill='ghost' color='warning' text={messageTemplate('`ghost`', ghostMessage)} />\n        <Message fill='ghost' color='crimson' text={messageTemplate('`ghost`', ghostMessage)}  />\n        <Message fill='ghost' color={'#ed143d'} text={messageTemplate('ghost', ghostMessage)} />\n        <Message fill='ghost' color={'rgb(237, 20, 61)'} text={messageTemplate('ghost', ghostMessage)}/>\n        <Message fill='ghost' color={'rgba(237, 20, 61, 0.5)'} text={messageTemplate('ghost', ghostMessage)} />\n        <Message fill='solid' color='primary' text={messageTemplate('`solid`', ghostMessage)} />\n        <Message fill='solid' color='warning' text={messageTemplate('`solid`', ghostMessage)} />\n        <Message fill='solid' color='crimson' text={messageTemplate('`solid`', ghostMessage)}  />\n        <Message fill='solid' color={'#ed143d'} text={messageTemplate('solid', ghostMessage)} />\n        <Message fill='solid' color={'rgb(237, 20, 61)'} text={messageTemplate('solid', ghostMessage)}/>\n        <Message fill='solid' color={'rgba(237, 20, 61, 0.5)'} text={messageTemplate('solid', ghostMessage)} />\n      </div>\n    );\n  }\n}\n\nconst ghostMessage = \"To have nice effect for fill='ghost' type using custom colors use hex color with a specific opacity.\";",T=class extends d.PureComponent{render(){return(0,r.jsxs)("div",{className:"example-block",children:[(0,r.jsx)(c.A,{color:"info",size:"small",text:x("`small`")}),(0,r.jsx)(c.A,{color:"info",text:x("`default`")}),(0,r.jsx)(c.A,{color:"info",size:"medium",text:x("`medium`")}),(0,r.jsx)(c.A,{color:"info",size:"large",text:x("`large`")}),(0,r.jsx)(c.A,{color:"info",size:5,text:x("5")})]})}},C="/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 22:18:34\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 00:27:08\n * @ Description: Examples of Message component with different sizes.\n */\n\nimport React from \"react\";\n// highlight-next-line\nimport Message from \"@flexnative/messages\";\nimport { messageTemplate } from \"./utilities\";\n\n\nexport default class extends React.PureComponent {\n  public render() {\n    return (\n      <div className='example-block'>\n        <Message color='info' size='small' text={messageTemplate('`small`')} />\n        <Message color='info' text={messageTemplate('`default`')}/>\n        <Message color='info' size='medium' text={messageTemplate('`medium`')}  />\n        <Message color='info' size='large' text={messageTemplate('`large`')} />\n        <Message color='info' size={5} text={messageTemplate('5')} />\n      </div>\n    );\n  }\n}";var w=n(71582),k=n(94605);function R(){const e=(0,k.useThemeContext)(),s=()=>({color:e.colors.text,backgroundColor:e.colors.warning});return(0,r.jsx)("div",{className:"example-block",children:(0,r.jsx)(c.A,{children:(0,r.jsxs)(w.EY,{style:{color:e.colors.warning},children:["Using prop ",(0,r.jsx)(w.EY,{style:[N.code,s()],children:"children"})," to render custom ",(0,r.jsx)(w.EY,{style:[N.code,s()],children:"React Element"})," in ",(0,r.jsx)(w.EY,{style:[N.code,s()],children:"Message"})," component."]})})})}const N=w.vv.create({code:{paddingHorizontal:5,lineHeight:20,borderRadius:3,fontFamily:"Italic"}}),P='/**\n * @ Author: Redon Alla\n * @ Create Time: 2025-01-04 22:18:34\n * @ Modified by: Redon Alla\n * @ Modified time: 2025-01-05 00:43:44\n * @ Description: Example of Message component rendering custom component.\n */\n\n\nimport React from "react";\nimport { StyleSheet, Text } from "react-native";\n\nimport Message from "@flexnative/messages";\nimport { useThemeContext } from "@flexnative/theme-context";\n\n\nexport default function Children() {\n  const theme = useThemeContext();\n\n  const codeStyle = () => {\n    return {\n      color: theme.colors.text,\n      backgroundColor: theme.colors.warning\n    }\n  }\n\n  return (\n    <div className=\'example-block\'>\n      <Message>\n        <Text style={{color: theme.colors.warning}}>\n          Using prop <Text style={[styles.code, codeStyle()]}>children</Text> to render\n          custom <Text style={[styles.code, codeStyle()]}>\n            React Element \n          </Text> in <Text style={[styles.code, codeStyle()]}>Message</Text> component.\n        </Text>\n      </Message>\n    </div>\n  );\n}\n\nconst styles = StyleSheet.create({\n  code: {\n    paddingHorizontal: 5,\n    lineHeight: 20,\n    borderRadius: 3,\n    fontFamily: \'Italic\',\n  }\n});',W={title:"Messages",last_update:{date:new Date("2025-01-04T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component","messages"]},E=void 0,S={},z=[{value:"Dependencies",id:"dependencies",level:2},...i.RM,{value:"API",id:"api",level:2},{value:"Component",id:"component",level:2},{value:"Properties",id:"properties",level:2},{value:"FillMode",id:"fillmode",level:3},{value:"Use case Examples",id:"use-case-examples",level:2},{value:"Color",id:"color",level:3},{value:"BorderColors",id:"bordercolors",level:3},{value:"BorderRadius",id:"borderradius",level:3},{value:"BorderWidth",id:"borderwidth",level:3},{value:"BorderWidth",id:"borderwidth-1",level:3},{value:"FillMode",id:"fillmode-1",level:3},{value:"Size",id:"size",level:3},{value:"Children",id:"children",level:3},{value:"Playground",id:"playground",level:2}];function B(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"Component to display messages that require attention with colored message blocks,\nto emphasize part of your page."}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.strong,{children:"FlexNative Messages"})," is part of the ",(0,r.jsx)(s.code,{children:"FlexNative Framework"})," and is available under the ",(0,r.jsx)(s.code,{children:"@flexnative/messages"})," NPM package."]}),"\n",(0,r.jsx)(s.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/flexnative/docs/theme/",children:(0,r.jsx)(s.code,{children:"@flexnative/theme-context"})})}),"\n"]}),"\n",(0,r.jsx)(i.Ay,{title:"FlexNative Messages",name:"@flexnative/messages"}),"\n",(0,r.jsx)(s.h2,{id:"api",children:"API"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-jsx",children:"import Message from '@flexnative/messages';\n"})}),"\n",(0,r.jsx)(s.h2,{id:"component",children:"Component"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Message"})}),"\n",(0,r.jsxs)(s.p,{children:["Type: ",(0,r.jsxs)("code",{children:[(0,r.jsx)(s.a,{href:"https://react.dev/reference/react/PureComponent",children:"React.PureComponent"}),"<",(0,r.jsx)(s.a,{href:"#properties",children:"MessageBoxProps"}),">"]})]}),"\n",(0,r.jsxs)(s.p,{children:["This component uses the ",(0,r.jsx)(s.code,{children:"ThemeContext"})," to apply theme-based styles.\nComponent extending ",(0,r.jsx)(s.a,{href:"https://react.dev/reference/react/PureComponent",children:(0,r.jsx)(s.code,{children:"React.PureComponent"})}),",\nwhich is optimized for performance by implementing a shallow prop and state comparison."]}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["MessageBoxProps extends ",(0,r.jsx)(s.a,{href:"https://reactnative.dev/docs/view#props",children:(0,r.jsx)(s.code,{children:"ViewProps"})})," from ",(0,r.jsx)(s.strong,{children:"React Native"}),",\nso any prop of ViewProps it is applicable on ",(0,r.jsx)(s.code,{children:"Message"})," component."]})}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Required"}),(0,r.jsx)(s.th,{children:"Default Value"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"radius"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../theme/default-theme.mdx#borderradius",children:(0,r.jsx)(s.code,{children:"BorderRadius"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"false"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"medium"})}),(0,r.jsx)(s.td,{children:"Message box border radius. Specifies the roundness of the message box corners."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"borderWidth"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../theme/default-theme.mdx#borderwidth",children:(0,r.jsx)(s.code,{children:"BorderWidth"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"false"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"node"})}),(0,r.jsx)(s.td,{children:"Optional message box borders width. Specifies the thickness of the message box borders."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"borderColor"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://reactnative.dev/docs/colors",children:(0,r.jsx)(s.code,{children:"ColorValue"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"false"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"undefined"})}),(0,r.jsxs)(s.td,{children:["Specifies the color of the message box borders. Borders color according to ",(0,r.jsx)(s.code,{children:"react-native"})," ColorValue."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"fill"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#fillmode",children:(0,r.jsx)(s.code,{children:"FillMode"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"false"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"ghost"})}),(0,r.jsxs)(s.td,{children:["Fill Mode of the message box. Determines the appearance of the message box. ",(0,r.jsxs)(l.A,{type:"warning",children:["To have appearance for ",(0,r.jsx)(s.code,{children:"ghost"})," with custom color you should use hex colors."]})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"size"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../theme/default-theme.mdx#sizes",children:(0,r.jsx)(s.code,{children:"Sizes"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"false"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"normal"})}),(0,r.jsx)(s.td,{children:"Message box size. Defines the overall size of the message box component."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"color"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../theme/default-theme.mdx#color",children:(0,r.jsx)(s.code,{children:"Color"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"false"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"theme.color.default"})}),(0,r.jsxs)(s.td,{children:["Color by theme or a custom color according ",(0,r.jsx)(s.code,{children:"react-native"})," ColorValue. Sets the primary color of the message box, either by theme or a specified color code."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"text"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"string"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"false"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"undefined"})}),(0,r.jsxs)(s.td,{children:["String that contains the text or message to be displayed inside the message box. If the ",(0,r.jsx)(s.code,{children:"children"})," property is used, this text property will be ignored."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"children"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://reactnative.dev/docs/react-node",children:(0,r.jsx)(s.code,{children:"React.ReactNode"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"false"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"undefined"})}),(0,r.jsx)(s.td,{children:"Children to display inside the Message box. Can be any React elements that will be rendered within the message box."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"fillmode",children:"FillMode"}),"\n",(0,r.jsxs)(s.p,{children:["One of ",(0,r.jsx)(s.code,{children:"'ghost' | 'solid'"})]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ghost"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"string"})}),(0,r.jsx)(s.td,{children:"Message Box with a transparent background."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"solid"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"string"})}),(0,r.jsx)(s.td,{children:"Message Box with a solid background color."})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"use-case-examples",children:"Use case Examples"}),"\n",(0,r.jsxs)(s.p,{children:["The following example demonstrates the ",(0,r.jsx)(s.code,{children:"Message"})," component in action."]}),"\n",(0,r.jsx)(s.h3,{id:"color",children:"Color"}),"\n",(0,r.jsx)(a.A,{codeExample:p,children:(0,r.jsx)(m,{})}),"\n",(0,r.jsx)(s.h3,{id:"bordercolors",children:"BorderColors"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"borderColors"})," will have effect effect only when ",(0,r.jsx)(s.code,{children:"borderWidth"})," has a value."]}),"\n",(0,r.jsx)(a.A,{codeExample:f,children:(0,r.jsx)(g,{})}),"\n",(0,r.jsx)(s.h3,{id:"borderradius",children:"BorderRadius"}),"\n",(0,r.jsx)(a.A,{codeExample:u,children:(0,r.jsx)(j,{})}),"\n",(0,r.jsx)(s.h3,{id:"borderwidth",children:"BorderWidth"}),"\n",(0,r.jsx)(a.A,{codeExample:v,children:(0,r.jsx)(b,{})}),"\n",(0,r.jsx)(s.h3,{id:"borderwidth-1",children:"BorderWidth"}),"\n",(0,r.jsx)(a.A,{codeExample:v,children:(0,r.jsx)(b,{})}),"\n",(0,r.jsx)(s.h3,{id:"fillmode-1",children:"FillMode"}),"\n",(0,r.jsx)(a.A,{codeExample:A,children:(0,r.jsx)(M,{})}),"\n",(0,r.jsx)(s.h3,{id:"size",children:"Size"}),"\n",(0,r.jsx)(a.A,{codeExample:C,children:(0,r.jsx)(T,{})}),"\n",(0,r.jsx)(s.h3,{id:"children",children:"Children"}),"\n",(0,r.jsx)(a.A,{codeExample:P,children:(0,r.jsx)(R,{})}),"\n",(0,r.jsx)(s.h2,{id:"playground",children:"Playground"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"render(<Message color='info' size='medium' text='Play with props to see live changes' />);\n"})})]})}function D(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(B,{...e})}):B(e)}},45424:(e,s,n)=>{"use strict";n.d(s,{A:()=>a});var t=n(96540),r=n(49489),o=n(7227),i=n(39498),l=n(74848);const a=class extends t.PureComponent{render(){return(0,l.jsxs)(r.A,{className:"demo-tabs",children:[(0,l.jsx)(o.A,{value:"preview",label:"Preview",default:!0,children:this.props.children}),(0,l.jsx)(o.A,{value:"code",label:"Code",children:(0,l.jsx)(i.A,{showLineNumbers:!0,language:"jsx",children:this.props.codeExample})})]})}}},96444:(e,s,n)=>{"use strict";n.d(s,{E:()=>t,N:()=>r});const t=64,r=["default","primary","secondary","info","success","warning","error","dark","light"]},35013:(e,s,n)=>{"use strict";n.d(s,{K:()=>r,q:()=>t});const t=13,r="/flexnative/img/logo.svg"},42480:(e,s,n)=>{"use strict";n.d(s,{A:()=>g});var t=n(96540),r=n(35013),o=n(64444),i=n(86884),l=n(32533),a=n(17120),d=n(57388),c=n(58424),h=n(73769),x=n(75117),m=n(44116),p=n(49585);const g={React:t,...t,Avatar:o.Ay,AvatarGroup:o.Z7,Button:i.A,Icon:l.default,Spinner:l.Spinner,BottomSheet:a.A,Tag:d.A,Badge:c.A,SkeletonLoader:h.Ay,Circle:h.jl,Rect:h.rw,TextBox:x.fI,NumericTextBox:x.uI,Check:x.Jl,CheckList:x.Pg,Message:m.A,Block:p.e,LOGO:r.K}},78982:()=>{},47790:()=>{},73776:()=>{},77965:()=>{},66089:()=>{},79368:()=>{},64688:()=>{},51069:()=>{},15340:()=>{},79838:()=>{},63779:()=>{},77199:()=>{}}]);