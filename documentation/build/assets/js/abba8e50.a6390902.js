"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[2667],{41441:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var a=n(17315),o=n(74848),r=n(28453);const i={slug:"93429af",title:"\ud83d\udee0\ufe0f Inputs refactor",description:"refactor(inputs) make certain props optional and handle non-null assertions",authors:"RedonAlla",tags:["inputs_v0.0.10","inputs"]},s=void 0,l={authorsImageUrls:[void 0]},c=[{value:"\ud83d\udee0\ufe0f Inputs refactor",id:"\ufe0f-inputs-refactor",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"\ufe0f-inputs-refactor",children:"\ud83d\udee0\ufe0f Inputs refactor"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsxs)(t.strong,{children:[(0,o.jsx)(t.a,{href:"https://github.com/RedonAlla/flexnative/commit/93429af",children:"#93429af"})," refactor(inputs): make certain props optional and handle non-null assertions"]})}),"\n",(0,o.jsxs)(t.p,{children:["Changed ",(0,o.jsx)(t.code,{children:"type"}),", ",(0,o.jsx)(t.code,{children:"size"}),", and ",(0,o.jsx)(t.code,{children:"radius"})," in ",(0,o.jsx)(t.code,{children:"BaseInputProps"})," from required to optional by using '?' modifier. Updated TypeScript code in ",(0,o.jsx)(t.code,{children:"number-text-box"})," and ",(0,o.jsx)(t.code,{children:"text-box"})," components to use non-null assertion operator for these properties where necessary. This change provides more flexibility when using the input components, allowing for default values to be applied if these attributes are not specified explicitly. Additionally, incremented package version from 0.0.9 to 0.0.10."]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var a=n(96540);const o={},r=a.createContext(o);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:t},e.children)}},17315:e=>{e.exports=JSON.parse('{"permalink":"/flexnative/changelog/93429af","source":"@site/blog/2025-02-01-refactor-inputs.md","title":"\ud83d\udee0\ufe0f Inputs refactor","description":"refactor(inputs) make certain props optional and handle non-null assertions","date":"2025-02-01T00:00:00.000Z","tags":[{"inline":false,"label":"Inputs 0.0.10","permalink":"/flexnative/changelog/tags/inputs_v0.0.10","description":"Inputs 0.0.10. Use this tag to filter all changes about Inputs version 0.0.10."},{"inline":false,"label":"Inputs","permalink":"/flexnative/changelog/tags/inputs","description":"A foundational component for inputting text into the app via a keyboard. Props provide configurability for several features, such as auto-correction, auto-capitalization, placeholder text, and different keyboard types, such as a numeric keypad."}],"readingTime":0.395,"hasTruncateMarker":false,"authors":[{"name":"Redon Alla","title":".NET, React, Angular Developer","url":"https://github.com/RedonAlla","page":{"permalink":"/flexnative/changelog/authors/redon-alla"},"socials":{"linkedin":"https://www.linkedin.com/in/redon-alla-17ba3590/","github":"https://github.com/RedonAlla"},"imageURL":"https://avatars.githubusercontent.com/u/39186570?v=4","key":"RedonAlla"}],"frontMatter":{"slug":"93429af","title":"\ud83d\udee0\ufe0f Inputs refactor","description":"refactor(inputs) make certain props optional and handle non-null assertions","authors":"RedonAlla","tags":["inputs_v0.0.10","inputs"]},"unlisted":false,"prevItem":{"title":"\ud83d\udee0\ufe0f Inputs refactor","permalink":"/flexnative/changelog/b3713dd"},"nextItem":{"title":"\ud83d\udee0\ufe0f Inputs refactor","permalink":"/flexnative/changelog/1f75cdd"}}')}}]);