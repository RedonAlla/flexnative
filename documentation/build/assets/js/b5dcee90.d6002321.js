"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[7226],{42707:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>f,frontMatter:()=>h,metadata:()=>s,toc:()=>x});const s=JSON.parse('{"id":"components/icons/basic-usage","title":"Basic Usage","description":"To use a icon font, you have to make sure you import them into your project. Only after the font is loaded, you can use Icon set.","source":"@site/docs/components/icons/basic-usage.mdx","sourceDirName":"components/icons","slug":"/components/icons/basic-usage","permalink":"/flexnative/docs/components/icons/basic-usage","draft":false,"unlisted":false,"editUrl":"https://github.com/RedonAlla/flexnative/edit/main/documentation/docs/components/icons/basic-usage.mdx","tags":[{"inline":false,"label":"React","permalink":"/flexnative/docs/tags/react","description":"The library for web and native user interfaces."},{"inline":false,"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React"},{"inline":false,"label":"Expo","permalink":"/flexnative/docs/tags/expo","description":"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{"inline":false,"label":"Framework","permalink":"/flexnative/docs/tags/framework","description":"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{"inline":false,"label":"Component","permalink":"/flexnative/docs/tags/component","description":"Create user interfaces from components."}],"version":"current","lastUpdatedAt":1727136000000,"sidebarPosition":1,"frontMatter":{"title":"Basic Usage","sidebar_position":1,"last_update":{"date":"2024-09-24T00:00:00.000Z","author":"Redon Alla"},"tags":["react","react-native","expo","framework","component"]},"sidebar":"componentsSidebar","previous":{"title":"Icons","permalink":"/flexnative/docs/components/icons/"},"next":{"title":"Custom Icons","permalink":"/flexnative/docs/components/icons/custom-icons"}}');var r=t(74848),o=t(28453),a=t(49489),i=t(7227),c=t(96540),l=t(32533);const d=class extends c.PureComponent{render(){return(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Name"}),(0,r.jsx)("td",{children:"Unicode Value"}),(0,r.jsx)("td",{children:"Icon"})]})}),(0,r.jsx)("tbody",{children:Object.keys(l.icons).map(((e,n)=>(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:e}),(0,r.jsx)("td",{children:e}),(0,r.jsx)("td",{children:(0,r.jsx)("span",{className:`icon-font icon-${e}`})})]},n)))})]})}};t(76449);const h={title:"Basic Usage",sidebar_position:1,last_update:{date:new Date("2024-09-24T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},u=void 0,p={},x=[{value:"Properties",id:"properties",level:2},{value:"IconProps",id:"iconprops",level:3},{value:"IconName",id:"iconname",level:3},{value:"Using <code>Icon</code> component",id:"using-icon-component",level:2},{value:"Using with Plain text",id:"using-with-plain-text",level:2},{value:"Spinner",id:"spinner",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"To use a icon font, you have to make sure you import them into your project. Only after the font is loaded, you can use Icon set."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:"jsx",children:"'icon': require('../assets/fonts/font-icon.ttf')\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Read more on about ",(0,r.jsx)(n.a,{href:"https://docs.expo.dev/archive/classic-updates/preloading-and-caching-assets/#pre-loading-and-caching-assets",children:"pre-loading and caching assets"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["You can use your own set of icons. See section ",(0,r.jsx)(n.a,{href:"/docs/components/icons/@flexnative/icons-custom-icons",children:"Custom Icons"})," how to create and use your set of icons."]}),"\n",(0,r.jsxs)(n.admonition,{title:"CAUTION",type:"danger",children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"FlexNative Icons"})})," uses ",(0,r.jsx)(n.code,{children:"expo-font"})," from ",(0,r.jsx)(n.a,{href:"https://docs.expo.dev/develop/user-interface/fonts/",children:(0,r.jsx)(n.strong,{children:"Expo"})})," wich require ",(0,r.jsx)(n.code,{children:"expo"})," dependencies.\nIf you are using plain ",(0,r.jsx)(n.code,{children:"react-native"})," without expo you need to install ",(0,r.jsx)(n.code,{children:"react-native-unimodules"}),"."]}),(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://docs.expo.dev/bare/installing-expo-modules/?redirected",children:"Fallow this link"})})," to Migrating to Expo modules."]})]}),"\n","\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(i.A,{value:"app-file",label:"App",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="/src/app.jsx" showLineNumbers',children:"import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\n\n// highlight-start\nimport useCachedResources from './hooks/useCachedResources';\nimport Icon, { Spinner } from '@flexnative/icons';\n// highlight-end\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  \n  if (!isLoadingComplete) {\n    return null;\n  } else {\n      return (\n      <View style={styles.container}>\n        <StatusBar style=\"auto\" />\n        // highlight-start\n        <Icon name='sun' color='rgb(255, 174, 16)' size={32} />\n        <Spinner name='spinner' style={styles.spinner} />\n        // highlight-end\n      </View>\n      );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  spinner: {\n    fontSize: 32,\n    color: '#EF0003'\n  },\n  box: {\n    width: 50,\n    height: 50,\n  }\n});\n"})})}),(0,r.jsx)(i.A,{value:"useCachedResources-file",label:"useCachedResources",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="/src/hooks/useCachedResources.jsx" showLineNumbers',children:"// highlight-start\n/*\nExample of pre-loading and caching icons.\n(it is available for any custom font).\n*/\n// highlight-end\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\n\nexport default function useCachedResources() {\nconst [isLoadingComplete, setLoadingComplete] = useState(false);\n\nuseEffect(() => {\n  async function loadResourcesAndDataAsync() {\n    try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n        'icon': require('../assets/fonts/font-icon.ttf'),\n        });\n    } catch (e) {\n        console.error(e);\n    } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n    }\n  }\n\n  loadResourcesAndDataAsync();\n}, []);\n\nreturn isLoadingComplete;\n}\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"iconprops",children:"IconProps"}),"\n",(0,r.jsx)(n.p,{children:"Interface representing the properties for an icon component."}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Icon"})," and ",(0,r.jsx)(n.code,{children:"Spinner"})," components expects props of type ",(0,r.jsx)(n.code,{children:"IconProp"})," which extends ",(0,r.jsx)(n.a,{href:"https://reactnative.dev/docs/text#props",children:(0,r.jsx)(n.code,{children:"TextProps"})})," from ",(0,r.jsx)(n.strong,{children:"React Native"})]})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Default Value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"name"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#iconname",children:(0,r.jsx)(n.code,{children:"IconName"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"true"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"undefined"})}),(0,r.jsx)(n.td,{children:"Name of the icon to use (Specific to the chosen Icon Pack)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"size"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/flexnative/docs/theme/default-theme#fontsize",children:(0,r.jsx)(n.code,{children:"FontSize"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"false"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"theme.fontSize.default"})}),(0,r.jsx)(n.td,{children:"Icon size."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"color"}),(0,r.jsx)(n.td,{children:(0,r.jsxs)("code",{children:[(0,r.jsx)(n.a,{href:"/flexnative/docs/theme/default-theme#color",children:"BaseColors"})," | ",(0,r.jsx)(n.a,{href:"https://reactnative.dev/docs/colors",children:"ColorValue"})]})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"false"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"theme.colors.text"})}),(0,r.jsxs)(n.td,{children:["Icon color one of color used by ",(0,r.jsx)(n.a,{href:"/flexnative/docs/theme/default-theme#basecolors",children:(0,r.jsx)(n.code,{children:"BaseTheme<TColors>"})})," or given ",(0,r.jsx)(n.a,{href:"https://reactnative.dev/docs/colors",children:(0,r.jsx)(n.code,{children:"ColorValue"})})," by user."]})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"iconname",children:"IconName"}),"\n",(0,r.jsxs)(n.p,{children:["Interface representing the names of various icons.\nEach property is a readonly string representing a specific icon name.\nThese names can be used to access the corresponding Unicode value from the ",(0,r.jsx)(n.code,{children:"icons"})," object."]}),"\n",(0,r.jsx)(d,{}),"\n",(0,r.jsxs)(n.h2,{id:"using-icon-component",children:["Using ",(0,r.jsx)(n.code,{children:"Icon"})," component"]}),"\n",(0,r.jsxs)(n.p,{children:["Example ouf usecase with ",(0,r.jsx)(n.code,{children:"Icon"})," component."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import Icon from '@flexnative/icons';\n\n<Icon name='sun' color='rgb(255, 174, 16)' size={32} />\n"})}),"\n",(0,r.jsx)(n.h2,{id:"using-with-plain-text",children:"Using with Plain text"}),"\n",(0,r.jsxs)(n.p,{children:["You can use icons through ",(0,r.jsx)(n.strong,{children:"Icon"})," Component from ",(0,r.jsx)(n.code,{children:"@flexnative/icons"})," or as a usual text with ",(0,r.jsx)(n.strong,{children:"Text"})," component from ",(0,r.jsx)(n.code,{children:"react-native"})," as the following examples:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { StyleSheet, Text } from 'react-native';\n\n<Text style={styles.text}>{'\\u0053'}</Text>\n\nconst styles = StyleSheet.create({\n  text: {\n    fontFamily: 'icon',\n    color: 'rgb(255, 174, 16)',\n    fontSize: 32\n  }\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"spinner",children:"Spinner"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { Spinner } from '@flexnative/icons';\n\n<Spinner name='sun' color='rgb(255, 174, 16)' size={32} />\n"})})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},7227:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var s=t(34164);const r={tabItem:"tabItem_Ymn6"};var o=t(74848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,a),hidden:t,children:n})}},49489:(e,n,t)=>{t.d(n,{A:()=>w});var s=t(96540),r=t(34164),o=t(24245),a=t(56347),i=t(36494),c=t(62814),l=t(45167),d=t(69900);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:r}}=e;return{value:n,label:t,attributes:s,default:r}}))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const r=(0,a.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(o),(0,s.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=u(e),[a,c]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:o}))),[l,h]=x({queryString:t,groupId:r}),[m,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,d.Dv)(t);return[r,(0,s.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),j=(()=>{const e=l??m;return p({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{j&&c(j)}),[j]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),f(e)}),[h,f,o]),tabValues:o}}var f=t(11062);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(74848);function v(e){let{className:n,block:t,selectedValue:s,selectValue:a,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),r=i[t].value;r!==s&&(l(n),a(r))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...o,className:(0,r.A)("tabs__item",j.tabItem,o?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:o}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===o));return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function y(e){const n=m(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,g.jsx)(v,{...n,...e}),(0,g.jsx)(b,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,g.jsx)(y,{...e,children:h(e.children)},String(n))}},88065:(e,n,t)=>{t.d(n,{A:()=>o});var s=t(96540),r=t(74848);const o=class extends s.PureComponent{render(){return(0,r.jsx)("span",{className:"color-view",style:{backgroundColor:this.props.color.toString()}})}}},76449:(e,n,t)=>{t.d(n,{A:()=>i});var s=t(96540),r=t(94605),o=t(88065),a=t(74848);const i=class extends s.PureComponent{render(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("p",{children:["One of ",(0,a.jsx)("code",{children:"'default' | 'primary' | 'secondary' | 'info' | 'success' | 'warning' | 'error' | 'dark' | 'light' | ColorValue"})]}),(0,a.jsxs)("table",{children:[(0,a.jsxs)("thead",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{rowSpan:2,children:"Name"}),(0,a.jsx)("th",{rowSpan:2,children:" Type"}),(0,a.jsx)("th",{rowSpan:2,children:" Value"}),(0,a.jsx)("th",{colSpan:2,children:"Preview"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"Light"}),(0,a.jsx)("th",{children:"Dark"})]})]}),(0,a.jsxs)("tbody",{children:[Object.keys(r.light).map(((e,n)=>(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:e}),(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:`theme.colors.${e}`})}),(0,a.jsxs)("td",{children:[(0,a.jsx)(o.A,{color:r.light[e]})," ",(0,a.jsx)("code",{style:{marginLeft:15},children:r.light[e]})]}),(0,a.jsxs)("td",{children:[(0,a.jsx)(o.A,{color:r.dark[e]})," ",(0,a.jsx)("code",{style:{marginLeft:15},children:r.dark[e]})]})]},n))),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{}),(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})}),(0,a.jsxs)("td",{colSpan:3,children:["Any ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})," chosen by developer."]})]})]})]})]})}}}}]);