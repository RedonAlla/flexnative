"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[4885],{30107:e=>{e.exports=JSON.parse('{"tag":{"label":"React Native","permalink":"/flexnative/docs/tags/react-native","description":"Create native apps for Android, iOS, and more using React","allTagsPath":"/flexnative/docs/tags","count":40,"items":[{"id":"components/avatar/index","title":"Avatar","description":"Avatars can be used to represent people or objects. It supports images, Icons, or letters.","permalink":"/flexnative/docs/components/avatar/"},{"id":"components/badges/index","title":"Badges","description":"Small numerical value or status descriptor for UI elements.","permalink":"/flexnative/docs/components/badges/"},{"id":"components/icons/basic-usage","title":"Basic Usage","description":"To use a icon font, you have to make sure you import them into your project. Only after the font is loaded, you can use Icon set.","permalink":"/flexnative/docs/components/icons/basic-usage"},{"id":"components/bottom-sheet/index","title":"Bottom Sheet","description":"Bottom sheets are surfaces containing supplementary content, anchored to the bottom of the screen.","permalink":"/flexnative/docs/components/bottom-sheet/"},{"id":"components/buttons/index","title":"Buttons","description":"FlexNative Buttons package is part of FlexNative for React Native, it provides a clickable UI library and functionality.","permalink":"/flexnative/docs/components/buttons/"},{"id":"components/inputs/check-box/index","title":"Check Box","description":"The CheckBox is typically used to represent boolean values via a binary checked state.","permalink":"/flexnative/docs/components/inputs/check-box/"},{"id":"components/inputs/check-list/index","title":"Check List","description":"API","permalink":"/flexnative/docs/components/inputs/check-list/"},{"id":"components/components","title":"Components","description":"FlexNative provides a number of built-in Core Components ready for you to use in your app.","permalink":"/flexnative/docs/components/"},{"id":"theme/consuming-theme","title":"Consuming Themes","description":"This section show how to consume (use) theme colors for your components.","permalink":"/flexnative/docs/theme/consuming-theme"},{"id":"components/icons/custom-icons","title":"Custom Icons","description":"@flexnative/icons package uses custom icon fonts created based on a IcoMoon.","permalink":"/flexnative/docs/components/icons/custom-icons"},{"id":"theme/customizing-theme","title":"Customizing Themes","description":"BaseTheme object is where you define your application\'s color palette.","permalink":"/flexnative/docs/theme/customizing-theme"},{"id":"components/inputs/check-list/default","title":"Default","description":"The following examples demonstrates the FlexNative Check List in action.","permalink":"/flexnative/docs/components/inputs/check-list/default"},{"id":"components/inputs/numeric-text-box/default","title":"Default","description":"The following examples demonstrates the Numeric Text Boxes in action.","permalink":"/flexnative/docs/components/inputs/numeric-text-box/default"},{"id":"components/inputs/text-box/default","title":"Default","description":"The following examples demonstrates the Text Boxes in action.","permalink":"/flexnative/docs/components/inputs/text-box/default"},{"id":"theme/default-theme","title":"Default Theme","description":"First of all you need to install @flexnative/theme-context.","permalink":"/flexnative/docs/theme/default-theme"},{"id":"theme/examples","title":"Example","description":"Below example shows a full example how to extend ThemeProvider and implement setColorScheme method to support to dark mode","permalink":"/flexnative/docs/theme/examples"},{"id":"theme/extend-theme","title":"Extra Theme Colors","description":"If you need to customize the default theme by adding custom colors to match your design requirements,","permalink":"/flexnative/docs/theme/extend-theme"},{"id":"getting-started/getting_started","title":"Getting Started","description":"FlexNative is a component library that enables developers to build universal design systems.","permalink":"/flexnative/docs/getting-started/"},{"id":"components/avatar/group-avatar","title":"Group Avatar","description":"AvatarGroup is part of the @flexnative/avatar package.","permalink":"/flexnative/docs/components/avatar/group-avatar"},{"id":"components/avatar/single/icon-type","title":"Icon Type","description":"Avatar with icons.","permalink":"/flexnative/docs/components/avatar/single/icon-type"},{"id":"components/icons/index","title":"Icons","description":"FlexNative suite delivers more than  integrated font icons for its components.","permalink":"/flexnative/docs/components/icons/"},{"id":"components/avatar/single/image","title":"Image Type","description":"Avatar with images.","permalink":"/flexnative/docs/components/avatar/single/image"},{"id":"components/inputs/index","title":"Inputs","description":"FlexNative Inputs package is part of FlexNative for React Native, it provides a same base inputs UI library and functionality.","permalink":"/flexnative/docs/components/inputs/"},{"id":"getting-started/installation","title":"Installation","description":"FlexNative is a component library that enables developers to build universal design systems.","permalink":"/flexnative/docs/getting-started/installation"},{"id":"utilities/ra-local-storage","title":"Local Storage","description":"The Local Storage Packages is part of FlexNative, that provides an asynchronous, unencrypted, persistent, key-value storage API.","permalink":"/flexnative/docs/utilities/ra-local-storage"},{"id":"components/inputs/check-list/material","title":"Material","description":"The following examples demonstrates the FlexNative Check List in action.","permalink":"/flexnative/docs/components/inputs/check-list/material"},{"id":"components/inputs/numeric-text-box/material","title":"Material","description":"The following examples demonstrates the Numeric Text Boxes in action.","permalink":"/flexnative/docs/components/inputs/numeric-text-box/material"},{"id":"components/inputs/text-box/material","title":"Material","description":"The following examples demonstrates the Text Boxes in action.","permalink":"/flexnative/docs/components/inputs/text-box/material"},{"id":"components/inputs/numeric-text-box/index","title":"Numeric Text Box","description":"API","permalink":"/flexnative/docs/components/inputs/numeric-text-box/"},{"id":"getting-started/setup-ra-theme-provider","title":"Setup Theme Provider","description":"FlexNative ThemeProvider from FlexNative is a component that makes the theme available throughout your app.","permalink":"/flexnative/docs/getting-started/setup-ra-theme-provider"},{"id":"components/avatar/single/index","title":"Single Avatar","description":"API","permalink":"/flexnative/docs/components/avatar/single/"},{"id":"components/skeleton-loading/index","title":"Skeleton Loading","description":"The FlexNative Skeleton Loading is part of the FlexNative and is available under the @flexnative/skeleton-loading NPM package.","permalink":"/flexnative/docs/components/skeleton-loading/"},{"id":"components/spinner/index","title":"Spinner","description":"Spinner is part of the @flexnative/icons package.","permalink":"/flexnative/docs/components/spinner/"},{"id":"components/tags/index","title":"Tags","description":"The FlexNative Tags is part of the FlexNative and is available under the @flexnative/tags NPM package.","permalink":"/flexnative/docs/components/tags/"},{"id":"components/inputs/text-box/index","title":"Text Box","description":"API","permalink":"/flexnative/docs/components/inputs/text-box/"},{"id":"components/avatar/single/text-type","title":"Text Type","description":"Avatar with text.","permalink":"/flexnative/docs/components/avatar/single/text-type"},{"id":"theme/index","title":"Theme","description":"The FlexNative Theme Context is part of the FlexNative and is available under the @flexnative/theme-context NPM package.","permalink":"/flexnative/docs/theme/"},{"id":"utilities/ui-constants","title":"UI Constants","description":"ui-constants Packages is part of FlexNative, that provides core constants related with UI Components.","permalink":"/flexnative/docs/utilities/ui-constants"},{"id":"components/icons/examples","title":"Usecase Examples","description":"The following example demonstrates the Icons in action.","permalink":"/flexnative/docs/components/icons/examples"},{"id":"utilities/utilities-id","title":"Utilities","description":"FlexNative Utilities are part of FlexNatives framework witch provides some utilities methods.","permalink":"/flexnative/docs/utilities/"}],"unlisted":false}}')}}]);