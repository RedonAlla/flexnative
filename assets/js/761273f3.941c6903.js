"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[9778],{27773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var r=n(74848),a=n(28453),s=n(49489),o=n(7227);const l={sidebar_position:3,title:"Consuming Themes",last_update:{date:new Date("2024-09-24T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},i=void 0,c={id:"theme/consuming-theme",title:"Consuming Themes",description:"This section show how to consume (use) theme colors for your components.",source:"@site/docs/theme/consuming-theme.mdx",sourceDirName:"theme",slug:"/theme/consuming-theme",permalink:"/flexnative/docs/theme/consuming-theme",draft:!1,unlisted:!1,editUrl:"https://github.com/RedonAlla/flexnative/edit/main/docs/theme/consuming-theme.mdx",tags:[{inline:!1,label:"React",permalink:"/flexnative/docs/tags/react",description:"The library for web and native user interfaces."},{inline:!1,label:"React Native",permalink:"/flexnative/docs/tags/react-native",description:"Create native apps for Android, iOS, and more using React"},{inline:!1,label:"Expo",permalink:"/flexnative/docs/tags/expo",description:"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{inline:!1,label:"Framework",permalink:"/flexnative/docs/tags/framework",description:"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{inline:!1,label:"Component",permalink:"/flexnative/docs/tags/component",description:"Create user interfaces from components."}],version:"current",lastUpdatedAt:1727136e6,sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Consuming Themes",last_update:{date:"2024-09-24T00:00:00.000Z",author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},sidebar:"componentsSidebar",previous:{title:"Customizing Themes",permalink:"/flexnative/docs/theme/customizing-theme"},next:{title:"Extra Theme Colors",permalink:"/flexnative/docs/theme/extend-theme"}},u={},d=[];function m(e){const t={a:"a",code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["This section show how to consume (use) theme colors for your components.\r\nFor more details about ",(0,r.jsx)(t.em,{children:(0,r.jsx)(t.strong,{children:"React Context"})})," or how to consume ",(0,r.jsx)(t.em,{children:(0,r.jsx)(t.strong,{children:"React Context"})})," please read  this ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"https://reactjs.org/docs/context.html",children:"link"})}),"."]}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"function-component",label:"Function Component",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",metastring:"showLineNumbers",children:"import { Pressable, StyleSheet, Text } from 'react-native';\r\n// highlight-next-line\r\nimport { useThemeContext } from '@flexnative/theme-context';\r\n\r\nconst ThemedButton = React.memo((props) => {\r\n// highlight-next-line\r\nconst theme = useThemeContext();\r\nreturn (\r\n  <Pressable style={({pressed}) => [styles.wrapperCustom, { backgroundColor: pressed ? theme.dark : theme.primary }]}>\r\n    <Text style={styles.text}>{props.text}</Text>\r\n  </Pressable>\r\n);\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\ntext: {\r\n  fontSize: 16,\r\n},\r\nwrapperCustom: {\r\n  borderRadius: 8,\r\n  padding: 6,\r\n}\r\n});\n"})})}),(0,r.jsx)(o.A,{value:"class-component",label:"Class Component",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",metastring:"showLineNumbers",children:"import React from 'react';\r\nimport { Pressable, StyleSheet, Text } from 'react-native';\r\n// highlight-next-line\r\nimport ThemeContext from '@flexnative/theme-context';\r\n\r\nclass ThemedButton extends React.Component {\r\n  // highlight-start\r\n  static contextType = ThemeContext;\r\n  declare context: React.ContextType<typeof ThemeContext>;\r\n  // highlight-end\r\n\r\n  render() {\r\n    return (\r\n      <Pressable style={({pressed}) =>\r\n        [styles.wrapperCustom, { backgroundColor: pressed ? this.context.colors.dark : this.context.colors.primary }]}>\r\n        <Text style={styles.text}>{props.text}</Text>\r\n      </Pressable>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    fontSize: 16,\r\n  },\r\n  wrapperCustom: {\r\n    borderRadius: 8,\r\n    padding: 6,\r\n  }\r\n});\n"})})})]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},7227:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var r=n(34164);const a={tabItem:"tabItem_Ymn6"};var s=n(74848);function o(e){let{children:t,hidden:n,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,o),hidden:n,children:t})}},49489:(e,t,n)=>{n.d(t,{A:()=>T});var r=n(96540),a=n(34164),s=n(24245),o=n(56347),l=n(36494),i=n(62814),c=n(45167),u=n(69900);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=m(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[c,d]=p({queryString:n,groupId:a}),[f,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,u.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),x=(()=>{const e=c??f;return h({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{x&&i(x)}),[x]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=n(11062);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(74848);function v(e){let{className:t,block:n,selectedValue:r,selectValue:o,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const t=e.currentTarget,n=i.indexOf(t),a=l[n].value;a!==r&&(c(t),o(a))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>i.push(e),onKeyDown:d,onClick:u,...s,className:(0,a.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:s}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function w(e){const t=f(e);return(0,g.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,g.jsx)(v,{...t,...e}),(0,g.jsx)(y,{...t,...e})]})}function T(e){const t=(0,b.A)();return(0,g.jsx)(w,{...e,children:d(e.children)},String(t))}}}]);