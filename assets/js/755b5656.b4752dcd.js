"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[6002],{16786:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>s});var l=r(74848),t=r(28453);const s=[];function a(e){const n={a:"a",code:"code",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:e.name})," is part of the ",(0,l.jsx)(n.a,{href:"./",children:(0,l.jsx)(n.strong,{children:"@flexnative/inputs"})})," package.\r\nTo use the ",(0,l.jsx)(n.strong,{children:e.name})," you needs to install ",(0,l.jsx)(n.code,{children:"@flexnative/inputs"})," package.\r\n",(0,l.jsx)(n.a,{href:"../#installation",children:"Fallow this link"})," on how to install the package."]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},77580:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>de,contentTitle:()=>ie,default:()=>ue,frontMatter:()=>ae,metadata:()=>he,toc:()=>oe});var l=r(74848),t=r(28453),s=r(16786),a=r(54182),i=r(76449),h=r(85851),d=r(96540),o=r(84199);const c=class extends d.Component{constructor(e){super(e),this.state={check1:void 0,check2:void 0,check3:void 0},this.handleChangeCheck1=this.handleChangeCheck1.bind(this),this.handleChangeCheck2=this.handleChangeCheck2.bind(this),this.handleChangeCheck3=this.handleChangeCheck3.bind(this)}handleChangeCheck1(){this.state.check1?this.setState({check1:void 0}):this.setState({check1:{id:1,color:"red"}})}handleChangeCheck2(){this.state.check2?this.setState({check2:void 0}):this.setState({check2:"blue"})}handleChangeCheck3(){const e=!this.state.check3;this.setState({check3:e})}render(){return(0,l.jsxs)("div",{className:"example-block demo-column",children:[(0,l.jsxs)("div",{className:"demo-row",children:[(0,l.jsx)(o.Jl,{value:this.state.check1,onValueChange:this.handleChangeCheck1,label:"Object value"}),(0,l.jsx)(o.Jl,{value:this.state.check2,onValueChange:this.handleChangeCheck2,label:"String value"}),(0,l.jsx)(o.Jl,{value:this.state.check3,onValueChange:this.handleChangeCheck3,label:"Boolean value"})]}),(0,l.jsxs)("pre",{children:[(0,l.jsx)("b",{children:"Object value: "}),JSON.stringify(this.state.check1),"\n\n",(0,l.jsx)("b",{children:"String value: "}),JSON.stringify(this.state.check2),"\n\n",(0,l.jsx)("b",{children:"Boolean value: "}),JSON.stringify(this.state.check3)]})]})}},u="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:12:20\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:34:20\r\n * @ Description: Examples of Check component with different value types.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\ntype ValueType = {\r\n  id: number,\r\n  color: string;\r\n}\r\n\r\ntype StateType = {\r\n  check1?: ValueType,\r\n  check2?: string,\r\n  check3?: boolean,\r\n}\r\n\r\nexport default class extends React.Component<{}, StateType> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      check1: undefined,\r\n      check2: undefined,\r\n      check3: undefined\r\n    }\r\n    \r\n    this.handleChangeCheck1 = this.handleChangeCheck1.bind(this);\r\n    this.handleChangeCheck2 = this.handleChangeCheck2.bind(this);\r\n    this.handleChangeCheck3 = this.handleChangeCheck3.bind(this);\r\n  }\r\n\r\n  public handleChangeCheck1() {\r\n    const val = this.state.check1;\r\n\r\n    if(val)\r\n      this.setState({check1: undefined});\r\n    else\r\n      this.setState({check1: {id: 1, color: 'red'}});\r\n  }\r\n\r\n  public handleChangeCheck2() {\r\n    const val = this.state.check2;\r\n\r\n    if(val)\r\n      this.setState({check2: undefined});\r\n    else\r\n      this.setState({check2: 'blue'});\r\n  }\r\n\r\n  public handleChangeCheck3() {\r\n    const val = !this.state.check3;\r\n    this.setState({check3: val});\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block demo-column'>\r\n        <div className='demo-row'>\r\n          <Check value={this.state.check1} onValueChange={this.handleChangeCheck1} label='Object value' />\r\n          <Check value={this.state.check2} onValueChange={this.handleChangeCheck2} label='String value' />\r\n          <Check value={this.state.check3} onValueChange={this.handleChangeCheck3} label='Boolean value' />\r\n        </div>\r\n\r\n        <pre>\r\n          <b>Object value: </b>{JSON.stringify(this.state.check1)}{'\\n\\n'}\r\n          <b>String value: </b>{JSON.stringify(this.state.check2)}{'\\n\\n'}\r\n          <b>Boolean value: </b>{JSON.stringify(this.state.check3)}\r\n        </pre>\r\n      </div>\r\n    );\r\n  }\r\n}",x=class extends d.Component{constructor(e){super(e),this.handleChange=this.handleChange.bind(this)}handleChange(e){const n=this.state.items;n[e]=!n[e],this.setState({items:n})}},m=[!1,!1,!1,!1],p=class extends x{constructor(e){super(e),this.state={items:m}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),type:"outlined",label:"outlined"}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),type:"solid",label:"solid"}),(0,l.jsx)(o.Jl,{value:this.state.items[2],onValueChange:()=>this.handleChange(2),type:"inverse",label:"inverse"}),(0,l.jsx)(o.Jl,{value:this.state.items[3],onValueChange:()=>this.handleChange(3),type:"ghost",label:"ghost"})]})}},j="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:27:34\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:33:40\r\n * @ Description: Examples of Check component with different types.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} type='outlined' label='outlined' />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} type='solid' label='solid' />\r\n        <Check value={this.state.items![2]} onValueChange={() => this.handleChange(2)} type='inverse' label='inverse' />\r\n        <Check value={this.state.items![3]} onValueChange={() => this.handleChange(3)} type='ghost' label='ghost' />\r\n      </div>\r\n    );\r\n  }\r\n}",C=[!1,!1,!1,!1],g=class extends x{constructor(e){super(e),this.state={items:C}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),size:"small",label:"small"}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),size:"default",label:"solid"}),(0,l.jsx)(o.Jl,{value:this.state.items[2],onValueChange:()=>this.handleChange(2),size:"medium",label:"medium"}),(0,l.jsx)(o.Jl,{value:this.state.items[3],onValueChange:()=>this.handleChange(3),size:"large",label:"large"})]})}},b="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:31:47\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:33:21\r\n * @ Description: Examples of Check component with different sizes.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} size='small' label='small' />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} size='default' label='solid' />\r\n        <Check value={this.state.items![2]} onValueChange={() => this.handleChange(2)} size='medium' label='medium' />\r\n        <Check value={this.state.items![3]} onValueChange={() => this.handleChange(3)} size='large' label='large' />\r\n      </div>\r\n    );\r\n  }\r\n}",v=[!1,!1,!1,!1,!1,!1],f=class extends x{constructor(e){super(e),this.state={items:v}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),radius:"none",label:"none"}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),radius:"small",label:"small"}),(0,l.jsx)(o.Jl,{value:this.state.items[2],onValueChange:()=>this.handleChange(2),radius:"medium",label:"medium"}),(0,l.jsx)(o.Jl,{value:this.state.items[3],onValueChange:()=>this.handleChange(3),radius:"large",label:"large"}),(0,l.jsx)(o.Jl,{value:this.state.items[4],onValueChange:()=>this.handleChange(4),radius:"full",label:"full"}),(0,l.jsx)(o.Jl,{value:this.state.items[5],onValueChange:()=>this.handleChange(5),radius:5,label:"5"})]})}},k="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:35:08\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:32:18\r\n * @ Description: Examples of Check component with border radius.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} radius='none' label='none' />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} radius='small' label='small' />\r\n        <Check value={this.state.items![2]} onValueChange={() => this.handleChange(2)} radius='medium' label='medium' />\r\n        <Check value={this.state.items![3]} onValueChange={() => this.handleChange(3)} radius='large' label='large' />\r\n        <Check value={this.state.items![4]} onValueChange={() => this.handleChange(4)} radius='full' label='full' />\r\n        <Check value={this.state.items![5]} onValueChange={() => this.handleChange(5)} radius={5} label='5' />\r\n      </div>\r\n    );\r\n  }\r\n}",y=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],V=class extends x{constructor(e){super(e),this.state={items:y}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),color:"default",label:"default"}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),color:"primary",label:"primary"}),(0,l.jsx)(o.Jl,{value:this.state.items[2],onValueChange:()=>this.handleChange(2),color:"secondary",label:"secondary"}),(0,l.jsx)(o.Jl,{value:this.state.items[3],onValueChange:()=>this.handleChange(3),color:"light",label:"light"}),(0,l.jsx)(o.Jl,{value:this.state.items[4],onValueChange:()=>this.handleChange(4),color:"dark",label:"dark"}),(0,l.jsx)(o.Jl,{value:this.state.items[5],onValueChange:()=>this.handleChange(5),color:"info",label:"info"}),(0,l.jsx)(o.Jl,{value:this.state.items[6],onValueChange:()=>this.handleChange(6),color:"success",label:"success"}),(0,l.jsx)(o.Jl,{value:this.state.items[7],onValueChange:()=>this.handleChange(7),color:"warning",label:"warning"}),(0,l.jsx)(o.Jl,{value:this.state.items[8],onValueChange:()=>this.handleChange(8),color:"error",label:"error"}),(0,l.jsx)(o.Jl,{value:this.state.items[9],onValueChange:()=>this.handleChange(9),color:"crimson",label:"crimson"}),(0,l.jsx)(o.Jl,{value:this.state.items[10],onValueChange:()=>this.handleChange(10),color:"#ed143d",label:"#ed143d"}),(0,l.jsx)(o.Jl,{value:this.state.items[11],onValueChange:()=>this.handleChange(11),color:"rgb(237, 20, 61)",label:"rgb(237, 20, 61)"}),(0,l.jsx)(o.Jl,{value:this.state.items[12],onValueChange:()=>this.handleChange(12),color:"rgba(237, 20, 61, 0.5)",label:"rgba(237, 20, 61, 0.5)"})]})}},E="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:37:38\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:26:38\r\n * @ Description: Examples of Check component with different colors.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} color='default' label='default' />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} color='primary' label='primary' />\r\n        <Check value={this.state.items![2]} onValueChange={() => this.handleChange(2)} color='secondary' label='secondary' />\r\n        <Check value={this.state.items![3]} onValueChange={() => this.handleChange(3)} color='light' label='light' />\r\n        <Check value={this.state.items![4]} onValueChange={() => this.handleChange(4)} color='dark' label='dark' />\r\n        <Check value={this.state.items![5]} onValueChange={() => this.handleChange(5)} color='info' label='info' />\r\n        <Check value={this.state.items![6]} onValueChange={() => this.handleChange(6)} color='success' label='success' />\r\n        <Check value={this.state.items![7]} onValueChange={() => this.handleChange(7)} color='warning' label='warning' />\r\n        <Check value={this.state.items![8]} onValueChange={() => this.handleChange(8)} color='error' label='error'/>\r\n        <Check value={this.state.items![9]} onValueChange={() => this.handleChange(9)} color='crimson' label='crimson' />\r\n        <Check value={this.state.items![10]} onValueChange={() => this.handleChange(10)} color='#ed143d' label='#ed143d'/>\r\n        <Check value={this.state.items![11]} onValueChange={() => this.handleChange(11)} color='rgb(237, 20, 61)' label='rgb(237, 20, 61)' />\r\n        <Check value={this.state.items![12]} onValueChange={() => this.handleChange(12)} color='rgba(237, 20, 61, 0.5)' label='rgba(237, 20, 61, 0.5)' />\r\n      </div>\r\n    );\r\n  }\r\n}",A=[!1,!1,!1,!1,!1,!1],S=class extends x{constructor(e){super(e),this.state={items:A}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),type:"outlined",borderWidth:"none",label:"none (default)"}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),type:"outlined",borderWidth:"hairline",label:"hairline"}),(0,l.jsx)(o.Jl,{value:this.state.items[2],onValueChange:()=>this.handleChange(2),type:"outlined",borderWidth:"thin",label:"thin"}),(0,l.jsx)(o.Jl,{value:this.state.items[3],onValueChange:()=>this.handleChange(3),type:"outlined",borderWidth:"base",label:"base"}),(0,l.jsx)(o.Jl,{value:this.state.items[4],onValueChange:()=>this.handleChange(4),type:"outlined",borderWidth:"thick",label:"thick"}),(0,l.jsx)(o.Jl,{value:this.state.items[5],onValueChange:()=>this.handleChange(5),type:"outlined",borderWidth:3,label:"3"})]})}},T="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:40:39\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:24:55\r\n * @ Description: Examples of Check component with borders width.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} type='outlined' borderWidth='none' label='none (default)' />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} type='outlined' borderWidth='hairline' label='hairline' />\r\n        <Check value={this.state.items![2]} onValueChange={() => this.handleChange(2)} type='outlined' borderWidth='thin' label='thin' />\r\n        <Check value={this.state.items![3]} onValueChange={() => this.handleChange(3)} type='outlined' borderWidth='base' label='base' />\r\n        <Check value={this.state.items![4]} onValueChange={() => this.handleChange(4)} type='outlined' borderWidth='thick' label='thick' />\r\n        <Check value={this.state.items![5]} onValueChange={() => this.handleChange(5)} type='outlined' borderWidth={3} label='3' />\r\n      </div>\r\n    );\r\n  }\r\n}",R=[!1,!1,!1,!1],w=class extends x{constructor(e){super(e),this.state={items:R}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),type:"outlined",borderColor:"crimson",label:"crimson"}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),type:"outlined",borderColor:"rgb(237, 20, 61)",label:"rgb(237, 20, 61)"}),(0,l.jsx)(o.Jl,{value:this.state.items[2],onValueChange:()=>this.handleChange(2),type:"outlined",borderColor:"rgba(237, 20, 61, 0.5)",label:"rgba(237, 20, 61, 0.5)"}),(0,l.jsx)(o.Jl,{value:this.state.items[3],onValueChange:()=>this.handleChange(3),type:"outlined",borderColor:"#ed143d",label:"#ed143d"})]})}},J="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:45:16\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:24:43\r\n * @ Description: Examples of Check component with borders color.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} type='outlined' borderColor='crimson' label='crimson' />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} type='outlined' borderColor='rgb(237, 20, 61)' label='rgb(237, 20, 61)' />\r\n        <Check value={this.state.items![2]} onValueChange={() => this.handleChange(2)} type='outlined' borderColor='rgba(237, 20, 61, 0.5)' label='rgba(237, 20, 61, 0.5)' />\r\n        <Check value={this.state.items![3]} onValueChange={() => this.handleChange(3)} type='outlined' borderColor='#ed143d' label='#ed143d' />\r\n      </div>\r\n    );\r\n  }\r\n}",N=[!1,!1,!1,!1],B=class extends x{constructor(e){super(e),this.state={items:N}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),type:"outlined",checkedBorderColor:"crimson",label:"crimson"}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),type:"outlined",checkedBorderColor:"rgb(237, 20, 61)",label:"rgb(237, 20, 61)"}),(0,l.jsx)(o.Jl,{value:this.state.items[2],onValueChange:()=>this.handleChange(2),type:"outlined",checkedBorderColor:"rgba(237, 20, 61, 0.5)",label:"rgba(237, 20, 61, 0.5)"}),(0,l.jsx)(o.Jl,{value:this.state.items[3],onValueChange:()=>this.handleChange(3),type:"outlined",checkedBorderColor:"#ed143d",label:"#ed143d"})]})}},z="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:49:24\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:26:14\r\n * @ Description: Examples of Check component with borders color when it is in check state.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} type='outlined' checkedBorderColor='crimson' label='crimson' />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} type='outlined' checkedBorderColor='rgb(237, 20, 61)' label='rgb(237, 20, 61)' />\r\n        <Check value={this.state.items![2]} onValueChange={() => this.handleChange(2)} type='outlined' checkedBorderColor='rgba(237, 20, 61, 0.5)' label='rgba(237, 20, 61, 0.5)' />\r\n        <Check value={this.state.items![3]} onValueChange={() => this.handleChange(3)} type='outlined' checkedBorderColor='#ed143d' label='#ed143d' />\r\n      </div>\r\n    );\r\n  }\r\n}",O=[!1,!1,!1,!1,!1,!1],M=class extends x{constructor(e){super(e),this.state={items:O}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:!0,type:"outlined",label:"outlined",disabled:!0}),(0,l.jsx)(o.Jl,{value:!1,type:"outlined",label:"outlined",disabled:!0}),(0,l.jsx)(o.Jl,{value:!0,type:"solid",label:"solid",disabled:!0}),(0,l.jsx)(o.Jl,{value:!1,type:"solid",label:"solid",disabled:!0}),(0,l.jsx)(o.Jl,{value:!0,type:"inverse",label:"inverse",disabled:!0}),(0,l.jsx)(o.Jl,{value:!1,type:"inverse",label:"inverse",disabled:!0})]})}},_="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:52:35\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:27:17\r\n * @ Description: Examples of Check component in disabled state.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n  false\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={true} type='outlined' label='outlined' disabled />\r\n        <Check value={false} type='outlined' label='outlined' disabled />\r\n        \r\n        <Check value={true} type='solid' label='solid' disabled />\r\n        <Check value={false} type='solid' label='solid' disabled />\r\n\r\n        <Check value={true} type='inverse' label='inverse' disabled />\r\n        <Check value={false} type='inverse' label='inverse' disabled />\r\n      </div>\r\n    );\r\n  }\r\n}",P=[!1,!1,!1,!1],D=class extends x{constructor(e){super(e),this.state={items:P}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),backgroundColor:"crimson",label:"crimson"}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),backgroundColor:"rgb(237, 20, 61)",label:"rgb(237, 20, 61)"}),(0,l.jsx)(o.Jl,{value:this.state.items[2],onValueChange:()=>this.handleChange(2),backgroundColor:"rgba(237, 20, 61, 0.5)",label:"rgba(237, 20, 61, 0.5)"}),(0,l.jsx)(o.Jl,{value:this.state.items[3],onValueChange:()=>this.handleChange(3),backgroundColor:"#ed143d",label:"#ed143d"})]})}},I="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-12 23:58:42\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:24:34\r\n * @ Description: Examples of Check component with background color.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} backgroundColor='crimson' label='crimson' />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} backgroundColor='rgb(237, 20, 61)' label='rgb(237, 20, 61)' />\r\n        <Check value={this.state.items![2]} onValueChange={() => this.handleChange(2)} backgroundColor='rgba(237, 20, 61, 0.5)' label='rgba(237, 20, 61, 0.5)' />\r\n        <Check value={this.state.items![3]} onValueChange={() => this.handleChange(3)} backgroundColor='#ed143d' label='#ed143d' />\r\n      </div>\r\n    );\r\n  }\r\n}",W=[!1,!1,!1,!1],F=class extends x{constructor(e){super(e),this.state={items:W}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),checkedBackgroundColor:"crimson",label:"crimson"}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),checkedBackgroundColor:"rgb(237, 20, 61)",label:"rgb(237, 20, 61)"}),(0,l.jsx)(o.Jl,{value:this.state.items[2],onValueChange:()=>this.handleChange(2),checkedBackgroundColor:"rgba(237, 20, 61, 0.5)",label:"rgba(237, 20, 61, 0.5)"}),(0,l.jsx)(o.Jl,{value:this.state.items[3],onValueChange:()=>this.handleChange(3),checkedBackgroundColor:"#ed143d",label:"#ed143d"})]})}},L="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-13 00:03:57\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:25:42\r\n * @ Description: Examples of Check component with background color when it is in check state.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} checkedBackgroundColor='crimson' label='crimson' />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} checkedBackgroundColor='rgb(237, 20, 61)' label='rgb(237, 20, 61)' />\r\n        <Check value={this.state.items![2]} onValueChange={() => this.handleChange(2)} checkedBackgroundColor='rgba(237, 20, 61, 0.5)' label='rgba(237, 20, 61, 0.5)' />\r\n        <Check value={this.state.items![3]} onValueChange={() => this.handleChange(3)} checkedBackgroundColor='#ed143d' label='#ed143d' />\r\n      </div>\r\n    );\r\n  }\r\n}";var Z=r(71582),U=r(32533);const Y=[!1,!1,!1,!1],q=class extends x{constructor(e){super(e),this.state={items:Y}}render(){return(0,l.jsxs)("div",{className:"example-block",children:[(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),label:(0,l.jsx)(H,{})}),(0,l.jsx)(o.Jl,{value:this.state.items[1],onValueChange:()=>this.handleChange(1),label:"labelStyles",labelStyle:K("rgb(35, 189, 224)","crimson")})]})}};function H(){return(0,l.jsxs)(Z.EY,{style:$.label,children:[(0,l.jsx)(U.default,{name:"avatar",style:{paddingLeft:5},onPress:()=>"web"===Z.OD.OS?alert("Custom Element as label"):Z.Fc.alert("Alert Title","Custom Element as label",[{text:"OK"}])})," Custom Element Label"]})}const K=(e,n)=>r=>[{color:r.focused?n:e}],$=Z.vv.create({label:{color:"crimson"}}),G="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-13 00:08:46\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:29:06\r\n * @ Description: Examples of Check component with custom label element.\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Alert, ColorValue, Platform, StyleProp, StyleSheet, Text, TextStyle } from \"react-native\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check, StateCallbackType } from '@flexnative/inputs';\r\nimport Icon from \"@flexnative/icons\";\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]} onValueChange={() => this.handleChange(0)} label={<Label />} />\r\n        <Check value={this.state.items![1]} onValueChange={() => this.handleChange(1)} label='labelStyles' labelStyle={labelStyles('rgb(35, 189, 224)', 'crimson')} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Label() {\r\n  const openAlert = () =>\r\n    Platform.OS === 'web'\r\n      ? alert('Custom Element as label')\r\n      : Alert.alert('Alert Title', 'Custom Element as label', [\r\n          {text: 'OK'},\r\n        ]);\r\n    \r\n  return <Text style={styles.label}>\r\n    <Icon name=\"avatar\" style={{paddingLeft: 5}} onPress={openAlert} /> Custom Element Label\r\n  </Text>;\r\n}\r\n\r\nconst labelStyles = (defaultColor: ColorValue, activeColor: ColorValue) => {\r\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\r\n    return [\r\n      {\r\n        color: state.focused ? activeColor : defaultColor\r\n      }\r\n    ]\r\n  }\r\n} \r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: 'crimson'\r\n  },\r\n});",Q=[!1,!1,!1,!1],X=class extends x{constructor(e){super(e),this.state={items:Q}}render(){return(0,l.jsx)("div",{className:"example-block",children:(0,l.jsx)(o.Jl,{value:this.state.items[0],onValueChange:()=>this.handleChange(0),label:"Custom Check Element",checkElement:(0,l.jsx)(ee,{}),unCheckElement:(0,l.jsx)(ne,{})})})}};function ee(){return(0,l.jsx)(Z.EY,{style:re.label,children:"\ud83d\ude0d"})}function ne(){return(0,l.jsx)(Z.EY,{style:re.label,children:"\ud83e\udd14"})}const re=Z.vv.create({label:{fontSize:32}}),le="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-13 00:11:15\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:27:02\r\n * @ Description: Examples of Check component with custom element check.\r\n */\r\n\r\nimport React from \"react\";\r\nimport { StyleSheet, Text } from \"react-native\";\r\nimport ExampleContainer from \"./ExampleContainer\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\nconst items: Array<boolean> = [\r\n  false,\r\n  false,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport default class extends ExampleContainer {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: items\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block'>\r\n        <Check value={this.state.items![0]}\r\n              onValueChange={() => this.handleChange(0)}\r\n              label='Custom Check Element'\r\n              checkElement={<CheckElement />}\r\n              unCheckElement={<UncheckElement />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CheckElement() {\r\n  return <Text style={styles.label}>\ud83d\ude0d</Text>;\r\n}\r\nfunction UncheckElement() {\r\n  return <Text style={styles.label}>\ud83e\udd14</Text>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    fontSize: 32\r\n  },\r\n});",te=class extends d.Component{constructor(e){super(e),this.state={value:{id:1,color:"red"}},this.handleChange=this.handleChange.bind(this)}handleChange(e){this.setState({value:e})}render(){return(0,l.jsxs)("div",{className:"example-block demo-column",children:[(0,l.jsxs)("div",{className:"demo-row",children:[(0,l.jsx)(o.Jl,{value:1===this.state.value?.id,onValueChange:()=>this.handleChange({id:1,color:"red"}),label:"Color red"}),(0,l.jsx)(o.Jl,{value:2===this.state.value?.id,onValueChange:()=>this.handleChange({id:2,color:"blue"}),label:"Color blue"}),(0,l.jsx)(o.Jl,{value:3===this.state.value?.id,onValueChange:()=>this.handleChange({id:3,color:"green"}),label:"Color green"})]}),(0,l.jsx)("pre",{children:JSON.stringify(this.state.value)})]})}},se="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-13 00:20:21\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:30:10\r\n * @ Description: Examples of Check component used as Radio Button.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n// highlight-next-line\r\nimport { Check } from '@flexnative/inputs';\r\n\r\n\r\ntype ValueType = {\r\n  id: number,\r\n  color: string;\r\n}\r\n\r\ntype StateType = {\r\n  value?: ValueType\r\n}\r\nexport default class extends React.Component<{}, StateType> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: { id: 1, color: 'red'}\r\n    }\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  public handleChange(value?: ValueType) {\r\n    this.setState({value});\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='example-block demo-column'>\r\n        <div className='demo-row'>\r\n          <Check value={this.state.value?.id === 1} onValueChange={() => this.handleChange({id: 1, color: 'red'})} label='Color red' />\r\n          <Check value={this.state.value?.id === 2} onValueChange={() => this.handleChange({id: 2, color: 'blue'})} label='Color blue' />\r\n          <Check value={this.state.value?.id === 3} onValueChange={() => this.handleChange({id: 3, color: 'green'})} label='Color green' />\r\n        </div>\r\n\r\n        <pre>\r\n          {JSON.stringify(this.state.value)}\r\n        </pre>\r\n      </div>\r\n    );\r\n  }\r\n}",ae={title:"Check Box",last_update:{date:new Date("2024-09-24T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},ie=void 0,he={id:"components/inputs/check-box/index",title:"Check Box",description:"The CheckBox is typically used to represent boolean values via a binary checked state.",source:"@site/docs/components/inputs/check-box/index.mdx",sourceDirName:"components/inputs/check-box",slug:"/components/inputs/check-box/",permalink:"/flexnative/docs/components/inputs/check-box/",draft:!1,unlisted:!1,editUrl:"https://github.com/RedonAlla/flexnative/edit/main/docs/components/inputs/check-box/index.mdx",tags:[{inline:!1,label:"React",permalink:"/flexnative/docs/tags/react",description:"The library for web and native user interfaces."},{inline:!1,label:"React Native",permalink:"/flexnative/docs/tags/react-native",description:"Create native apps for Android, iOS, and more using React"},{inline:!1,label:"Expo",permalink:"/flexnative/docs/tags/expo",description:"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{inline:!1,label:"Framework",permalink:"/flexnative/docs/tags/framework",description:"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{inline:!1,label:"Component",permalink:"/flexnative/docs/tags/component",description:"Create user interfaces from components."}],version:"current",lastUpdatedAt:1727136e6,frontMatter:{title:"Check Box",last_update:{date:"2024-09-24T00:00:00.000Z",author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},sidebar:"componentsSidebar",previous:{title:"Inputs",permalink:"/flexnative/docs/components/inputs/"},next:{title:"Check List",permalink:"/flexnative/docs/components/inputs/check-list/"}},de={},oe=[...s.RM,{value:"API",id:"api",level:2},{value:"Component",id:"component",level:2},{value:"Properties",id:"properties",level:2},{value:"CheckType",id:"checktype",level:3},{value:"Sizes",id:"sizes",level:3},{value:"BorderRadius",id:"borderradius",level:3},{value:"BorderWidth",id:"borderwidth",level:3},{value:"InputColor",id:"inputcolor",level:3},{value:"CheckboxEvent&lt;T&gt;",id:"checkboxeventt",level:3},{value:"Usecase Examples",id:"usecase-examples",level:2},{value:"Value",id:"value",level:3},{value:"Type",id:"type",level:3},{value:"Sizes",id:"sizes-1",level:3},{value:"Radius",id:"radius",level:3},{value:"Colors",id:"colors",level:3},{value:"Border Width",id:"border-width",level:3},{value:"Border Colors",id:"border-colors",level:3},{value:"Checked Border Colors",id:"checked-border-colors",level:3},{value:"Disabled",id:"disabled",level:3},{value:"Background Color",id:"background-color",level:3},{value:"Checked Background Color",id:"checked-background-color",level:3},{value:"Label",id:"label",level:3},{value:"Custom Check Element",id:"custom-check-element",level:3},{value:"Using as Radio Button",id:"using-as-radio-button",level:3},{value:"Playground",id:"playground",level:2}];function ce(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"The CheckBox is typically used to represent boolean values via a binary checked state."}),"\n",(0,l.jsx)(s.Ay,{name:"FlexNative Checkbox"}),"\n",(0,l.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",children:"import { Check, CheckProps } from '@flexnative/inputs';\n"})}),"\n",(0,l.jsx)(n.h2,{id:"component",children:"Component"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check"})}),"\n",(0,l.jsxs)(n.p,{children:["Type: ",(0,l.jsxs)("code",{children:["React.PureComponent<",(0,l.jsx)(n.a,{href:"#properties",children:"CheckProps<T>"}),">"]})]}),"\n",(0,l.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Required"}),(0,l.jsx)(n.th,{children:"Default Value"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"value"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"T"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:"Representing checkbox selected value."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"type"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"#checktype",children:(0,l.jsx)(n.code,{children:"CheckType"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"inverse "})}),(0,l.jsxs)(n.td,{children:["Check box fill mode. ",(0,l.jsxs)(a.A,{type:"warning",children:["To have appearance for ",(0,l.jsx)("code",{children:"'text'"}),", ",(0,l.jsx)("code",{children:"'link'"}),", ",(0,l.jsx)("code",{children:"'ghost'"}),", with custom color you should use hex colors."]})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"size"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"#sizes",children:(0,l.jsx)(n.code,{children:"Sizes"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"normal"})}),(0,l.jsx)(n.td,{children:"Check Box size."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"radius"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"#borderradius",children:(0,l.jsx)(n.code,{children:"BorderRadius"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"medium"})}),(0,l.jsx)(n.td,{children:"Check Box border radius."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"borderWidth"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"#borderwidth",children:(0,l.jsx)(n.code,{children:"BorderWidth"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"hairline"})}),(0,l.jsx)(n.td,{children:"Check Box borders width."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"borderColor"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://reactnative.dev/docs/colors",children:(0,l.jsx)(n.code,{children:"ColorValue"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsxs)(n.td,{children:["Borders color according ",(0,l.jsx)(n.code,{children:"react-native"})," ColorValue."]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"checkedBorderColor"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://reactnative.dev/docs/colors",children:(0,l.jsx)(n.code,{children:"ColorValue"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsxs)(n.td,{children:["Borders color according ",(0,l.jsx)(n.code,{children:"react-native"})," ColorValue."]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"disabled"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"false"})}),(0,l.jsx)(n.td,{children:"Indicator if input it is disabled or not."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"color"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"#inputcolor",children:(0,l.jsx)(n.code,{children:"InputColor"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"theme.color.default"})}),(0,l.jsxs)(n.td,{children:["Color by theme or a custom color according ",(0,l.jsx)(n.code,{children:"react-native"})," ColorValue."]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"backgroundColor"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://reactnative.dev/docs/colors",children:(0,l.jsx)(n.code,{children:"ColorValue"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:"Input background color."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"checkedBackgroundColor"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://reactnative.dev/docs/colors",children:(0,l.jsx)(n.code,{children:"ColorValue"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsxs)(n.td,{children:["Background color for active state according ",(0,l.jsx)(n.code,{children:"react-native"})," ColorValue."]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"label"}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"string"})," or ",(0,l.jsx)(n.a,{href:"https://legacy.reactjs.org/blog/2014/10/14/introducing-react-elements.html",children:(0,l.jsx)(n.code,{children:"React.ReactElement"})})]}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsxs)(n.td,{children:["A ",(0,l.jsx)(n.code,{children:"string"})," value to display as labal, or ",(0,l.jsx)(n.a,{href:"https://legacy.reactjs.org/blog/2014/10/14/introducing-react-elements.html",children:(0,l.jsx)(n.code,{children:"React.ReactElement"})})," to display a custom element as a label."]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"labelStyle"}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"StyleProp<TextStyle>"})," or ",(0,l.jsx)(n.code,{children:"((state: StateCallbackType) => StyleProp<TextStyle>)"})]}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:"Either text styles or a function that receives a boolean reflecting whether the component is currently active and returns text styles."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"checkElement"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://legacy.reactjs.org/blog/2014/10/14/introducing-react-elements.html",children:(0,l.jsx)(n.code,{children:"React.ReactElement"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:"Custom element to display on checked status."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"unCheckElement"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://legacy.reactjs.org/blog/2014/10/14/introducing-react-elements.html",children:(0,l.jsx)(n.code,{children:"React.ReactElement"})})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:"Custom element to display on unchecked status."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"onChange"}),(0,l.jsx)(n.td,{children:(0,l.jsxs)("code",{children:["(event: NativeSyntheticEvent<",(0,l.jsx)(n.a,{href:"#checkboxeventt",children:"CheckboxEvent"}),"<T> \u2758 SyntheticEvent<HTMLInputElement, <",(0,l.jsx)(n.a,{href:"#checkboxeventt",children:"CheckboxEvent"}),"<T>>) => void;"]})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:"Callback that is invoked when the user presses the checkbox."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"onValueChange"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"(value: T) => void"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:"Callback that is invoked when the user presses the checkbox."})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"checktype",children:"CheckType"}),"\n",(0,l.jsxs)(n.p,{children:["One of ",(0,l.jsx)(n.code,{children:"'outlined' | 'solid' | 'inverse'"})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"outlined"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{children:"Property to set checkbox with transparent background with borders."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"solid"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{children:"Property to fill in solid mode the background color of the checkbox component."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"inverse"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{children:"Property to set transparent background of the checkbox component and with solid background on check state."})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"sizes",children:"Sizes"}),"\n",(0,l.jsxs)(n.p,{children:["One of ",(0,l.jsx)(n.code,{children:"'small' | 'default' | 'medium' | 'large'"})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Value"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"small"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsxs)(n.td,{children:["Text size: ",(0,l.jsx)(n.a,{href:"/docs/utilities/ui-constants#font_size",children:"FONT_SIZE"}),".small ",(0,l.jsx)("br",{}),"CheckBox size: ",(0,l.jsx)(n.a,{href:"/docs/utilities/ui-constants#font_size",children:"FONT_SIZE"}),".small * 1.5"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"default"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsxs)(n.td,{children:["Fonts size: ",(0,l.jsx)(n.a,{href:"/docs/utilities/ui-constants#font_size",children:"FONT_SIZE"}),".default ",(0,l.jsx)("br",{}),"Icon size: ",(0,l.jsx)(n.a,{href:"/docs/utilities/ui-constants#font_size",children:"FONT_SIZE"}),".default * 1.5"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"medium"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsxs)(n.td,{children:["Fonts size: ",(0,l.jsx)(n.a,{href:"/docs/utilities/ui-constants#font_size",children:"FONT_SIZE"}),".medium ",(0,l.jsx)("br",{}),"Icon size: ",(0,l.jsx)(n.a,{href:"/docs/utilities/ui-constants#font_size",children:"FONT_SIZE"}),".medium * 1.5"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"large"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsxs)(n.td,{children:["Fonts size: ",(0,l.jsx)(n.a,{href:"/docs/utilities/ui-constants#font_size",children:"FONT_SIZE"}),".large ",(0,l.jsx)("br",{}),"Icon size: ",(0,l.jsx)(n.a,{href:"/docs/utilities/ui-constants#font_size",children:"FONT_SIZE"}),".large * 1.5"]})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"borderradius",children:"BorderRadius"}),"\n",(0,l.jsxs)(n.p,{children:["One of ",(0,l.jsx)(n.code,{children:"'none' | 'small' | 'medium' | 'large' | 'full' | number"})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Value"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"none"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"0"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"small"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"2"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"medium"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"4"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"large"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"6"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"full"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"99999"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"Any number value."})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"borderwidth",children:"BorderWidth"}),"\n",(0,l.jsxs)(n.p,{children:["One of ",(0,l.jsx)(n.code,{children:"'none' | 'hairline' | 'thin' | 'base' | 'thick' | number"})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Value"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"none"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"0"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"hairline"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://reactnative.dev/docs/stylesheet#hairlinewidth",children:(0,l.jsx)(n.code,{children:"StyleSheet.hairlineWidth"})})}),(0,l.jsx)(n.td,{children:"This is defined as the width of a thin line on the platform. It can be used as the thickness of a border or division between two elements."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"thin"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"1"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"base"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"2"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"thick"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"3"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{children:"Any number value"})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"inputcolor",children:"InputColor"}),"\n",(0,l.jsx)(i.A,{}),"\n",(0,l.jsx)(n.h3,{id:"checkboxeventt",children:"CheckboxEvent<T>"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Required"}),(0,l.jsx)(n.th,{children:"Default Value"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"value"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"T"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:"A value representing current checkbox value."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"target"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"any"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.strong,{children:"false"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsxs)(n.td,{children:["On native platforms, a ",(0,l.jsx)(n.code,{children:"NodeHandle"})," for the element on which the event has occurred. On web, a DOM node on which the event has occurred."]})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"usecase-examples",children:"Usecase Examples"}),"\n",(0,l.jsxs)(n.p,{children:["The following example demonstrates the ",(0,l.jsx)(n.strong,{children:"FlexNative CheckBox"})," in action."]}),"\n",(0,l.jsx)(n.h3,{id:"value",children:"Value"}),"\n",(0,l.jsx)(h.A,{codeExample:u,children:(0,l.jsx)(c,{})}),"\n",(0,l.jsx)(n.h3,{id:"type",children:"Type"}),"\n",(0,l.jsx)(h.A,{codeExample:j,children:(0,l.jsx)(p,{})}),"\n",(0,l.jsx)(n.h3,{id:"sizes-1",children:"Sizes"}),"\n",(0,l.jsx)(h.A,{codeExample:b,children:(0,l.jsx)(g,{})}),"\n",(0,l.jsx)(n.h3,{id:"radius",children:"Radius"}),"\n",(0,l.jsx)(h.A,{codeExample:k,children:(0,l.jsx)(f,{})}),"\n",(0,l.jsx)(n.h3,{id:"colors",children:"Colors"}),"\n",(0,l.jsx)(h.A,{codeExample:E,children:(0,l.jsx)(V,{})}),"\n",(0,l.jsx)(n.h3,{id:"border-width",children:"Border Width"}),"\n",(0,l.jsx)(h.A,{codeExample:T,children:(0,l.jsx)(S,{})}),"\n",(0,l.jsx)(n.h3,{id:"border-colors",children:"Border Colors"}),"\n",(0,l.jsx)(h.A,{codeExample:J,children:(0,l.jsx)(w,{})}),"\n",(0,l.jsx)(n.h3,{id:"checked-border-colors",children:"Checked Border Colors"}),"\n",(0,l.jsx)(h.A,{codeExample:z,children:(0,l.jsx)(B,{})}),"\n",(0,l.jsx)(n.h3,{id:"disabled",children:"Disabled"}),"\n",(0,l.jsx)(h.A,{codeExample:_,children:(0,l.jsx)(M,{})}),"\n",(0,l.jsx)(n.h3,{id:"background-color",children:"Background Color"}),"\n",(0,l.jsx)(h.A,{codeExample:I,children:(0,l.jsx)(D,{})}),"\n",(0,l.jsx)(n.h3,{id:"checked-background-color",children:"Checked Background Color"}),"\n",(0,l.jsx)(h.A,{codeExample:L,children:(0,l.jsx)(F,{})}),"\n",(0,l.jsx)(n.h3,{id:"label",children:"Label"}),"\n",(0,l.jsx)(h.A,{codeExample:G,children:(0,l.jsx)(q,{})}),"\n",(0,l.jsx)(n.h3,{id:"custom-check-element",children:"Custom Check Element"}),"\n",(0,l.jsx)(h.A,{codeExample:le,children:(0,l.jsx)(X,{})}),"\n",(0,l.jsx)(n.h3,{id:"using-as-radio-button",children:"Using as Radio Button"}),"\n",(0,l.jsx)(h.A,{codeExample:se,children:(0,l.jsx)(te,{})}),"\n",(0,l.jsx)(n.h2,{id:"playground",children:"Playground"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"//Play with props to see live changes;\r\n\r\nfunction CheckPlayground() {\r\n  const [value, setValue] = useState(true);\r\n\r\n  return (\r\n    <Check value={value}\r\n          label='Try check box'\r\n          type='inverse'\r\n          size='large'\r\n          radius='large'\r\n          color='primary'\r\n          borderWidth='thick'\r\n          onValueChange={() => setValue(!value)}\r\n    />\r\n  );\r\n}\r\n\r\nrender(<CheckPlayground />);\n"})})]})}function ue(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(ce,{...e})}):ce(e)}},88065:(e,n,r)=>{r.d(n,{A:()=>s});var l=r(96540),t=r(74848);const s=class extends l.PureComponent{render(){return(0,t.jsx)("span",{className:"color-view",style:{backgroundColor:this.props.color.toString()}})}}},76449:(e,n,r)=>{r.d(n,{A:()=>i});var l=r(96540),t=r(67814),s=r(88065),a=r(74848);const i=class extends l.PureComponent{render(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("p",{children:["One of ",(0,a.jsx)("code",{children:"'default' | 'primary' | 'secondary' | 'info' | 'success' | 'warning' | 'error' | 'dark' | 'light' | ColorValue"})]}),(0,a.jsxs)("table",{children:[(0,a.jsxs)("thead",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{rowSpan:2,children:"Name"}),(0,a.jsx)("th",{rowSpan:2,children:" Type"}),(0,a.jsx)("th",{rowSpan:2,children:" Value"}),(0,a.jsx)("th",{colSpan:2,children:"Preview"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"Light"}),(0,a.jsx)("th",{children:"Dark"})]})]}),(0,a.jsxs)("tbody",{children:[Object.keys(t.light).map(((e,n)=>(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:e}),(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:`theme.colors.${e}`})}),(0,a.jsxs)("td",{children:[(0,a.jsx)(s.A,{color:t.light[e]})," ",(0,a.jsx)("code",{style:{marginLeft:15},children:t.light[e]})]}),(0,a.jsxs)("td",{children:[(0,a.jsx)(s.A,{color:t.dark[e]})," ",(0,a.jsx)("code",{style:{marginLeft:15},children:t.dark[e]})]})]},n))),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{}),(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})}),(0,a.jsxs)("td",{colSpan:3,children:["Any ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})," chosen by developer."]})]})]})]})]})}}},85851:(e,n,r)=>{r.d(n,{A:()=>h});var l=r(96540),t=r(49489),s=r(7227),a=r(33986),i=r(74848);const h=class extends l.PureComponent{render(){return(0,i.jsxs)(t.A,{className:"demo-tabs",children:[(0,i.jsx)(s.A,{value:"preview",label:"Preview",default:!0,children:this.props.children}),(0,i.jsx)(s.A,{value:"code",label:"Code",children:(0,i.jsx)(a.A,{showLineNumbers:!0,language:"jsx",children:this.props.codeExample})})]})}}}}]);