"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[4798],{22475:(e,t,r)=>{r.d(t,{Ay:()=>i,RM:()=>l});var n=r(74848),s=r(28453),o=r(33986);const l=[{value:"Installation",id:"installation",level:2}];function a(e){const t={a:"a",h2:"h2",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsxs)(t.p,{children:["To use the ",(0,n.jsx)(t.strong,{children:e.title})," you need to download packages in your local storage, and then you must install the packages with npm locally.\r\nFor more details on how to install packages locally ",(0,n.jsx)(t.a,{href:"/flexnative/docs/getting-started/installation",children:"fallow this link"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Installing packages using npm:"}),"\n","\n",(0,n.jsx)(o.A,{language:"bash",children:`npm install C:/ReactNative/framework/${e.name}`})]})}function i(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},45006:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>h,toc:()=>m});var n=r(74848),s=r(28453),o=r(22475),l=r(49489),a=r(7227),i=r(30947);const c={sidebar_position:2,title:"Setup Theme Provider",last_update:{date:new Date("2024-09-24T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework"]},d=void 0,h={id:"getting-started/setup-ra-theme-provider",title:"Setup Theme Provider",description:"FlexNative ThemeProvider from FlexNative is a component that makes the theme available throughout your app.",source:"@site/docs/getting-started/setup-ra-theme-provider.mdx",sourceDirName:"getting-started",slug:"/getting-started/setup-ra-theme-provider",permalink:"/flexnative/docs/getting-started/setup-ra-theme-provider",draft:!1,unlisted:!1,editUrl:"https://github.com/RedonAlla/flexnative/edit/main/docs/getting-started/setup-ra-theme-provider.mdx",tags:[{inline:!1,label:"React",permalink:"/flexnative/docs/tags/react",description:"The library for web and native user interfaces."},{inline:!1,label:"React Native",permalink:"/flexnative/docs/tags/react-native",description:"Create native apps for Android, iOS, and more using React"},{inline:!1,label:"Expo",permalink:"/flexnative/docs/tags/expo",description:"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{inline:!1,label:"Framework",permalink:"/flexnative/docs/tags/framework",description:"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."}],version:"current",lastUpdatedAt:1727136e6,sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Setup Theme Provider",last_update:{date:"2024-09-24T00:00:00.000Z",author:"Redon Alla"},tags:["react","react-native","expo","framework"]},sidebar:"componentsSidebar",previous:{title:"Installation",permalink:"/flexnative/docs/getting-started/installation"},next:{title:"Theme",permalink:"/flexnative/docs/theme/"}},u={},m=[...o.RM,{value:"Using ThemeProvider",id:"using-themeprovider",level:2},{value:"Examples",id:"examples",level:3},{value:"ThemeProviderProps",id:"themeproviderprops",level:2},{value:"BaseTheme",id:"basetheme",level:3},{value:"Using ThemeContext",id:"using-themecontext",level:2},{value:"ThemeContextProps",id:"themecontextprops",level:3},{value:"BaseTheme&lt;TColors&gt;",id:"basethemetcolors",level:3},{value:"Examples",id:"examples-1",level:3}];function x(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"FlexNative ThemeProvider"})," from ",(0,n.jsx)(t.em,{children:"FlexNative"})," is a component that makes the theme available throughout your app.\r\nIt uses ",(0,n.jsx)(t.strong,{children:"React's Context API"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["If you are not familiar with React's Context we strongly suggest to follow ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://reactjs.org/docs/context.html",children:"this link"})})," before starting."]})}),"\n",(0,n.jsx)(o.Ay,{title:"FlexNative ThemeProvider",name:"@flexnative/theme-context"}),"\n",(0,n.jsx)(t.h2,{id:"using-themeprovider",children:"Using ThemeProvider"}),"\n",(0,n.jsxs)(t.p,{children:["ThemeProvider it is a ",(0,n.jsx)(t.em,{children:(0,n.jsx)(t.strong,{children:"Class React Component"})})," that let's passing/consuming theme from all components through the App.\r\nIt accepts a ",(0,n.jsx)(t.a,{href:"#themeproviderprops",children:"value prop"})," which is the data that will be shared with all components that are consumers of that context."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"ThemeProvider"})," wrap the top-level component of your application with a Provider component, thus making the context available to all its descendants."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"ThemeProvider"})," it comes with the base structure for implementing ",(0,n.jsx)(t.em,{children:"multiple themes"})," and supporting ",(0,n.jsx)(t.em,{children:"dark mode"}),"."]}),"\n",(0,n.jsx)(t.admonition,{title:"CAUTION",type:"danger",children:(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:(0,n.jsx)(t.strong,{children:"ThemeProvider"})})," it supports dark mode depending on the device's color scheme.\r\nYou also can implement you custom dark mode beheiver, for more details read section\r\n",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"/flexnative/docs/theme/examples",children:"ThemeProvider"})}),"."]})}),"\n",(0,n.jsxs)(t.p,{children:["To change default colors or add new colors fallow this link on ",(0,n.jsx)(t.a,{href:"/flexnative/docs/theme/customizing-theme",children:"how to change default colors"}),"\r\nor ",(0,n.jsx)(t.a,{href:"/flexnative/docs/theme/extend-theme",children:"how to add custom colors"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["To support dark mode fallow this link on ",(0,n.jsx)(t.a,{href:"/flexnative/docs/theme/examples",children:"how to implement dark mode using ThemeContext"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsxs)(t.p,{children:["Add ",(0,n.jsx)(t.strong,{children:"ThemeProvider"})," from ",(0,n.jsx)(t.em,{children:"FlexNative"})," to the root of your app and update App.js as follows examples."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",metastring:"showLineNumbers",children:"// highlight-next-line\r\nimport ThemeContext, { light } from '@flexnative/theme-context';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeContext.Provider value={{colors: themeColors}}>\r\n      <YourAPP />\r\n    </ThemeContext.Provider>\r\n  );\r\n}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"themeproviderprops",children:"ThemeProviderProps"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Default Value"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"colors"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"#themecontextprops",children:(0,n.jsx)(t.code,{children:"BaseTheme<TColors>"})})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.em,{children:(0,n.jsx)(t.strong,{children:"true"})})}),(0,n.jsx)(t.td,{children:"null"}),(0,n.jsxs)(t.td,{children:["Where ",(0,n.jsx)(t.strong,{children:"TColors"})," is the object with custom colors."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"colorScheme"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://reactnative.dev/docs/usecolorscheme#supported-color-schemes",children:(0,n.jsx)(t.code,{children:"ColorSchemeName"})})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"false"})}),(0,n.jsx)(t.td,{children:"null"}),(0,n.jsx)(t.td,{children:"Value indicates the current user preferred color scheme."})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"basetheme",children:"BaseTheme"}),"\n",(0,n.jsx)(i.A,{}),"\n",(0,n.jsx)(t.h2,{id:"using-themecontext",children:"Using ThemeContext"}),"\n",(0,n.jsxs)(t.p,{children:["ThemeContext it expects as ",(0,n.jsx)(t.code,{children:"value"})," an object of type ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"#themecontextprops",children:(0,n.jsx)(t.code,{children:"ThemeProviderProps<TColors>"})})}),".\r\nYou can use one of default themes ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"/docs/theme/default-heme#light-palette",children:"light"})})," or ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"/docs/theme/default-heme#dark-palette",children:"dark"})}),"\r\nfrom ",(0,n.jsx)(t.code,{children:"@flexnative/theme-context"})," or you can create your own theme as long you implements ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"#basetheme",children:(0,n.jsx)(t.code,{children:"ThemeBase"})})})," object."]}),"\n",(0,n.jsxs)(t.p,{children:["To change default colors or add new colors fallow this link on ",(0,n.jsx)(t.a,{href:"/docs/theme/@flexnative/theme-customizing-theme",children:"how to change default colors"}),"\r\nor ",(0,n.jsx)(t.a,{href:"/docs/theme/@flexnative/theme-customizing-theme",children:"how to add custom colors"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["To support dark mode fallow this link on ",(0,n.jsx)(t.a,{href:"/docs/theme/@flexnative/theme-dark-mod-theme",children:"how to implement dark mode using ThemeContext"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"themecontextprops",children:"ThemeContextProps"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Default Value"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"colors"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"#basethemetcolors",children:(0,n.jsx)(t.code,{children:"BaseTheme<TColors>"})})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"true"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"#basetheme",children:"BaseTheme"})}),(0,n.jsxs)(t.td,{children:["Where ",(0,n.jsx)(t.strong,{children:"TColors"})," object with custom colors"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"colorScheme"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"ColorSchemeName"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"false"})}),(0,n.jsx)(t.td,{children:"Device ColorScheme"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"ColorSchemeName"})," from ",(0,n.jsx)(t.code,{children:"react-native"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setTheme"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"(theme: BaseTheme & TColors) => void"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"false"})}),(0,n.jsx)(t.td,{children:"null"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"void function"})," for change all theme colors. It expect as parameter object of ",(0,n.jsx)(t.code,{children:"BaseTheme<TColors>"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setColorScheme"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"(colorScheme: ColorSchemeName) => void"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"false"})}),(0,n.jsx)(t.td,{children:"null"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"void function"})," for change schema (light/dark). It expect as parameter type of ",(0,n.jsx)(t.code,{children:"ColorSchemeName"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"basethemetcolors",children:"BaseTheme<TColors>"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"#basetheme",children:(0,n.jsx)(t.code,{children:"BaseTheme"})})," and ",(0,n.jsx)(t.code,{children:"TColors"})," custom extendet colors."]}),"\n",(0,n.jsx)(t.h3,{id:"examples-1",children:"Examples"}),"\n",(0,n.jsx)(t.p,{children:"Example of consuming Theme Context."}),"\n",(0,n.jsxs)(l.A,{children:[(0,n.jsx)(a.A,{value:"function-component",label:"Function Component",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",metastring:"showLineNumbers",children:"import { useThemeContext } from '@flexnative/theme-context';\r\n// highlight-next-line\r\nimport ThemeContext from '@flexnative/theme-context';\r\n\r\nfunction App() {\r\n  const theme = useThemeContext();\r\n\r\n  return (\r\n    <Text style={{ color: theme.colors.text}}>Example of consuming Theme Context.</Text>\r\n  );\r\n}\n"})})}),(0,n.jsx)(a.A,{value:"class-component",label:"Class Component",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",metastring:"showLineNumbers",children:"import React from 'react';\r\nimport { Text } from 'react-native';\r\n// highlight-next-line\r\nimport ThemeContext, { light } from '@flexnative/theme-context';\r\n\r\nclass App extends React.Component {\r\n  // highlight-start\r\n  static contextType = ThemeContext;\r\n  declare context: React.ContextType<typeof ThemeContext>;\r\n  // highlight-end\r\n\r\n  return (\r\n    <Text style={{ color: this.context.colors.text}}>Example of consuming Theme Context.</Text>\r\n  );\r\n}\n"})})})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}},7227:(e,t,r)=>{r.d(t,{A:()=>l});r(96540);var n=r(34164);const s={tabItem:"tabItem_Ymn6"};var o=r(74848);function l(e){let{children:t,hidden:r,className:l}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,l),hidden:r,children:t})}},49489:(e,t,r)=>{r.d(t,{A:()=>w});var n=r(96540),s=r(34164),o=r(24245),l=r(56347),a=r(36494),i=r(62814),c=r(45167),d=r(69900);function h(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:s}}=e;return{value:t,label:r,attributes:n,default:s}}))}(r);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function m(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function x(e){let{queryString:t=!1,groupId:r}=e;const s=(0,l.W6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,i.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(s.location.search);t.set(o,e),s.replace({...s.location,search:t.toString()})}),[o,s])]}function p(e){const{defaultValue:t,queryString:r=!1,groupId:s}=e,o=u(e),[l,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[c,h]=x({queryString:r,groupId:s}),[p,j]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,o]=(0,d.Dv)(r);return[s,(0,n.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:s}),f=(()=>{const e=c??p;return m({value:e,tabValues:o})?e:null})();(0,a.A)((()=>{f&&i(f)}),[f]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),h(e),j(e)}),[h,j,o]),tabValues:o}}var j=r(11062);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=r(74848);function v(e){let{className:t,block:r,selectedValue:n,selectValue:l,tabValues:a}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const t=e.currentTarget,r=i.indexOf(t),s=a[r].value;s!==n&&(c(t),l(s))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=i.indexOf(e.currentTarget)+1;t=i[r]??i[0];break}case"ArrowLeft":{const r=i.indexOf(e.currentTarget)-1;t=i[r]??i[i.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":r},t),children:a.map((e=>{let{value:t,label:r,attributes:o}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>i.push(e),onKeyDown:h,onClick:d,...o,className:(0,s.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function b(e){let{lazy:t,children:r,selectedValue:o}=e;const l=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===o));return e?(0,n.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function T(e){const t=p(e);return(0,g.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,g.jsx)(v,{...t,...e}),(0,g.jsx)(b,{...t,...e})]})}function w(e){const t=(0,j.A)();return(0,g.jsx)(T,{...e,children:h(e.children)},String(t))}},88065:(e,t,r)=>{r.d(t,{A:()=>o});var n=r(96540),s=r(74848);const o=class extends n.PureComponent{render(){return(0,s.jsx)("span",{className:"color-view",style:{backgroundColor:this.props.color.toString()}})}}},30947:(e,t,r)=>{r.d(t,{A:()=>a});var n=r(96540),s=r(67814),o=r(88065),l=r(74848);const a=class extends n.PureComponent{render(){return(0,l.jsxs)("table",{children:[(0,l.jsx)("thead",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"Name"}),(0,l.jsx)("th",{children:"Type"}),(0,l.jsx)("th",{children:"Required"}),(0,l.jsx)("th",{children:"Light Value"}),(0,l.jsx)("th",{children:"Dark Value"})]})}),(0,l.jsx)("tbody",{children:Object.keys(s.light).map(((e,t)=>(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:e}),(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:(0,l.jsx)("a",{href:"https://reactnative.dev/docs/colors",target:"_blank",children:"ColorValue"})})}),(0,l.jsx)("td",{children:(0,l.jsx)("strong",{children:"true"})}),(0,l.jsxs)("td",{children:[(0,l.jsx)(o.A,{color:s.light[e]})," ",(0,l.jsx)("code",{children:s.light[e]})]}),(0,l.jsxs)("td",{children:[(0,l.jsx)(o.A,{color:s.dark[e]})," ",(0,l.jsx)("code",{children:s.dark[e]})]})]},t)))})]})}}}}]);