"use strict";(self.webpackChunk_flexnative_framework_docks_3=self.webpackChunk_flexnative_framework_docks_3||[]).push([[6782],{48572:(e,r,l)=>{l.r(r),l.d(r,{assets:()=>ie,contentTitle:()=>te,default:()=>ce,frontMatter:()=>ne,metadata:()=>oe,toc:()=>se});var a=l(74848),n=l(28453),t=l(85851),o=l(96540),i=l(84199);const s=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"primary",color:"primary"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"dark",color:"dark"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"info",color:"info"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"warning",color:"warning"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"default",color:"default"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",color:"rgb(237, 20, 61)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",color:"hwb(349 8% 7%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",color:"hsl(349, 86%, 50%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"secondary",color:"secondary"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"light",color:"light"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"success",color:"success"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"error",color:"error"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"crimson",color:"crimson"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"#ed143d",color:"#ed143d"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",color:"rgba(237, 20, 61, 0.5)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",color:"hsla(349, 86%, 50% / 0.5)"})]})}},d="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:18:18\r\n * @ Description: Examples of TextBox component with different colors.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='primary' color='primary'/>\r\n        <TextBox material label='Label' placeholder='dark' color='dark'/>\r\n        <TextBox material label='Label' placeholder='info' color='info'/>\r\n        <TextBox material label='Label' placeholder='warning' color='warning' />\r\n        <TextBox material label='Label' placeholder='default' color='default'/>\r\n        <TextBox material label='Label' placeholder='rgb(237, 20, 61)' color='rgb(237, 20, 61)'/>\r\n        <TextBox material label='Label' placeholder='hwb(349 8% 7%)' color='hwb(349 8% 7%)'/>\r\n        <TextBox material label='Label' placeholder='hsl(349, 86%, 50%)' color='hsl(349, 86%, 50%)' />\r\n\r\n        <TextBox material label='Label' placeholder='secondary' color='secondary'/>\r\n        <TextBox material label='Label' placeholder='light' color='light'/>\r\n        <TextBox material label='Label' placeholder='success' color='success'/>\r\n        <TextBox material label='Label' placeholder='error' color='error'/>\r\n        <TextBox material label='Label' placeholder='crimson' color='crimson'/>\r\n        <TextBox material label='Label' placeholder='#ed143d' color='#ed143d'/>\r\n        <TextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' color='rgba(237, 20, 61, 0.5)'/>\r\n        <TextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' color='hsla(349, 86%, 50% / 0.5)' />\r\n      </div>\r\n    );\r\n  }\r\n}",c=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"crimson",borderColor:"crimson"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"#ed143d",borderColor:"#ed143d"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",borderColor:"hwb(349 8% 7%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61 / 0.5)",borderColor:"rgba(237, 20, 61 / 0.5)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",borderColor:"rgb(237, 20, 61)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",borderColor:"rgba(237, 20, 61, 0.5)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",borderColor:"hsl(349, 86%, 50%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",borderColor:"hsla(349, 86%, 50% / 0.5)"})]})}},x="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:41:55\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:17:55\r\n * @ Description: Examples of TextBox component with border colors.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='crimson' borderColor='crimson' />\r\n        <TextBox material label='Label' placeholder='#ed143d' borderColor='#ed143d' />\r\n        <TextBox material label='Label' placeholder='hwb(349 8% 7%)' borderColor='hwb(349 8% 7%)' />\r\n        <TextBox material label='Label' placeholder='rgba(237, 20, 61 / 0.5)' borderColor='rgba(237, 20, 61 / 0.5)' />\r\n\r\n        <TextBox material label='Label' placeholder='rgb(237, 20, 61)' borderColor='rgb(237, 20, 61)' />\r\n        <TextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' borderColor='rgba(237, 20, 61, 0.5)' />\r\n        <TextBox material label='Label' placeholder='hsl(349, 86%, 50%)' borderColor='hsl(349, 86%, 50%)' />\r\n        <TextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' borderColor='hsla(349, 86%, 50% / 0.5)' />\r\n      </div>\r\n    );\r\n  }\r\n}",m=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"crimson",activeBorderColor:"crimson"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"#ed143d",activeBorderColor:"#ed143d"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",activeBorderColor:"hwb(349 8% 7%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61 / 0.5)",activeBorderColor:"rgba(237, 20, 61 / 0.5)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",activeBorderColor:"rgb(237, 20, 61)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",activeBorderColor:"rgba(237, 20, 61, 0.5)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",activeBorderColor:"hsl(349, 86%, 50%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",activeBorderColor:"hsla(349, 86%, 50% / 0.5)"})]})}},p="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:47:01\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:17:21\r\n * @ Description: Examples of TextBox component in with active border colors.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='crimson' activeBorderColor='crimson' />\r\n        <TextBox material label='Label' placeholder='#ed143d' activeBorderColor='#ed143d' />\r\n        <TextBox material label='Label' placeholder='hwb(349 8% 7%)' activeBorderColor='hwb(349 8% 7%)' />\r\n        <TextBox material label='Label' placeholder='rgba(237, 20, 61 / 0.5)' activeBorderColor='rgba(237, 20, 61 / 0.5)' />\r\n\r\n        <TextBox material label='Label' placeholder='rgb(237, 20, 61)' activeBorderColor='rgb(237, 20, 61)' />\r\n        <TextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' activeBorderColor='rgba(237, 20, 61, 0.5)' />\r\n        <TextBox material label='Label' placeholder='hsl(349, 86%, 50%)' activeBorderColor='hsl(349, 86%, 50%)' />\r\n        <TextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' activeBorderColor='hsla(349, 86%, 50% / 0.5)' />\r\n      </div>\r\n    );\r\n  }\r\n}",b=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"none (default)",borderWidth:"none"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hairline",borderWidth:"hairline"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"thin",borderWidth:"thin"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"base",borderWidth:"base"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"thick",borderWidth:"thick"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"3",borderWidth:3})]})}},u="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 23:07:10\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:18:11\r\n * @ Description: Examples of TextBox component with borders width.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='none (default)' borderWidth='none' />\r\n        <TextBox material label='Label' placeholder='hairline' borderWidth='hairline' />\r\n        <TextBox material label='Label' placeholder='thin' borderWidth='thin' />\r\n        <TextBox material label='Label' placeholder='base' borderWidth='base' />\r\n        <TextBox material label='Label' placeholder='thick' borderWidth='thick' />\r\n        <TextBox material label='Label' placeholder='3' borderWidth={3}/>\r\n      </div>\r\n    );\r\n  }\r\n}",h=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"none",radius:"none"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"medium",radius:"medium"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"full radius",radius:"full"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"small",radius:"small"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"large",radius:"large"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"12",radius:12})]})}},f="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-15 22:50:56\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:18:05\r\n * @ Description: Examples of TextBox component border radius.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='none' radius='none'/>\r\n        <TextBox material label='Label' placeholder='medium' radius='medium'/>\r\n        <TextBox material label='Label' placeholder='full radius' radius='full'/>\r\n        <TextBox material label='Label' placeholder='small' radius='small'/>\r\n        <TextBox material label='Label' placeholder='large' radius='large' />\r\n        <TextBox material label='Label' placeholder='12' radius={12} />\r\n      </div>\r\n    );\r\n  }\r\n}",v=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"crimson",borderColor:"crimson"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"#ed143d",borderColor:"#ed143d"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",borderColor:"hwb(349 8% 7%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61 / 0.5)",borderColor:"rgba(237, 20, 61 / 0.5)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",borderColor:"rgb(237, 20, 61)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",borderColor:"rgba(237, 20, 61, 0.5)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",borderColor:"hsl(349, 86%, 50%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",borderColor:"hsla(349, 86%, 50% / 0.5)"})]})}},g="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-15 22:55:08\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:17:33\r\n * @ Description: Examples of TextBox component with background colors.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='crimson' borderColor='crimson' />\r\n        <TextBox material label='Label' placeholder='#ed143d' borderColor='#ed143d' />\r\n        <TextBox material label='Label' placeholder='hwb(349 8% 7%)' borderColor='hwb(349 8% 7%)' />\r\n        <TextBox material label='Label' placeholder='rgba(237, 20, 61 / 0.5)' borderColor='rgba(237, 20, 61 / 0.5)' />\r\n        <TextBox material label='Label' placeholder='rgb(237, 20, 61)' borderColor='rgb(237, 20, 61)' />\r\n        <TextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' borderColor='rgba(237, 20, 61, 0.5)' />\r\n        <TextBox material label='Label' placeholder='hsl(349, 86%, 50%)' borderColor='hsl(349, 86%, 50%)' />\r\n        <TextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' borderColor='hsla(349, 86%, 50% / 0.5)' />\r\n      </div>\r\n    );\r\n  }\r\n}",j=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"crimson",activeBackgroundColor:"crimson"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"#ed143d",activeBackgroundColor:"#ed143d"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hwb(349 8% 7%)",activeBackgroundColor:"hwb(349 8% 7%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61 / 0.5)",activeBackgroundColor:"rgba(237, 20, 61 / 0.5)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgb(237, 20, 61)",activeBackgroundColor:"rgb(237, 20, 61)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"rgba(237, 20, 61, 0.5)",activeBackgroundColor:"rgba(237, 20, 61, 0.5)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsl(349, 86%, 50%)",activeBackgroundColor:"hsl(349, 86%, 50%)"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"hsla(349, 86%, 50% / 0.5)",activeBackgroundColor:"hsla(349, 86%, 50% / 0.5)"})]})}},C="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-15 22:57:49\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:16:37\r\n * @ Description: Examples of TextBox component in with activeBackgroundColor property.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='crimson' activeBackgroundColor='crimson' />\r\n        <TextBox material label='Label' placeholder='#ed143d' activeBackgroundColor='#ed143d' />\r\n        <TextBox material label='Label' placeholder='hwb(349 8% 7%)' activeBackgroundColor='hwb(349 8% 7%)' />\r\n        <TextBox material label='Label' placeholder='rgba(237, 20, 61 / 0.5)' activeBackgroundColor='rgba(237, 20, 61 / 0.5)' />\r\n        <TextBox material label='Label' placeholder='rgb(237, 20, 61)' activeBackgroundColor='rgb(237, 20, 61)' />\r\n        <TextBox material label='Label' placeholder='rgba(237, 20, 61, 0.5)' activeBackgroundColor='rgba(237, 20, 61, 0.5)' />\r\n        <TextBox material label='Label' placeholder='hsl(349, 86%, 50%)' activeBackgroundColor='hsl(349, 86%, 50%)' />\r\n        <TextBox material label='Label' placeholder='hsla(349, 86%, 50% / 0.5)' activeBackgroundColor='hsla(349, 86%, 50% / 0.5)' />\r\n      </div>\r\n    );\r\n  }\r\n}",T=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"outlined",type:"outlined"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"underlined",type:"underlined"})]})}},y="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-15 23:00:34\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-17 20:00:05\r\n * @ Description: Examples of TextBox component with type properties.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='outlined' type='outlined' />\r\n        <TextBox material label='Label' placeholder='underlined' type='underlined' />\r\n      </div>\r\n    );\r\n  }\r\n}",L=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"small",size:"small"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"default",size:"default"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"medium",size:"medium"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"large",size:"large"})]})}},B="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-16 20:51:10\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:18:24\r\n * @ Description: Examples of TextBox component with different sizes.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='small' size='small' />\r\n        <TextBox material label='Label' placeholder='default' size='default' />\r\n        <TextBox material label='Label' placeholder='medium' size='medium' />\r\n        <TextBox material label='Label' placeholder='large' size='large' />\r\n      </div>\r\n    );\r\n  }\r\n}",w=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"outlined",type:"outlined",readOnly:!0}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"underlined",type:"underlined",readOnly:!0})]})}},A="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-16 20:53:54\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 21:11:15\r\n * @ Description: Examples of TextBox component in readonly state.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='outlined' type='outlined' readOnly />\r\n        <TextBox material label='Label' placeholder='underlined' type='underlined' readOnly />\r\n      </div>\r\n    );\r\n  }\r\n}";o.PureComponent;var S=l(71582),I=l(32533);const k=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,placeholder:"Input with text label",label:"Label"}),(0,a.jsx)(i.fI,{material:!0,placeholder:"Input with custom element as label",label:(0,a.jsx)(R,{})})]})}};function R(){return(0,a.jsxs)(S.EY,{style:P.label,children:[(0,a.jsx)(I.default,{name:"avatar",onPress:()=>"web"===S.OD.OS?alert("Custom Element as label"):S.Fc.alert("Alert Title","Custom Element as label",[{text:"OK"}])})," Custom Element Label"]})}const P=S.vv.create({label:{color:"crimson"},row:{columnGap:16,flexDirection:"row",width:"100%",backgroundColor:"transparent"},column:{flex:1,rowGap:16,alignContent:"center",justifyContent:"space-evenly",backgroundColor:"transparent"}}),E="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:18:50\r\n * @ Description: Examples of TextBox component with labels.\r\n */\r\n\r\nimport React from 'react';\r\nimport { StyleSheet, Text, Alert, Platform } from \"react-native\";\r\nimport Icon from '@flexnative/icons';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material placeholder='Input with text label' label=\"Label\" />\r\n        <TextBox material placeholder='Input with custom element as label' label={<Label />} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Label() {\r\n  const openAlert = () =>\r\n    Platform.OS === 'web'\r\n      ? alert('Custom Element as label')\r\n      : Alert.alert('Alert Title', 'Custom Element as label', [\r\n          {text: 'OK'},\r\n        ]);\r\n    \r\n  return <Text style={styles.label}>\r\n    <Icon name=\"avatar\" onPress={openAlert} /> Custom Element Label\r\n  </Text>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: 'crimson'\r\n  },\r\n  row: {\r\n    columnGap: 16,\r\n    flexDirection: \"row\",\r\n    width: '100%',\r\n    backgroundColor: 'transparent'\r\n  },\r\n  column: {\r\n    flex: 1,\r\n    rowGap: 16,\r\n    alignContent: 'center',\r\n    justifyContent: 'space-evenly',\r\n    backgroundColor: 'transparent'\r\n  }\r\n});",N=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,placeholder:"Style with StyleProp<TextStyle>",label:"Label",labelStyle:D.label}),(0,a.jsx)(i.fI,{material:!0,placeholder:"Style with function",label:"Label",labelStyle:M("rgb(35, 189, 224)","crimson")})]})}},M=(e,r)=>l=>[{color:l.focused?r:e}],D=S.vv.create({label:{color:"crimson"}}),V="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:19:04\r\n * @ Description: Examples of TextBox component with custom label styles.\r\n */\r\n\r\nimport React from 'react';\r\nimport { StyleSheet, ColorValue, StyleProp, TextStyle } from \"react-native\";\r\n// highlight-next-line\r\nimport { StateCallbackType, TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material placeholder='Style with StyleProp<TextStyle>' label=\"Label\" labelStyle={styles.label} />\r\n        <TextBox material placeholder='Style with function' label=\"Label\" labelStyle={labelStyles('rgb(35, 189, 224)', 'crimson')} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst labelStyles = (defaultColor: ColorValue, activeColor: ColorValue) => {\r\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\r\n    return [\r\n      {\r\n        color: state.focused ? activeColor : defaultColor\r\n      }\r\n    ]\r\n  }\r\n} \r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: 'crimson'\r\n  }\r\n});",_=class extends o.PureComponent{render(){return(0,a.jsx)("div",{className:"example-block form-input",children:(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"input with helper text",helperText:"Helper text"})})}},O="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:18:34\r\n * @ Description: Examples of TextBox component with helper text.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='input with helper text' helperText=\"Helper text\" />\r\n      </div>\r\n    );\r\n  }\r\n}",W=class extends o.PureComponent{render(){return(0,a.jsx)("div",{className:"example-block form-input",children:(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Max length",maxLength:15})})}},z="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 22:47:07\r\n * @ Description: Examples of TextBox component with max length, number of digits.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='Max length' maxLength={15} />\r\n      </div>\r\n    );\r\n  }\r\n}",q=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Input with icon prefix",prefix:"star"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Input with custom element as prefix",prefix:(0,a.jsx)(U,{})})]})}};function U(){return(0,a.jsx)(I.default,{name:"avatar",onPress:()=>"web"===S.OD.OS?alert("Custom Element as prefix"):S.Fc.alert("Alert Title","Custom Element as prefix",[{text:"OK"}])})}const F="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 22:51:08\r\n * @ Description: Examples of TextBox component with prefix.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Alert, Platform } from 'react-native';\r\nimport Icon from '@flexnative/icons';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='Input with icon prefix' prefix=\"star\" />\r\n        <TextBox material label='Label' placeholder='Input with custom element as prefix' prefix={<Prefix />} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Prefix() {\r\n  const openAlert = () =>\r\n    Platform.OS === 'web'\r\n      ? alert('Custom Element as prefix')\r\n      : Alert.alert('Alert Title', 'Custom Element as prefix', [\r\n          {text: 'OK'},\r\n        ]);\r\n    \r\n  return <Icon name=\"avatar\" onPress={openAlert} />;\r\n}",K=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Style with StyleProp<TextStyle>",prefix:"star",prefixStyle:G.prefix}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Style with function",prefix:"star",prefixStyle:$("rgb(35, 189, 224)","crimson")})]})}},$=(e,r)=>l=>[{color:l.focused?r:e}],G=S.vv.create({prefix:{color:"crimson"}}),H="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 22:54:54\r\n * @ Description: Examples of TextBox component with prefix with custom styles.\r\n */\r\n\r\nimport React from 'react';\r\nimport { ColorValue, StyleProp, StyleSheet, TextStyle } from \"react-native\";\r\n// highlight-next-line\r\nimport { TextBox, StateCallbackType } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='Style with StyleProp<TextStyle>' prefix=\"star\" prefixStyle={styles.prefix} />\r\n        <TextBox material label='Label' placeholder='Style with function' prefix=\"star\" prefixStyle={prefixStyle('rgb(35, 189, 224)', 'crimson')} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst prefixStyle = (defaultColor: ColorValue, activeColor: ColorValue) => {\r\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\r\n    return [\r\n      {\r\n        color: state.focused ? activeColor : defaultColor\r\n      }\r\n    ]\r\n  }\r\n} \r\n\r\nconst styles = StyleSheet.create({\r\n  prefix: {\r\n    color: 'crimson'\r\n  }\r\n});",Y=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Input with icon suffix",suffix:"star"}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Input with custom element as suffix",suffix:(0,a.jsx)(Z,{})})]})}};function Z(){return(0,a.jsx)(I.default,{name:"avatar",onPress:()=>"web"===S.OD.OS?alert("Custom Element as suffix"):S.Fc.alert("Alert Title","Custom Element as suffix",[{text:"OK"}])})}const J="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:04:40\r\n * @ Description: Examples of TextBox component with different colors.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Alert, Platform } from \"react-native\";\r\nimport Icon from '@flexnative/icons';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='Input with icon suffix' suffix=\"star\" />\r\n        <TextBox material label='Label' placeholder='Input with custom element as suffix' suffix={<Suffix />} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Suffix() {\r\n  const openAlert = () =>\r\n    Platform.OS === 'web'\r\n      ? alert('Custom Element as suffix')\r\n      : Alert.alert('Alert Title', 'Custom Element as suffix', [\r\n          {text: 'OK'},\r\n        ]);\r\n    \r\n  return <Icon name=\"avatar\" onPress={openAlert} />;\r\n}",X=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Style with StyleProp<TextStyle>",suffix:"star",suffixStyle:ee.prefix}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Style with function",suffix:"star",suffixStyle:Q("rgb(35, 189, 224)","crimson")})]})}},Q=(e,r)=>l=>[{color:l.focused?r:e}],ee=S.vv.create({prefix:{color:"crimson"}}),re="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:06:26\r\n * @ Description: Examples of TextBox component with Suffix with custom styles.\r\n */\r\n\r\nimport React from 'react';\r\nimport { StyleSheet, ColorValue, StyleProp, TextStyle } from \"react-native\";\r\n// highlight-next-line\r\nimport { TextBox, StateCallbackType } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='Style with StyleProp<TextStyle>' suffix=\"star\" suffixStyle={styles.prefix} />\r\n        <TextBox material label='Label' placeholder='Style with function' suffix=\"star\" suffixStyle={suffixStyle('rgb(35, 189, 224)', 'crimson')} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst suffixStyle = (defaultColor: ColorValue, activeColor: ColorValue) => {\r\n  return (state: StateCallbackType): StyleProp<TextStyle> => {\r\n    return [\r\n      {\r\n        color: state.focused ? activeColor : defaultColor\r\n      }\r\n    ]\r\n  }\r\n} \r\n\r\nconst styles = StyleSheet.create({\r\n  prefix: {\r\n    color: 'crimson'\r\n  }\r\n});",le=class extends o.PureComponent{render(){return(0,a.jsxs)("div",{className:"example-block form-input",children:[(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Prefix Separator",prefix:"avatar",prefixSeparator:!0}),(0,a.jsx)(i.fI,{material:!0,label:"Label",placeholder:"Suffix Separator",suffix:"avatar",suffixSeparator:!0})]})}},ae="/**\r\n * @ Author: Redon Alla\r\n * @ Create Time: 2024-10-14 22:35:25\r\n * @ Modified by: Redon Alla\r\n * @ Modified time: 2024-10-16 23:17:25\r\n * @ Description: Examples of TextBox component with AdornmentSeparator.\r\n */\r\n\r\nimport React from 'react';\r\n// highlight-next-line\r\nimport { TextBox } from '@flexnative/inputs';\r\n\r\n\r\nexport default class extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className='example-block form-input'>\r\n        <TextBox material label='Label' placeholder='Prefix Separator' prefix=\"avatar\" prefixSeparator />\r\n        <TextBox material label='Label' placeholder='Suffix Separator' suffix=\"avatar\" suffixSeparator />\r\n      </div>\r\n    );\r\n  }\r\n}",ne={title:"Material",sidebar_position:1,sidebar_class_name:"nav_icon material",last_update:{date:new Date("2024-09-24T00:00:00.000Z"),author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},te=void 0,oe={id:"components/inputs/text-box/material",title:"Material",description:"The following examples demonstrates the Text Boxes in action.",source:"@site/docs/components/inputs/text-box/material.mdx",sourceDirName:"components/inputs/text-box",slug:"/components/inputs/text-box/material",permalink:"/docs/components/inputs/text-box/material",draft:!1,unlisted:!1,editUrl:"https://github.com/RedonAlla/flexnative/edit/main/docs/components/inputs/text-box/material.mdx",tags:[{inline:!1,label:"React",permalink:"/docs/tags/react",description:"The library for web and native user interfaces."},{inline:!1,label:"React Native",permalink:"/docs/tags/react-native",description:"Create native apps for Android, iOS, and more using React"},{inline:!1,label:"Expo",permalink:"/docs/tags/expo",description:"Create universal native apps with React that run on Android, iOS, and the web. Iterate with confidence."},{inline:!1,label:"Framework",permalink:"/docs/tags/framework",description:"FlexNative is a component library that enables developers to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS, and the Web."},{inline:!1,label:"Component",permalink:"/docs/tags/component",description:"Create user interfaces from components."}],version:"current",lastUpdatedAt:1727136e6,sidebarPosition:1,frontMatter:{title:"Material",sidebar_position:1,sidebar_class_name:"nav_icon material",last_update:{date:"2024-09-24T00:00:00.000Z",author:"Redon Alla"},tags:["react","react-native","expo","framework","component"]},sidebar:"componentsSidebar",previous:{title:"Default",permalink:"/docs/components/inputs/text-box/default"},next:{title:"Skeleton Loading",permalink:"/docs/components/skeleton-loading/"}},ie={},se=[{value:"Usecase Examples",id:"usecase-examples",level:2},{value:"Colors",id:"colors",level:3},{value:"Border Colors",id:"border-colors",level:3},{value:"Active Border Colors",id:"active-border-colors",level:3},{value:"Border Width",id:"border-width",level:3},{value:"Border Radius",id:"border-radius",level:3},{value:"Background Color",id:"background-color",level:3},{value:"Active Background Color",id:"active-background-color",level:3},{value:"Type",id:"type",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Readonly",id:"readonly",level:3},{value:"Disabled",id:"disabled",level:3},{value:"Label",id:"label",level:3},{value:"Label Style",id:"label-style",level:3},{value:"Helper Text",id:"helper-text",level:3},{value:"Max Length",id:"max-length",level:3},{value:"Prefix",id:"prefix",level:3},{value:"Prefix Style",id:"prefix-style",level:3},{value:"Surfix",id:"surfix",level:3},{value:"Surfix Style",id:"surfix-style",level:3},{value:"Adornments Separator",id:"adornments-separator",level:3},{value:"Playground",id:"playground",level:2}];function de(e){const r={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r.p,{children:["The following examples demonstrates the ",(0,a.jsx)(r.strong,{children:"Text Boxes"})," in action."]}),"\n",(0,a.jsx)(r.admonition,{type:"warning",children:(0,a.jsx)(r.p,{children:"In documentation apprence of components may not be in correct way.\r\nTo view the component in exact design please view the demo app."})}),"\n",(0,a.jsx)(r.h2,{id:"usecase-examples",children:"Usecase Examples"}),"\n",(0,a.jsx)(r.p,{children:"Usecase Examples with material style."}),"\n",(0,a.jsx)(r.admonition,{title:"Caution",type:"danger",children:(0,a.jsxs)(r.p,{children:["For material style ",(0,a.jsx)(r.strong,{children:"label"})," it is required."]})}),"\n",(0,a.jsx)(r.h3,{id:"colors",children:"Colors"}),"\n",(0,a.jsx)(t.A,{codeExample:d,children:(0,a.jsx)(s,{})}),"\n",(0,a.jsx)(r.h3,{id:"border-colors",children:"Border Colors"}),"\n",(0,a.jsx)(t.A,{codeExample:x,children:(0,a.jsx)(c,{})}),"\n",(0,a.jsx)(r.h3,{id:"active-border-colors",children:"Active Border Colors"}),"\n",(0,a.jsx)(t.A,{codeExample:p,children:(0,a.jsx)(m,{})}),"\n",(0,a.jsx)(r.h3,{id:"border-width",children:"Border Width"}),"\n",(0,a.jsx)(t.A,{codeExample:u,children:(0,a.jsx)(b,{})}),"\n",(0,a.jsx)(r.h3,{id:"border-radius",children:"Border Radius"}),"\n",(0,a.jsx)(t.A,{codeExample:f,children:(0,a.jsx)(h,{})}),"\n",(0,a.jsx)(r.h3,{id:"background-color",children:"Background Color"}),"\n",(0,a.jsx)(t.A,{codeExample:g,children:(0,a.jsx)(v,{})}),"\n",(0,a.jsx)(r.h3,{id:"active-background-color",children:"Active Background Color"}),"\n",(0,a.jsx)(t.A,{codeExample:C,children:(0,a.jsx)(j,{})}),"\n",(0,a.jsx)(r.h3,{id:"type",children:"Type"}),"\n",(0,a.jsx)(t.A,{codeExample:y,children:(0,a.jsx)(T,{})}),"\n",(0,a.jsx)(r.h3,{id:"sizes",children:"Sizes"}),"\n",(0,a.jsx)(t.A,{codeExample:B,children:(0,a.jsx)(L,{})}),"\n",(0,a.jsx)(r.h3,{id:"readonly",children:"Readonly"}),"\n",(0,a.jsx)(t.A,{codeExample:A,children:(0,a.jsx)(w,{})}),"\n",(0,a.jsx)(r.h3,{id:"disabled",children:"Disabled"}),"\n",(0,a.jsx)(t.A,{codeExample:A,children:(0,a.jsx)(w,{})}),"\n",(0,a.jsx)(r.h3,{id:"label",children:"Label"}),"\n",(0,a.jsx)(t.A,{codeExample:E,children:(0,a.jsx)(k,{})}),"\n",(0,a.jsx)(r.h3,{id:"label-style",children:"Label Style"}),"\n",(0,a.jsx)(t.A,{codeExample:V,children:(0,a.jsx)(N,{})}),"\n",(0,a.jsx)(r.h3,{id:"helper-text",children:"Helper Text"}),"\n",(0,a.jsx)(t.A,{codeExample:O,children:(0,a.jsx)(_,{})}),"\n",(0,a.jsx)(r.h3,{id:"max-length",children:"Max Length"}),"\n",(0,a.jsx)(t.A,{codeExample:z,children:(0,a.jsx)(W,{})}),"\n",(0,a.jsx)(r.h3,{id:"prefix",children:"Prefix"}),"\n",(0,a.jsx)(t.A,{codeExample:F,children:(0,a.jsx)(q,{})}),"\n",(0,a.jsx)(r.h3,{id:"prefix-style",children:"Prefix Style"}),"\n",(0,a.jsx)(t.A,{codeExample:H,children:(0,a.jsx)(K,{})}),"\n",(0,a.jsx)(r.h3,{id:"surfix",children:"Surfix"}),"\n",(0,a.jsx)(t.A,{codeExample:J,children:(0,a.jsx)(Y,{})}),"\n",(0,a.jsx)(r.h3,{id:"surfix-style",children:"Surfix Style"}),"\n",(0,a.jsx)(t.A,{codeExample:re,children:(0,a.jsx)(X,{})}),"\n",(0,a.jsx)(r.h3,{id:"adornments-separator",children:"Adornments Separator"}),"\n",(0,a.jsx)(t.A,{codeExample:ae,children:(0,a.jsx)(le,{})}),"\n",(0,a.jsx)(r.h2,{id:"playground",children:"Playground"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"//Play with props to see live changes;\r\n\r\nrender(<TextBox\r\n    prefixSeparator\r\n    placeholder='Play with props to see live changes'\r\n    color='primary'\r\n    borderColor='crimson'\r\n    borderWidth='thick'\r\n    radius='full'\r\n    size='large'\r\n    prefix=\"star\"\r\n  />);\n"})})]})}function ce(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(de,{...e})}):de(e)}},7227:(e,r,l)=>{l.d(r,{A:()=>o});l(96540);var a=l(34164);const n={tabItem:"tabItem_Ymn6"};var t=l(74848);function o(e){let{children:r,hidden:l,className:o}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,a.A)(n.tabItem,o),hidden:l,children:r})}},49489:(e,r,l)=>{l.d(r,{A:()=>T});var a=l(96540),n=l(34164),t=l(24245),o=l(56347),i=l(36494),s=l(62814),d=l(45167),c=l(69900);function x(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:r,children:l}=e;return(0,a.useMemo)((()=>{const e=r??function(e){return x(e).map((e=>{let{props:{value:r,label:l,attributes:a,default:n}}=e;return{value:r,label:l,attributes:a,default:n}}))}(l);return function(e){const r=(0,d.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,l])}function p(e){let{value:r,tabValues:l}=e;return l.some((e=>e.value===r))}function b(e){let{queryString:r=!1,groupId:l}=e;const n=(0,o.W6)(),t=function(e){let{queryString:r=!1,groupId:l}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return l??null}({queryString:r,groupId:l});return[(0,s.aZ)(t),(0,a.useCallback)((e=>{if(!t)return;const r=new URLSearchParams(n.location.search);r.set(t,e),n.replace({...n.location,search:r.toString()})}),[t,n])]}function u(e){const{defaultValue:r,queryString:l=!1,groupId:n}=e,t=m(e),[o,s]=(0,a.useState)((()=>function(e){let{defaultValue:r,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:l}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${l.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const a=l.find((e=>e.default))??l[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:r,tabValues:t}))),[d,x]=b({queryString:l,groupId:n}),[u,h]=function(e){let{groupId:r}=e;const l=function(e){return e?`docusaurus.tab.${e}`:null}(r),[n,t]=(0,c.Dv)(l);return[n,(0,a.useCallback)((e=>{l&&t.set(e)}),[l,t])]}({groupId:n}),f=(()=>{const e=d??u;return p({value:e,tabValues:t})?e:null})();(0,i.A)((()=>{f&&s(f)}),[f]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);s(e),x(e),h(e)}),[x,h,t]),tabValues:t}}var h=l(11062);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=l(74848);function g(e){let{className:r,block:l,selectedValue:a,selectValue:o,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,t.a_)(),c=e=>{const r=e.currentTarget,l=s.indexOf(r),n=i[l].value;n!==a&&(d(r),o(n))},x=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const l=s.indexOf(e.currentTarget)+1;r=s[l]??s[0];break}case"ArrowLeft":{const l=s.indexOf(e.currentTarget)-1;r=s[l]??s[s.length-1];break}}r?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":l},r),children:i.map((e=>{let{value:r,label:l,attributes:t}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===r?0:-1,"aria-selected":a===r,ref:e=>s.push(e),onKeyDown:x,onClick:c,...t,className:(0,n.A)("tabs__item",f.tabItem,t?.className,{"tabs__item--active":a===r}),children:l??r},r)}))})}function j(e){let{lazy:r,children:l,selectedValue:t}=e;const o=(Array.isArray(l)?l:[l]).filter(Boolean);if(r){const e=o.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map(((e,r)=>(0,a.cloneElement)(e,{key:r,hidden:e.props.value!==t})))})}function C(e){const r=u(e);return(0,v.jsxs)("div",{className:(0,n.A)("tabs-container",f.tabList),children:[(0,v.jsx)(g,{...r,...e}),(0,v.jsx)(j,{...r,...e})]})}function T(e){const r=(0,h.A)();return(0,v.jsx)(C,{...e,children:x(e.children)},String(r))}},85851:(e,r,l)=>{l.d(r,{A:()=>s});var a=l(96540),n=l(49489),t=l(7227),o=l(33986),i=l(74848);const s=class extends a.PureComponent{render(){return(0,i.jsxs)(n.A,{className:"demo-tabs",children:[(0,i.jsx)(t.A,{value:"preview",label:"Preview",default:!0,children:this.props.children}),(0,i.jsx)(t.A,{value:"code",label:"Code",children:(0,i.jsx)(o.A,{showLineNumbers:!0,language:"jsx",children:this.props.codeExample})})]})}}}}]);